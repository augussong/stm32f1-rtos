


ARM Macro Assembler    Page 1 


    1 00000000         ;ÓÃµ½µÄ»ã±àÓï·¨
    2 00000000         ;EQU Ìæ»»Óï¾ä£¬ÀàËÆ#define
    3 00000000         ;EXTERN ÉùÃ÷Óï¾ä
    4 00000000         ;EXPORT µ¼³öÓï¾ä£»
    5 00000000         ;LDR    load register ×°ÔØÓï¾ä£¬ÀàËÆmov
    6 00000000         ;CBZ    ±È½Ï£¬Èç¹û½á¹ûÎª0 ¾Í×ªÒÆ
    7 00000000         ;STR    °ÑÒ»¸ö¼Ä´æÆ÷°´×Ö´æ´¢µ½´æ´¢Æ÷ÖÐ
    8 00000000         ;MSR    ÌØÊâ¼Ä´æÆ÷µÄÐ´Èë£¬±ÈÈçPSP
    9 00000000         ;CPSIE  Ê¹ÄÜPRIMASK
   10 00000000         ;CPSID  Ê§ÄÜPRIMASK
   11 00000000         ;SUB    ¼õ
   12 00000000         ;ADD    ¼Ó
   13 00000000         ;STM    ´æ´¢Èô¸É¼Ä´æÆ÷ÖÐµÄ×Öµ½Ò»Æ¬Á¬ÐøµÄµØÖ·¿Õ¼äÖÐ£¬×ÔÔö
                       ÐÍ
   14 00000000         ;LDM    ´ÓÒ»Æ¬Á¬ÐøµÄµØÖ·¿Õ¼äÖÐ¼ÓÔØ¶à¸ö×Öµ½Èô¸É¼Ä´æÆ÷
   15 00000000         ;B      ÎÞÌõ¼þ×ªÒÆ
   16 00000000         ;BL     Ìø×ª²¢Á´½ÓLR¼Ä´æÆ÷£¨ÓÃÓÚº¯Êý·µ»Ø£©£¨£©
   17 00000000         ;LR     Á´½Ó¼Ä´æÆ÷£¬ÔÚPCÖ¸ÕëÌø×ªµ½º¯ÊýÇ°£¬´æ´¢PCÖ¸ÕëµÄÖµ
                       
   18 00000000         ;END    »ã±àÓïÑÔ½áÊø
   19 00000000         ;MRS/MSR    ÓÃÓÚ¶Á/Ð´ÌØÊâ¹¦ÄÜ¼Ä´æÆ÷£¨PRIMASK¡¢FAULTMASK¡
                       ¢SP£©µ½Í¨ÓÃ¼Ä´æÆ÷ÖÐ
   20 00000000         ;¸ü¶àÖ¸Áî²éÔÄCortexÈ¨ÍþÖ¸ÄÏ£¬×¢Òâ£ºÖ¸Áî¼¯Ö§³Öºó×º£¬Òò´ËÈ
                       ç¹ûÕÒ²»µ½ÍêÈ«Ò»ÖÂµÄÖ¸Áî£¬¿ÉÒÔ×¢ÒâÓÐÃ»ÓÐ½üËÆÆ¥ÅäµÄÖ¸Áî¡£
   21 00000000         
   22 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04  ; ÖÐ¶Ï¿ØÖÆ¼°×´Ì¬¼Ä´
                                                            æÆ÷Interrupt contro
                                                            l state register.£¨
                                                            µÚ28bitÖÃ1ÉèÁ¢PendS
                                                            VÖÐ¶Ï£©
   23 00000000 E000ED22 
                       NVIC_SYSPRI14
                               EQU              0xE000ED22  ; PendSVµÄÓÅÏÈ¼¶¼Ä´
                                                            æÆ÷ (priority 14).
   24 00000000 000000FF 
                       NVIC_PENDSV_PRI
                               EQU              0xFF        ; PendSVÓÅÏÈ¼¶ÖµPen
                                                            dSV priority value 
                                                            (lowest).
   25 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000  ; Ð´NVIC_PENDSVSETµ
                                                            ½NVIC_INT_CTRL¼´¿É´
                                                            ¥·¢PendSVÖÐ¶ÏValue 
                                                            to trigger PendSV e
                                                            xception.
   26 00000000         
   27 00000000         ;²»ÖªµÀ¸ÉÂïµÄ
   28 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   29 00000000                 THUMB                        ;THUMBÖ¸Áî¼¯£¿
   30 00000000                 REQUIRE8
   31 00000000                 PRESERVE8
   32 00000000         
   33 00000000         ;Íâ²¿±äÁ¿ÉùÃ÷
   34 00000000                 EXTERN           g_OS_CPU_ExceptStkBase
   35 00000000                 EXTERN           g_OS_Tcb_CurP



ARM Macro Assembler    Page 2 


   36 00000000                 EXTERN           g_OS_Tcb_HighRdyP
   37 00000000         
   38 00000000         ;º¯Êý½Ó¿Úµ¼³ö
   39 00000000                 EXPORT           OSCtxSw
   40 00000000                 EXPORT           OSStart_Asm
   41 00000000                 EXPORT           PendSV_Handler
   42 00000000                 EXPORT           OS_CPU_SR_Save
   43 00000000                 EXPORT           OS_CPU_SR_Restore
   44 00000000         
   45 00000000         OS_CPU_SR_Save
   46 00000000 F3EF 8010       MRS              R0, PRIMASK ; PRIMASKÊÇ1bitÖÐ¶Ï
                                                            ÑÚÂë¼Ä´æÆ÷£¬ÖÃ1Ê±¹Ø
                                                            ±Õ³ýFAULTºÍNMIÍâËùÓ
                                                            ÐÖÐ¶Ï£¬Ïàµ±ÓÚ±£´æÖÐ
                                                            ¶Ï¿ª¹Ø×´Ì¬
   47 00000004 B672            CPSID            I           ; ¹Ø±ÕËùÓÐÖÐ¶Ï
   48 00000006 4770            BX               LR          ; º¯Êý·µ»Ø¡£
   49 00000008         
   50 00000008         OS_CPU_SR_Restore
   51 00000008 F380 8810       MSR              PRIMASK, R0
   52 0000000C 4770            BX               LR
   53 0000000E         
   54 0000000E         ;ÉÏÏÂÎÄÇÐ»»
   55 0000000E         ;Ë¼¿¼£ºuCOSÖÐOSCtxSwºÍOSIntCtxSwÓÐÊ²Ã´ÓÃ£¿ËûÃÇÎªÊ²Ã´Ãû×Ö
                       ÉÏÓÐÇø±ð¶øÄÚÈÝÉÏÈ´ÎÞÇø±ðÄØ£¿Ê²Ã´Çé¿öÏÂÄÚÈÝÉÏ»áÓÐÇø±ðÄØ£¿
                       
   56 0000000E         OSCtxSw
   57 0000000E 4817            LDR              R0, =NVIC_INT_CTRL 
                                                            ;NVIC_INT_CTRL´«R0
   58 00000010 F04F 5180       LDR              R1, =NVIC_PENDSVSET 
                                                            ;NVIC_PENDSVSET´«R1
                                                            
   59 00000014 6001            STR              R1, [R0]    ;R1µÄÖµ´æ´¢µ½R0Ëù´æ
                                                            µØÖ·Ö¸ÏòµÄÎ»ÖÃÖÐÈ¥£
                                                            ¨¼ä½ÓÑ°Ö·£©
   60 00000016 4770            BX               LR          ;º¯Êý·µ»Ø£¬PendSVÖÐ
                                                            ¶Ï±»Ðü¹Ò£¨Ê¹ÄÜ£©£¬µ
                                                            È´ý´¥·¢¡£Enable int
                                                            errupts at processo
                                                            r level
   61 00000018         
   62 00000018         ;OSÆô¶¯£¨³õÊ¼»¯PendSV£»³õÊ¼»¯PSP¡¢MSP£»Éè¶¨PendSV´¥·¢±êÖ
                       ¾£©
   63 00000018         OSStart_Asm
   64 00000018 4815            LDR              R0, =NVIC_SYSPRI14 ; ÅäÖÃPendSV
                                                            Òì³£µÄÓÅÏÈ¼¶£¨³õÊ¼»
                                                            ¯£©Set the PendSV e
                                                            xception priority
   65 0000001A F04F 01FF       LDR              R1, =NVIC_PENDSV_PRI
   66 0000001E 7001            STRB             R1, [R0]
   67 00000020         
   68 00000020 2000            MOVS             R0, #0      ; PSPÖ¸Õë³õÊ¼»¯Îª0¡
                                                            £Set the PSP to 0 f
                                                            or initial context 
                                                            switch call
   69 00000022 F380 8809       MSR              PSP, R0
   70 00000026         
   71 00000026 4813            LDR              R0, =g_OS_CPU_ExceptStkBase ; M
                                                            SPÖ¸Õë³õÊ¼»¯Îªg_OS_



ARM Macro Assembler    Page 3 


                                                            CPU_ExceptStkBase´¦
                                                            ¡£Initialize the MS
                                                            P to the OS_CPU_Exc
                                                            eptStkBase
   72 00000028 6801            LDR              R1, [R0]
   73 0000002A F381 8808       MSR              MSP, R1
   74 0000002E         
   75 0000002E 480F            LDR              R0, =NVIC_INT_CTRL ; ¼ûOSCtxSwº
                                                            ¯Êý½âÊÍ¡£Trigger th
                                                            e PendSV exception 
                                                            (causes context swi
                                                            tch)
   76 00000030 F04F 5180       LDR              R1, =NVIC_PENDSVSET
   77 00000034 6001            STR              R1, [R0]
   78 00000036         
   79 00000036 B662            CPSIE            I           ; Ê¹ÄÜÖÐ¶Ï¡£Enable 
                                                            interrupts at proce
                                                            ssor level
   80 00000038         
   81 00000038         OSStartHang
   82 00000038 E7FE            B                OSStartHang ; Ò»¸öËÀÑ­»·£¬²»Ó¦¸
                                                            ÃÒ»Ö±ÔÚÕâÖ´ÐÐ¡£Shou
                                                            ld never get here
   83 0000003A         
   84 0000003A         
   85 0000003A         
   86 0000003A         PendSV_Handler
   87 0000003A B672            CPSID            I           ; ¹Ø±ÕÈ«¾ÖÖÐ¶Ï¡£Pre
                                                            vent interruption d
                                                            uring context switc
                                                            h
   88 0000003C F3EF 8009       MRS              R0, PSP     ; ¶ÁÈ¡PSPµ½R0¡£PSP 
                                                            is process stack po
                                                            inter
   89 00000040 B128            CBZ              R0, OS_CPU_PendSVHandler_nosave
 
                                                            ; ÅÐ¶ÏR0ÊÇ²»ÊÇ0£¬ÊÇ
                                                            0µÄ»°Ìø×ªµ½nosave±ê
                                                            Ç©È¥£¬ÒòÎªÊÇ0ÔòÊÇÊ×
                                                            ´ÎÖ´ÐÐ
   90 00000042         ;£¬ÎÞÐè±£´æÉÏÎÄ£¬Ö±½ÓÇÐ»»ÏÂÎÄ¼´¿É¡£Skip register save th
                       e first time
   91 00000042         ;±£´æÉÏÎÄ
   92 00000042 3820            SUBS             R0, R0, #0x20 ; R0¼õ0x20=32ÍùµÍ
                                                            µØÖ·Æ«ÒÆ8¸ö¼Ä´æÆ÷*4
                                                            ×Ö½Ú³¤¶È£¬ÒÔ±£´æÊ£Ó
                                                            àµÄ8¸ö¼Ä´æÆ÷¡£Save 
                                                            remaining regs r4-1
                                                            1 on process stack
   93 00000044 E880 0FF0       STM              R0, {R4-R11} ; ½«R4-R11µÄÊý¾Ý´æ
                                                            ´¢µ½R0Ëù±ê¼Ç¿ªÊ¼µÄµ
                                                            ØÖ·ÖÐÈ¥£¬Ã¿´Î´æ´¢»á
                                                            µ¼ÖÂµØÖ·+4£¬µ«R0±¾É
                                                            í²»±ä¡£ËµÃ÷£ºÔÚ½øÖÐ
                                                            ¶ÏÊ±PSPÖ¸Õë»á×Ô¶¯Ëæ
                                                            ×ÅÈëÕ»Æ«ÒÆ£¬µ«ÊÇÎÒÃ
                                                            ÇµÄÈÎÎñ¿ØÖÆ¿éÀïµÄÕ»
                                                            Ö¸Õë±äÁ¿²»»á×Ô¶¯±ä»
                                                            ¯£¬Òò´ËÒªÊÖ¶¯°ÑËüµ÷



ARM Macro Assembler    Page 4 


                                                            ÕûÒ»ÏÂ
   94 00000048         
   95 00000048 490B            LDR              R1, =g_OS_Tcb_CurP ; °Ñg_OS_Tcb
                                                            _CurPµØÖ·´«¸øR1£¬g_
                                                            OS_Tcb_CurPÖ¸ÏòµÄÊÇ
                                                            Ò»¸öTCB½á¹¹
   96 0000004A 6809            LDR              R1, [R1]    ; ¼ä½ÓÑ°Ö·£¬»ñÈ¡TCB
                                                            ½á¹¹£¬¸Ã½á¹¹ÌåµÄµÚÒ
                                                            »¸ö±äÁ¿¾ÍÊÇ´æÕ»Ö¸Õë
                                                            £¨Õ»¶¥µØÖ·£©µÄ±äÁ¿£
                                                            ©Òò´ËÆäÊµÊÇ´«µÄ´æÕ»
                                                            Ö¸ÕëµÄ±äÁ¿OSTCBCur-
                                                            >OSTCBStkPtr = SP;
   97 0000004C 6008            STR              R0, [R1]    ; »ñÈ¡´æÕ»Ö¸ÕëµÄ±äÁ
                                                            ¿£¬²¢½«µ±Ç°PSPÖ¸Õë´
                                                            æ½øÈ¥£¬ÉÏÎÄ±£´æÍê³É
                                                            ¡£R0 is SP of proce
                                                            ss being switched o
                                                            ut
   98 0000004E         
   99 0000004E         ;ÇÐ»»ÏÂÎÄ                                   ; At this po
                       int, entire context of process has been saved
  100 0000004E         OS_CPU_PendSVHandler_nosave
  101 0000004E 480A            LDR              R0, =g_OS_Tcb_CurP ; »ñÈ¡´æ´¢µ±
                                                            Ç°ÈÎÎñ¿ØÖÆ¿éµØÖ·µÄ±
                                                            äÁ¿£¬OSTCBCur  = OS
                                                            TCBHighRdy;  £¨×¢Òâ
                                                            ¡°µØÖ·¡±Á½¸ö×ÖµÄÎ»Ö
                                                            Ã£©
  102 00000050 490A            LDR              R1, =g_OS_Tcb_HighRdyP ; »ñÈ¡´æ
                                                            ´¢¾ÍÐ÷ÈÎÎñ¿ØÖÆ¿éµØÖ
                                                            ·µÄ±äÁ¿
  103 00000052 680A            LDR              R2, [R1]    ; »ñÈ¡¾ÍÐ÷ÈÎÎñ¿ØÖÆ¿
                                                            éµØÖ·£¬´æÈëR2
  104 00000054 6002            STR              R2, [R0]    ; ½«¾ÍÐ÷ÈÎÎñ¿ØÖÆ¿éµ
                                                            ØÖ·¸³Öµ¸øµ±Ç°ÈÎÎñ¿Ø
                                                            ÖÆ¿é£¨Ë¢ÐÂµ±Ç°ÈÎÎñ£
                                                            ©
  105 00000056         
  106 00000056 6810            LDR              R0, [R2]    ; »ñÈ¡Õ»¶¥µØÖ·²¢¼ÓÔ
                                                            Ø½øR0¡£R0 is new pr
                                                            ocess SP; SP = OSTC
                                                            BHighRdy->OSTCBStkP
                                                            tr;
  107 00000058         
  108 00000058 E890 0FF0       LDM              R0, {R4-R11} ; ½«R0Ëù±êµØÖ·¿ªÊ¼
                                                            µÄÊý¾ÝÒÀ´Î¶ÁÈë8¸ö¼Ä
                                                            ´æÆ÷R4-R11¡£Ã¿¶ÁÒ»´
                                                            Î£¬µØÖ·»á+4£¨µ«R0²»
                                                            ±ä£©¡£Restore r4-11
                                                             from new process s
                                                            tack
  109 0000005C 3020            ADDS             R0, R0, #0x20 ; R0Ôö´ó0x20=32£¨
                                                            ÒòÎªÇ°Ãæ»Ö¸´ÁË8¸ö¼Ä
                                                            ´æÆ÷£¬1¸ö¼Ä´æÆ÷Õ¼4B
                                                            yte£©
  110 0000005E         
  111 0000005E F380 8809       MSR              PSP, R0     ; ÐÂµÄR0£¨ÐÂµÄÕ»¶¥µ
                                                            ØÖ·£©´«¸øPSPÖ¸Õë¡£L



ARM Macro Assembler    Page 5 


                                                            oad PSP with new pr
                                                            ocess SP  
  112 00000062 F04E 0E04       ORR              LR, LR, #0x04 ; ÖØÒª£ºÈ·±£Òì³£·
                                                            µ»ØºóÊ¹ÓÃPSPÖ¸Õë£¬¶
                                                            ø²»ÊÇMSPÖ¸Õë¡£LRºÍ0
                                                            x04»òÔËËãºó´æ´¢ÔÚLR
                                                            ÖÐ¡£µ±CM3ÏìÓ¦Òì³£ºó
                                                            LR½«±»ÖØÐÂ½âÊÍ£¬²»Ô
                                                            ÙÊÇÆÕÍ¨µÄ×Ó³ÌÐò·µ»Ø
                                                            Öµ£¬ÏêÏ¸½âÊÍ²Î¼û¡¶È
                                                            ¨ÍþÖ¸ÄÏ¡·µÚ¾ÅÕÂÔ¼Ç°
                                                            10Ò³ÄÚÈÝ¡£Ensure ex
                                                            ception return uses
                                                             process stack
  113 00000066         
  114 00000066 B662            CPSIE            I           ; Æô¶¯ÖÐ¶Ï
  115 00000068 4770            BX               LR          ; ·µ»Ø×Ó³ÌÐòExcepti
                                                            on return will rest
                                                            ore remaining conte
                                                            xt
  116 0000006A         
  117 0000006A                 END
              00 00 E000ED04 
              E000ED22 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=..\..\output\os_port.d -o..\..\output\os_port.o -I.\RTE\_Led -I"C:
\Program Files\0Software\Keil_v5\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include" 
-I"C:\Program Files\0Software\Keil_v5\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device
\Include" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 5
28" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" --list=..\..\l
isting\os_port.lst ..\..\User\os_port.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 28 in file ..\..\User\os_port.asm
   Uses
      None
Comment: .text unused
OSCtxSw 0000000E

Symbol: OSCtxSw
   Definitions
      At line 56 in file ..\..\User\os_port.asm
   Uses
      At line 39 in file ..\..\User\os_port.asm
Comment: OSCtxSw used once
OSStartHang 00000038

Symbol: OSStartHang
   Definitions
      At line 81 in file ..\..\User\os_port.asm
   Uses
      At line 82 in file ..\..\User\os_port.asm
Comment: OSStartHang used once
OSStart_Asm 00000018

Symbol: OSStart_Asm
   Definitions
      At line 63 in file ..\..\User\os_port.asm
   Uses
      At line 40 in file ..\..\User\os_port.asm
Comment: OSStart_Asm used once
OS_CPU_PendSVHandler_nosave 0000004E

Symbol: OS_CPU_PendSVHandler_nosave
   Definitions
      At line 100 in file ..\..\User\os_port.asm
   Uses
      At line 89 in file ..\..\User\os_port.asm
Comment: OS_CPU_PendSVHandler_nosave used once
OS_CPU_SR_Restore 00000008

Symbol: OS_CPU_SR_Restore
   Definitions
      At line 50 in file ..\..\User\os_port.asm
   Uses
      At line 43 in file ..\..\User\os_port.asm
Comment: OS_CPU_SR_Restore used once
OS_CPU_SR_Save 00000000

Symbol: OS_CPU_SR_Save
   Definitions
      At line 45 in file ..\..\User\os_port.asm
   Uses
      At line 42 in file ..\..\User\os_port.asm
Comment: OS_CPU_SR_Save used once
PendSV_Handler 0000003A

Symbol: PendSV_Handler



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 86 in file ..\..\User\os_port.asm
   Uses
      At line 41 in file ..\..\User\os_port.asm
Comment: PendSV_Handler used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 22 in file ..\..\User\os_port.asm
   Uses
      At line 57 in file ..\..\User\os_port.asm
      At line 75 in file ..\..\User\os_port.asm

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 25 in file ..\..\User\os_port.asm
   Uses
      At line 58 in file ..\..\User\os_port.asm
      At line 76 in file ..\..\User\os_port.asm

NVIC_PENDSV_PRI 000000FF

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 24 in file ..\..\User\os_port.asm
   Uses
      At line 65 in file ..\..\User\os_port.asm
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI14 E000ED22

Symbol: NVIC_SYSPRI14
   Definitions
      At line 23 in file ..\..\User\os_port.asm
   Uses
      At line 64 in file ..\..\User\os_port.asm
Comment: NVIC_SYSPRI14 used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

g_OS_CPU_ExceptStkBase 00000000

Symbol: g_OS_CPU_ExceptStkBase
   Definitions
      At line 34 in file ..\..\User\os_port.asm
   Uses
      At line 71 in file ..\..\User\os_port.asm
Comment: g_OS_CPU_ExceptStkBase used once
g_OS_Tcb_CurP 00000000

Symbol: g_OS_Tcb_CurP
   Definitions
      At line 35 in file ..\..\User\os_port.asm
   Uses
      At line 95 in file ..\..\User\os_port.asm
      At line 101 in file ..\..\User\os_port.asm

g_OS_Tcb_HighRdyP 00000000

Symbol: g_OS_Tcb_HighRdyP
   Definitions
      At line 36 in file ..\..\User\os_port.asm
   Uses
      At line 102 in file ..\..\User\os_port.asm
Comment: g_OS_Tcb_HighRdyP used once
3 symbols
351 symbols in table
