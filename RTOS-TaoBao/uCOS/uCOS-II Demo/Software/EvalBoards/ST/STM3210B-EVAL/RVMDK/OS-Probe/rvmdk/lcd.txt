; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\rvmdk\lcd.o --asm_dir=.\rvmdk\ --list_dir=.\rvmdk\ --depend=.\rvmdk\lcd.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime --diag_suppress=9931 -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I.\RTE\_Flash -I"C:\Program Files\0Software\Keil_v5\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -I"C:\Program Files\0Software\Keil_v5\ARM\CMSIS\Include" -I"C:\Program Files\0Software\Keil_v5\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0" -D__MICROLIB -D__UVISION_VERSION=528 -DSTM32F10X_MD --omf_browse=.\rvmdk\lcd.crf ..\BSP\lcd.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Delay PROC
;;;53     *******************************************************************************/
;;;54     void  Delay (u32 nCount)
000000  b081              SUB      sp,sp,#4
;;;55     {
;;;56         volatile  int  i;
;;;57     
;;;58     
;;;59         for (i = 0; i < nCount * 100; i++) {
000002  2100              MOVS     r1,#0
000004  9100              STR      r1,[sp,#0]
000006  eb0001c0          ADD      r1,r0,r0,LSL #3
00000a  eb011000          ADD      r0,r1,r0,LSL #4
00000e  e002              B        |L1.22|
                  |L1.16|
000010  9900              LDR      r1,[sp,#0]
000012  1c49              ADDS     r1,r1,#1
000014  9100              STR      r1,[sp,#0]
                  |L1.22|
000016  9900              LDR      r1,[sp,#0]
000018  ebb10f80          CMP      r1,r0,LSL #2
00001c  d3f8              BCC      |L1.16|
;;;60             ;
;;;61         }
;;;62     }
00001e  b001              ADD      sp,sp,#4
000020  4770              BX       lr
;;;63     /*******************************************************************************
                          ENDP

                  StrLength PROC
;;;69     *******************************************************************************/
;;;70     static u32 StrLength(u8 *Str)
000022  2100              MOVS     r1,#0
;;;71     {
000024  e001              B        |L1.42|
                  |L1.38|
;;;72       u32 Index = 0;
;;;73     
;;;74       /* Increment the Index unless the end of string */
;;;75       for(Index = 0; *Str != '\0'; Str++, Index++)
000026  1c40              ADDS     r0,r0,#1
000028  1c49              ADDS     r1,r1,#1
                  |L1.42|
00002a  7802              LDRB     r2,[r0,#0]
00002c  2a00              CMP      r2,#0
00002e  d1fa              BNE      |L1.38|
;;;76       {
;;;77       }
;;;78     
;;;79       return Index;
000030  4608              MOV      r0,r1
;;;80     }
000032  4770              BX       lr
;;;81     
                          ENDP

                  LCD_CtrlLinesWrite PROC
;;;1245   *******************************************************************************/
;;;1246   void LCD_CtrlLinesWrite(GPIO_TypeDef* GPIOx, u16 CtrlPins, BitAction BitVal)
000034  f7ffbffe          B.W      GPIO_WriteBit
;;;1247   {
;;;1248     /* Set or Reset the control line */
;;;1249     GPIO_WriteBit(GPIOx, CtrlPins, BitVal);
;;;1250   }
;;;1251   
                          ENDP

                  LCD_WriteRegHX8312 PROC
;;;1031   *******************************************************************************/
;;;1032   static void LCD_WriteRegHX8312(u8 LCD_Reg, u8 LCD_RegValue)
000038  b570              PUSH     {r4-r6,lr}
;;;1033   {
00003a  4605              MOV      r5,r0
00003c  460c              MOV      r4,r1
;;;1034     u16 tmp = 0;
;;;1035   
;;;1036     LCD_CtrlLinesWrite(GPIOD, CtrlPin_NWR, Bit_RESET);
00003e  2200              MOVS     r2,#0
000040  f44f4100          MOV      r1,#0x8000
000044  4efe              LDR      r6,|L1.1088|
000046  4630              MOV      r0,r6
000048  f7fffffe          BL       LCD_CtrlLinesWrite
;;;1037     LCD_CtrlLinesWrite(GPIOD, CtrlPin_RS, Bit_RESET);
00004c  2200              MOVS     r2,#0
00004e  2180              MOVS     r1,#0x80
000050  4630              MOV      r0,r6
000052  f7fffffe          BL       LCD_CtrlLinesWrite
;;;1038     LCD_CtrlLinesWrite(GPIOB, CtrlPin_NCS, Bit_RESET);
000056  4efb              LDR      r6,|L1.1092|
000058  2200              MOVS     r2,#0
00005a  2104              MOVS     r1,#4
00005c  4630              MOV      r0,r6
00005e  f7fffffe          BL       LCD_CtrlLinesWrite
;;;1039   
;;;1040     tmp = LCD_Reg << 8;
000062  0228              LSLS     r0,r5,#8
;;;1041     tmp |= LCD_RegValue;
000064  ea400104          ORR      r1,r0,r4
;;;1042   
;;;1043     SPI_I2S_SendData(SPI2, tmp);
000068  4cf7              LDR      r4,|L1.1096|
00006a  4620              MOV      r0,r4
00006c  f7fffffe          BL       SPI_I2S_SendData
                  |L1.112|
;;;1044     while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_BSY) != RESET)
000070  2180              MOVS     r1,#0x80
000072  4620              MOV      r0,r4
000074  f7fffffe          BL       SPI_I2S_GetFlagStatus
000078  2800              CMP      r0,#0
00007a  d1f9              BNE      |L1.112|
;;;1045     {
;;;1046     }
;;;1047   
;;;1048     LCD_CtrlLinesWrite(GPIOB, CtrlPin_NCS, Bit_SET);
00007c  4630              MOV      r0,r6
00007e  e8bd4070          POP      {r4-r6,lr}
000082  2201              MOVS     r2,#1
000084  2104              MOVS     r1,#4
000086  e7fe              B        LCD_CtrlLinesWrite
;;;1049   }
;;;1050   
                          ENDP

                  LCD_nCS_StartByte PROC
;;;862    *******************************************************************************/
;;;863    void LCD_nCS_StartByte(u8 Start_Byte)
000088  b510              PUSH     {r4,lr}
;;;864    {
00008a  4604              MOV      r4,r0
;;;865      LCD_CtrlLinesWrite(GPIOB, CtrlPin_NCS, Bit_RESET);
00008c  2200              MOVS     r2,#0
00008e  2104              MOVS     r1,#4
000090  48ec              LDR      r0,|L1.1092|
000092  f7fffffe          BL       LCD_CtrlLinesWrite
;;;866    
;;;867      SPI_I2S_SendData(SPI2, Start_Byte);
000096  4621              MOV      r1,r4
000098  4ceb              LDR      r4,|L1.1096|
00009a  4620              MOV      r0,r4
00009c  f7fffffe          BL       SPI_I2S_SendData
                  |L1.160|
;;;868      while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_BSY) != RESET)
0000a0  2180              MOVS     r1,#0x80
0000a2  4620              MOV      r0,r4
0000a4  f7fffffe          BL       SPI_I2S_GetFlagStatus
0000a8  2800              CMP      r0,#0
0000aa  d1f9              BNE      |L1.160|
;;;869      {
;;;870      }
;;;871    }
0000ac  bd10              POP      {r4,pc}
;;;872    
                          ENDP

                  LCD_WriteRegIndex PROC
;;;879    *******************************************************************************/
;;;880    void LCD_WriteRegIndex(u8 LCD_Reg)
0000ae  b570              PUSH     {r4-r6,lr}
;;;881    {
0000b0  4605              MOV      r5,r0
;;;882      /* Reset LCD control line(/CS) and Send Start-Byte */
;;;883      LCD_nCS_StartByte(START_BYTE | SET_INDEX);
0000b2  2070              MOVS     r0,#0x70
0000b4  f7fffffe          BL       LCD_nCS_StartByte
;;;884    
;;;885      /* Write 16-bit Reg Index (High Byte is 0) */
;;;886      SPI_I2S_SendData(SPI2, 0x00);
0000b8  4ce3              LDR      r4,|L1.1096|
0000ba  2100              MOVS     r1,#0
0000bc  4620              MOV      r0,r4
0000be  f7fffffe          BL       SPI_I2S_SendData
                  |L1.194|
;;;887      while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_BSY) != RESET)
0000c2  2180              MOVS     r1,#0x80
0000c4  4620              MOV      r0,r4
0000c6  f7fffffe          BL       SPI_I2S_GetFlagStatus
0000ca  2800              CMP      r0,#0
0000cc  d1f9              BNE      |L1.194|
;;;888      {
;;;889      }
;;;890      SPI_I2S_SendData(SPI2, LCD_Reg);
0000ce  4629              MOV      r1,r5
0000d0  4620              MOV      r0,r4
0000d2  f7fffffe          BL       SPI_I2S_SendData
                  |L1.214|
;;;891      while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_BSY) != RESET)
0000d6  2180              MOVS     r1,#0x80
0000d8  4620              MOV      r0,r4
0000da  f7fffffe          BL       SPI_I2S_GetFlagStatus
0000de  2800              CMP      r0,#0
0000e0  d1f9              BNE      |L1.214|
;;;892      {
;;;893      }
;;;894    
;;;895      LCD_CtrlLinesWrite(GPIOB, CtrlPin_NCS, Bit_SET);
0000e2  e8bd4070          POP      {r4-r6,lr}
0000e6  2201              MOVS     r2,#1
0000e8  2104              MOVS     r1,#4
0000ea  48d6              LDR      r0,|L1.1092|
0000ec  e7fe              B        LCD_CtrlLinesWrite
;;;896    }
;;;897    
                          ENDP

                  LCD_WriteRegILI9320 PROC
;;;905    *******************************************************************************/
;;;906    static void LCD_WriteRegILI9320(u8 LCD_Reg, u16 LCD_RegValue)
0000ee  b570              PUSH     {r4-r6,lr}
;;;907    {
0000f0  460c              MOV      r4,r1
;;;908      /* Write 16-bit Index (then Write Reg) */
;;;909      LCD_WriteRegIndex(LCD_Reg);
0000f2  f7fffffe          BL       LCD_WriteRegIndex
;;;910    
;;;911      /* Write 16-bit Reg */
;;;912      /* Reset LCD control line(/CS) and Send Start-Byte */
;;;913      LCD_nCS_StartByte(START_BYTE | WRITE_REG);
0000f6  2072              MOVS     r0,#0x72
0000f8  f7fffffe          BL       LCD_nCS_StartByte
;;;914    
;;;915      SPI_I2S_SendData(SPI2, LCD_RegValue>>8);
0000fc  4dd2              LDR      r5,|L1.1096|
0000fe  0a21              LSRS     r1,r4,#8
000100  4628              MOV      r0,r5
000102  f7fffffe          BL       SPI_I2S_SendData
                  |L1.262|
;;;916      while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_BSY) != RESET)
000106  2180              MOVS     r1,#0x80
000108  4628              MOV      r0,r5
00010a  f7fffffe          BL       SPI_I2S_GetFlagStatus
00010e  2800              CMP      r0,#0
000110  d1f9              BNE      |L1.262|
;;;917      {
;;;918      }
;;;919      SPI_I2S_SendData(SPI2, (LCD_RegValue & 0xFF));
000112  b2e1              UXTB     r1,r4
000114  4628              MOV      r0,r5
000116  f7fffffe          BL       SPI_I2S_SendData
                  |L1.282|
;;;920      while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_BSY) != RESET)
00011a  2180              MOVS     r1,#0x80
00011c  4628              MOV      r0,r5
00011e  f7fffffe          BL       SPI_I2S_GetFlagStatus
000122  2800              CMP      r0,#0
000124  d1f9              BNE      |L1.282|
;;;921      {
;;;922      }
;;;923    
;;;924      LCD_CtrlLinesWrite(GPIOB, CtrlPin_NCS, Bit_SET);
000126  e8bd4070          POP      {r4-r6,lr}
00012a  2201              MOVS     r2,#1
00012c  2104              MOVS     r1,#4
00012e  48c5              LDR      r0,|L1.1092|
000130  e7fe              B        LCD_CtrlLinesWrite
;;;925    }
;;;926    
                          ENDP

                  LCD_WriteReg PROC
;;;1058   *******************************************************************************/
;;;1059   void LCD_WriteReg(u8 LCD_Reg, u16 LCD_RegValue)
000132  4ac6              LDR      r2,|L1.1100|
;;;1060   {
;;;1061     if(LCDType == LCD_ILI9320)
000134  6853              LDR      r3,[r2,#4]  ; LCDType
000136  f5a34c00          SUB      r12,r3,#0x8000
00013a  f5bc5c99          SUBS     r12,r12,#0x1320
00013e  d006              BEQ      |L1.334|
;;;1062     {
;;;1063       LCD_WriteRegILI9320(LCD_Reg, LCD_RegValue);
;;;1064     }
;;;1065     else if(LCDType == LCD_HX8312)
000140  6852              LDR      r2,[r2,#4]  ; LCDType
000142  f5a24303          SUB      r3,r2,#0x8300
000146  3b12              SUBS     r3,r3,#0x12
000148  d102              BNE      |L1.336|
;;;1066     {
;;;1067       LCD_WriteRegHX8312(LCD_Reg, ((u8)LCD_RegValue));
00014a  b2c9              UXTB     r1,r1
00014c  e7fe              B        LCD_WriteRegHX8312
                  |L1.334|
00014e  e7fe              B        LCD_WriteRegILI9320
                  |L1.336|
;;;1068     }
;;;1069   }
000150  4770              BX       lr
;;;1070   
                          ENDP

                  LCD_SPIConfig PROC
;;;1258   *******************************************************************************/
;;;1259   void LCD_SPIConfig(void)
000152  b510              PUSH     {r4,lr}
;;;1260   {
000154  b086              SUB      sp,sp,#0x18
;;;1261     SPI_InitTypeDef    SPI_InitStructure;
;;;1262     GPIO_InitTypeDef   GPIO_InitStructure;
;;;1263   
;;;1264     /* Enable GPIOB clock */
;;;1265     RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
000156  2101              MOVS     r1,#1
000158  2008              MOVS     r0,#8
00015a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;1266   
;;;1267     /* Enable SPI2 clock  */
;;;1268     RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2, ENABLE);
00015e  2101              MOVS     r1,#1
000160  0388              LSLS     r0,r1,#14
000162  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;1269   
;;;1270     /* Configure SPI2 pins: NSS, SCK, MISO and MOSI */
;;;1271     GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15;
000166  f44f4070          MOV      r0,#0xf000
00016a  f8ad0000          STRH     r0,[sp,#0]
;;;1272     GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00016e  2003              MOVS     r0,#3
000170  f88d0002          STRB     r0,[sp,#2]
;;;1273     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
000174  2018              MOVS     r0,#0x18
000176  f88d0003          STRB     r0,[sp,#3]
;;;1274     GPIO_Init(GPIOB, &GPIO_InitStructure);
00017a  4669              MOV      r1,sp
00017c  48b1              LDR      r0,|L1.1092|
00017e  f7fffffe          BL       GPIO_Init
;;;1275   
;;;1276     SPI_I2S_DeInit(SPI2);
000182  4cb1              LDR      r4,|L1.1096|
000184  4620              MOV      r0,r4
000186  f7fffffe          BL       SPI_I2S_DeInit
;;;1277   
;;;1278     /* SPI2 Config */
;;;1279     SPI_InitStructure.SPI_Direction = SPI_Direction_2Lines_FullDuplex;
00018a  2100              MOVS     r1,#0
00018c  f8ad1004          STRH     r1,[sp,#4]
;;;1280     SPI_InitStructure.SPI_Mode = SPI_Mode_Master;
000190  f44f7082          MOV      r0,#0x104
000194  f8ad0006          STRH     r0,[sp,#6]
;;;1281     if(LCDType == LCD_ILI9320)
000198  4aac              LDR      r2,|L1.1100|
00019a  6850              LDR      r0,[r2,#4]  ; LCDType
00019c  f5a04313          SUB      r3,r0,#0x9300
0001a0  3b20              SUBS     r3,r3,#0x20
0001a2  d005              BEQ      |L1.432|
;;;1282     {
;;;1283       SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b;
;;;1284       SPI_InitStructure.SPI_CPOL = SPI_CPOL_High;
;;;1285       SPI_InitStructure.SPI_CPHA = SPI_CPHA_2Edge;
;;;1286     }
;;;1287     else if(LCDType == LCD_HX8312)
0001a4  6850              LDR      r0,[r2,#4]  ; LCDType
0001a6  f5a04203          SUB      r2,r0,#0x8300
0001aa  3a12              SUBS     r2,r2,#0x12
0001ac  d009              BEQ      |L1.450|
0001ae  e010              B        |L1.466|
                  |L1.432|
0001b0  f8ad1008          STRH     r1,[sp,#8]            ;1283
0001b4  2002              MOVS     r0,#2                 ;1284
0001b6  f8ad000a          STRH     r0,[sp,#0xa]          ;1284
0001ba  2001              MOVS     r0,#1                 ;1285
0001bc  f8ad000c          STRH     r0,[sp,#0xc]          ;1285
0001c0  e007              B        |L1.466|
                  |L1.450|
;;;1288     {
;;;1289       SPI_InitStructure.SPI_DataSize = SPI_DataSize_16b;
0001c2  f44f6000          MOV      r0,#0x800
0001c6  f8ad0008          STRH     r0,[sp,#8]
;;;1290       SPI_InitStructure.SPI_CPOL = SPI_CPOL_Low;
0001ca  f8ad100a          STRH     r1,[sp,#0xa]
;;;1291       SPI_InitStructure.SPI_CPHA = SPI_CPHA_1Edge;
0001ce  f8ad100c          STRH     r1,[sp,#0xc]
                  |L1.466|
;;;1292     }
;;;1293     SPI_InitStructure.SPI_NSS = SPI_NSS_Soft;
0001d2  f44f7000          MOV      r0,#0x200
0001d6  f8ad000e          STRH     r0,[sp,#0xe]
;;;1294     SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_2;
0001da  f8ad1010          STRH     r1,[sp,#0x10]
;;;1295     SPI_InitStructure.SPI_FirstBit = SPI_FirstBit_MSB;
0001de  f8ad1012          STRH     r1,[sp,#0x12]
;;;1296     SPI_Init(SPI2, &SPI_InitStructure);
0001e2  a901              ADD      r1,sp,#4
0001e4  4620              MOV      r0,r4
0001e6  f7fffffe          BL       SPI_Init
;;;1297   
;;;1298     /* SPI2 enable */
;;;1299     SPI_Cmd(SPI2, ENABLE);
0001ea  2101              MOVS     r1,#1
0001ec  4620              MOV      r0,r4
0001ee  f7fffffe          BL       SPI_Cmd
;;;1300   }
0001f2  b006              ADD      sp,sp,#0x18
0001f4  bd10              POP      {r4,pc}
;;;1301   
                          ENDP

                  LCD_CtrlLinesConfig PROC
;;;1212   *******************************************************************************/
;;;1213   void LCD_CtrlLinesConfig(void)
0001f6  b538              PUSH     {r3-r5,lr}
;;;1214   {
;;;1215     GPIO_InitTypeDef GPIO_InitStructure;
;;;1216   
;;;1217     /* Configure NCS (PB.02) in Output Push-Pull mode */
;;;1218     GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
0001f8  2004              MOVS     r0,#4
0001fa  f8ad0000          STRH     r0,[sp,#0]
;;;1219     GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
0001fe  2003              MOVS     r0,#3
000200  f88d0002          STRB     r0,[sp,#2]
;;;1220     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000204  2010              MOVS     r0,#0x10
000206  f88d0003          STRB     r0,[sp,#3]
;;;1221     GPIO_Init(GPIOB, &GPIO_InitStructure);
00020a  4669              MOV      r1,sp
00020c  488d              LDR      r0,|L1.1092|
00020e  f7fffffe          BL       GPIO_Init
;;;1222   
;;;1223     /* Configure NWR(RNW), RS (PD.15, PD.07) in Output Push-Pull mode */
;;;1224     GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7 | GPIO_Pin_15;
000212  f2480080          MOV      r0,#0x8080
000216  f8ad0000          STRH     r0,[sp,#0]
;;;1225     GPIO_Init(GPIOD, &GPIO_InitStructure);
00021a  4c89              LDR      r4,|L1.1088|
00021c  4669              MOV      r1,sp
00021e  4620              MOV      r0,r4
000220  f7fffffe          BL       GPIO_Init
;;;1226   
;;;1227     LCD_CtrlLinesWrite(GPIOD, CtrlPin_NWR, Bit_SET);
000224  2201              MOVS     r2,#1
000226  03d1              LSLS     r1,r2,#15
000228  4620              MOV      r0,r4
00022a  f7fffffe          BL       LCD_CtrlLinesWrite
;;;1228     LCD_CtrlLinesWrite(GPIOD, CtrlPin_RS, Bit_SET);
00022e  2201              MOVS     r2,#1
000230  2180              MOVS     r1,#0x80
000232  4620              MOV      r0,r4
000234  f7fffffe          BL       LCD_CtrlLinesWrite
;;;1229   }
000238  bd38              POP      {r3-r5,pc}
;;;1230   
                          ENDP

                  LCD_Setup PROC
;;;81     
;;;82     void LCD_Setup(void)
00023a  b510              PUSH     {r4,lr}
;;;83     {
;;;84     /* Configure the LCD Control pins --------------------------------------------*/
;;;85       LCD_CtrlLinesConfig();
00023c  f7fffffe          BL       LCD_CtrlLinesConfig
;;;86     
;;;87     /* Configure the SPI2 interface ----------------------------------------------*/
;;;88       LCD_SPIConfig();
000240  f7fffffe          BL       LCD_SPIConfig
;;;89     
;;;90       if(LCDType == LCD_ILI9320)
000244  4881              LDR      r0,|L1.1100|
000246  6841              LDR      r1,[r0,#4]  ; LCDType
000248  f5a14213          SUB      r2,r1,#0x9300
00024c  3a20              SUBS     r2,r2,#0x20
00024e  f000816a          BEQ.W    |L1.1318|
;;;91       {
;;;92         Delay(5); /* Delay 50 ms */
;;;93         /* Start Initial Sequence ------------------------------------------------*/
;;;94         LCD_WriteReg(R229, 0x8000); /* Set the internal vcore voltage */
;;;95         LCD_WriteReg(R0,  0x0001); /* Start internal OSC. */
;;;96         LCD_WriteReg(R1,  0x0100); /* set SS and SM bit */
;;;97         LCD_WriteReg(R2,  0x0700); /* set 1 line inversion */
;;;98         LCD_WriteReg(R3,  0x1030); /* set GRAM write direction and BGR=1. */
;;;99         LCD_WriteReg(R4,  0x0000); /* Resize register */
;;;100        LCD_WriteReg(R8,  0x0202); /* set the back porch and front porch */
;;;101        LCD_WriteReg(R9,  0x0000); /* set non-display area refresh cycle ISC[3:0] */
;;;102        LCD_WriteReg(R10, 0x0000); /* FMARK function */
;;;103        LCD_WriteReg(R12, 0x0000); /* RGB interface setting */
;;;104        LCD_WriteReg(R13, 0x0000); /* Frame marker Position */
;;;105        LCD_WriteReg(R15, 0x0000); /* RGB interface polarity */
;;;106    
;;;107        /* Power On sequence -----------------------------------------------------*/
;;;108        LCD_WriteReg(R16, 0x0000); /* SAP, BT[3:0], AP, DSTB, SLP, STB */
;;;109        LCD_WriteReg(R17, 0x0000); /* DC1[2:0], DC0[2:0], VC[2:0] */
;;;110        LCD_WriteReg(R18, 0x0000); /* VREG1OUT voltage */
;;;111        LCD_WriteReg(R19, 0x0000); /* VDV[4:0] for VCOM amplitude */
;;;112        Delay(20);                 /* Dis-charge capacitor power voltage (200ms) */
;;;113        LCD_WriteReg(R16, 0x17B0); /* SAP, BT[3:0], AP, DSTB, SLP, STB */
;;;114        LCD_WriteReg(R17, 0x0137); /* DC1[2:0], DC0[2:0], VC[2:0] */
;;;115        Delay(5);                  /* Delay 50 ms */
;;;116        LCD_WriteReg(R18, 0x0139); /* VREG1OUT voltage */
;;;117        Delay(5);                  /* Delay 50 ms */
;;;118        LCD_WriteReg(R19, 0x1d00); /* VDV[4:0] for VCOM amplitude */
;;;119        LCD_WriteReg(R41, 0x0013); /* VCM[4:0] for VCOMH */
;;;120        Delay(5);                  /* Delay 50 ms */
;;;121        LCD_WriteReg(R32, 0x0000); /* GRAM horizontal Address */
;;;122        LCD_WriteReg(R33, 0x0000); /* GRAM Vertical Address */
;;;123    
;;;124        /* Adjust the Gamma Curve ------------------------------------------------*/
;;;125        LCD_WriteReg(R48, 0x0006);
;;;126        LCD_WriteReg(R49, 0x0101);
;;;127        LCD_WriteReg(R50, 0x0003);
;;;128        LCD_WriteReg(R53, 0x0106);
;;;129        LCD_WriteReg(R54, 0x0b02);
;;;130        LCD_WriteReg(R55, 0x0302);
;;;131        LCD_WriteReg(R56, 0x0707);
;;;132        LCD_WriteReg(R57, 0x0007);
;;;133        LCD_WriteReg(R60, 0x0600);
;;;134        LCD_WriteReg(R61, 0x020b);
;;;135    
;;;136        /* Set GRAM area ---------------------------------------------------------*/
;;;137        LCD_WriteReg(R80, 0x0000); /* Horizontal GRAM Start Address */
;;;138        LCD_WriteReg(R81, 0x00EF); /* Horizontal GRAM End Address */
;;;139        LCD_WriteReg(R82, 0x0000); /* Vertical GRAM Start Address */
;;;140        LCD_WriteReg(R83, 0x013F); /* Vertical GRAM End Address */
;;;141    
;;;142        LCD_WriteReg(R96,  0x2700); /* Gate Scan Line */
;;;143        LCD_WriteReg(R97,  0x0001); /* NDL,VLE, REV */
;;;144        LCD_WriteReg(R106, 0x0000); /* set scrolling line */
;;;145    
;;;146        /* Partial Display Control -----------------------------------------------*/
;;;147        LCD_WriteReg(R128, 0x0000);
;;;148        LCD_WriteReg(R129, 0x0000);
;;;149        LCD_WriteReg(R130, 0x0000);
;;;150        LCD_WriteReg(R131, 0x0000);
;;;151        LCD_WriteReg(R132, 0x0000);
;;;152        LCD_WriteReg(R133, 0x0000);
;;;153    
;;;154        /* Panel Control ---------------------------------------------------------*/
;;;155        LCD_WriteReg(R144, 0x0010);
;;;156        LCD_WriteReg(R146, 0x0000);
;;;157        LCD_WriteReg(R147, 0x0003);
;;;158        LCD_WriteReg(R149, 0x0110);
;;;159        LCD_WriteReg(R151, 0x0000);
;;;160        LCD_WriteReg(R152, 0x0000);
;;;161    
;;;162        /* Set GRAM write direction and BGR = 1 */
;;;163        /* I/D=01 (Horizontal : increment, Vertical : decrement) */
;;;164        /* AM=1 (address is updated in vertical writing direction) */
;;;165        LCD_WriteReg(R3, 0x1018);
;;;166    
;;;167        LCD_WriteReg(R7, 0x0173); /* 262K color and display ON */
;;;168      }
;;;169      else if(LCDType == LCD_HX8312)
000252  6840              LDR      r0,[r0,#4]  ; LCDType
000254  f5a04103          SUB      r1,r0,#0x8300
000258  3912              SUBS     r1,r1,#0x12
00025a  d17c              BNE      |L1.854|
;;;170      {
;;;171        /* Enable the LCD Oscillator ---------------------------------------------*/
;;;172        LCD_WriteReg(R1, 0x10);
00025c  2110              MOVS     r1,#0x10
00025e  2001              MOVS     r0,#1
000260  f7fffffe          BL       LCD_WriteReg
;;;173        LCD_WriteReg(R0, 0xA0);
000264  21a0              MOVS     r1,#0xa0
000266  2000              MOVS     r0,#0
000268  f7fffffe          BL       LCD_WriteReg
;;;174        LCD_WriteReg(R3, 0x01);
00026c  2101              MOVS     r1,#1
00026e  2003              MOVS     r0,#3
000270  f7fffffe          BL       LCD_WriteReg
;;;175        Delay(1); /* Delay 10 ms */
000274  2001              MOVS     r0,#1
000276  f7fffffe          BL       Delay
;;;176        LCD_WriteReg(R3, 0x00);
00027a  2100              MOVS     r1,#0
00027c  2003              MOVS     r0,#3
00027e  f7fffffe          BL       LCD_WriteReg
;;;177        LCD_WriteReg(R43, 0x04);
000282  2104              MOVS     r1,#4
000284  202b              MOVS     r0,#0x2b
000286  f7fffffe          BL       LCD_WriteReg
;;;178    
;;;179        LCD_WriteReg(R40, 0x18);
00028a  2118              MOVS     r1,#0x18
00028c  2028              MOVS     r0,#0x28
00028e  f7fffffe          BL       LCD_WriteReg
;;;180        LCD_WriteReg(R26, 0x05);
000292  2105              MOVS     r1,#5
000294  201a              MOVS     r0,#0x1a
000296  f7fffffe          BL       LCD_WriteReg
;;;181        LCD_WriteReg(R37, 0x05);
00029a  2105              MOVS     r1,#5
00029c  2025              MOVS     r0,#0x25
00029e  f7fffffe          BL       LCD_WriteReg
;;;182        LCD_WriteReg(R25, 0x00);
0002a2  2100              MOVS     r1,#0
0002a4  2019              MOVS     r0,#0x19
0002a6  f7fffffe          BL       LCD_WriteReg
;;;183    
;;;184        /* LCD Power On ----------------------------------------------------------*/
;;;185        LCD_WriteReg(R28, 0x73);
0002aa  2173              MOVS     r1,#0x73
0002ac  201c              MOVS     r0,#0x1c
0002ae  f7fffffe          BL       LCD_WriteReg
;;;186        LCD_WriteReg(R36, 0x74);
0002b2  2174              MOVS     r1,#0x74
0002b4  2024              MOVS     r0,#0x24
0002b6  f7fffffe          BL       LCD_WriteReg
;;;187        LCD_WriteReg(R30, 0x01);
0002ba  2101              MOVS     r1,#1
0002bc  201e              MOVS     r0,#0x1e
0002be  f7fffffe          BL       LCD_WriteReg
;;;188        LCD_WriteReg(R24, 0xC1);
0002c2  21c1              MOVS     r1,#0xc1
0002c4  2018              MOVS     r0,#0x18
0002c6  f7fffffe          BL       LCD_WriteReg
;;;189        Delay(1); /* Delay 10 ms */
0002ca  2001              MOVS     r0,#1
0002cc  f7fffffe          BL       Delay
;;;190        LCD_WriteReg(R24, 0xE1);
0002d0  21e1              MOVS     r1,#0xe1
0002d2  2018              MOVS     r0,#0x18
0002d4  f7fffffe          BL       LCD_WriteReg
;;;191        LCD_WriteReg(R24, 0xF1);
0002d8  21f1              MOVS     r1,#0xf1
0002da  2018              MOVS     r0,#0x18
0002dc  f7fffffe          BL       LCD_WriteReg
;;;192        Delay(6); /* Delay 60 ms */
0002e0  2006              MOVS     r0,#6
0002e2  f7fffffe          BL       Delay
;;;193        LCD_WriteReg(R24, 0xF5);
0002e6  21f5              MOVS     r1,#0xf5
0002e8  2018              MOVS     r0,#0x18
0002ea  f7fffffe          BL       LCD_WriteReg
;;;194        Delay(6); /* Delay 60 ms */
0002ee  2006              MOVS     r0,#6
0002f0  f7fffffe          BL       Delay
;;;195        LCD_WriteReg(R27, 0x09);
0002f4  2109              MOVS     r1,#9
0002f6  201b              MOVS     r0,#0x1b
0002f8  f7fffffe          BL       LCD_WriteReg
;;;196        Delay(1); /* Delay 10 ms */
0002fc  2001              MOVS     r0,#1
0002fe  f7fffffe          BL       Delay
;;;197        LCD_WriteReg(R31, 0x11);
000302  2111              MOVS     r1,#0x11
000304  201f              MOVS     r0,#0x1f
000306  f7fffffe          BL       LCD_WriteReg
;;;198        LCD_WriteReg(R32, 0x0E);
00030a  210e              MOVS     r1,#0xe
00030c  2020              MOVS     r0,#0x20
00030e  f7fffffe          BL       LCD_WriteReg
;;;199        LCD_WriteReg(R30, 0x81);
000312  2181              MOVS     r1,#0x81
000314  201e              MOVS     r0,#0x1e
000316  f7fffffe          BL       LCD_WriteReg
;;;200        Delay(1); /* Delay 10 ms */
00031a  2001              MOVS     r0,#1
00031c  f7fffffe          BL       Delay
;;;201    
;;;202        /* Chip Set --------------------------------------------------------------*/
;;;203        LCD_WriteReg(R157, 0x00);
000320  2100              MOVS     r1,#0
000322  209d              MOVS     r0,#0x9d
000324  f7fffffe          BL       LCD_WriteReg
;;;204        LCD_WriteReg(R192, 0x00);
000328  2100              MOVS     r1,#0
00032a  20c0              MOVS     r0,#0xc0
00032c  f7fffffe          BL       LCD_WriteReg
;;;205    
;;;206        LCD_WriteReg(R14, 0x00);
000330  2100              MOVS     r1,#0
000332  200e              MOVS     r0,#0xe
000334  f7fffffe          BL       LCD_WriteReg
;;;207        LCD_WriteReg(R15, 0x00);
000338  2100              MOVS     r1,#0
00033a  200f              MOVS     r0,#0xf
00033c  f7fffffe          BL       LCD_WriteReg
;;;208        LCD_WriteReg(R16, 0x00);
000340  2100              MOVS     r1,#0
000342  2010              MOVS     r0,#0x10
000344  f7fffffe          BL       LCD_WriteReg
;;;209        LCD_WriteReg(R17, 0x00);
000348  2100              MOVS     r1,#0
00034a  2011              MOVS     r0,#0x11
00034c  f7fffffe          BL       LCD_WriteReg
;;;210        LCD_WriteReg(R18, 0x00);
000350  2100              MOVS     r1,#0
000352  2012              MOVS     r0,#0x12
000354  e000              B        |L1.856|
                  |L1.854|
000356  e1e3              B        |L1.1824|
                  |L1.856|
000358  f7fffffe          BL       LCD_WriteReg
;;;211        LCD_WriteReg(R19, 0x00);
00035c  2100              MOVS     r1,#0
00035e  2013              MOVS     r0,#0x13
000360  f7fffffe          BL       LCD_WriteReg
;;;212        LCD_WriteReg(R20, 0x00);
000364  2100              MOVS     r1,#0
000366  2014              MOVS     r0,#0x14
000368  f7fffffe          BL       LCD_WriteReg
;;;213        LCD_WriteReg(R21, 0x00);
00036c  2100              MOVS     r1,#0
00036e  2015              MOVS     r0,#0x15
000370  f7fffffe          BL       LCD_WriteReg
;;;214        LCD_WriteReg(R22, 0x00);
000374  2100              MOVS     r1,#0
000376  2016              MOVS     r0,#0x16
000378  f7fffffe          BL       LCD_WriteReg
;;;215        LCD_WriteReg(R23, 0x00);
00037c  2100              MOVS     r1,#0
00037e  2017              MOVS     r0,#0x17
000380  f7fffffe          BL       LCD_WriteReg
;;;216    
;;;217        LCD_WriteReg(R52, 0x01);
000384  2101              MOVS     r1,#1
000386  2034              MOVS     r0,#0x34
000388  f7fffffe          BL       LCD_WriteReg
;;;218        LCD_WriteReg(R53, 0x00);
00038c  2100              MOVS     r1,#0
00038e  2035              MOVS     r0,#0x35
000390  f7fffffe          BL       LCD_WriteReg
;;;219    
;;;220        LCD_WriteReg(R75, 0x00);
000394  2100              MOVS     r1,#0
000396  204b              MOVS     r0,#0x4b
000398  f7fffffe          BL       LCD_WriteReg
;;;221        LCD_WriteReg(R76, 0x00);
00039c  2100              MOVS     r1,#0
00039e  204c              MOVS     r0,#0x4c
0003a0  f7fffffe          BL       LCD_WriteReg
;;;222        LCD_WriteReg(R78, 0x00);
0003a4  2100              MOVS     r1,#0
0003a6  204e              MOVS     r0,#0x4e
0003a8  f7fffffe          BL       LCD_WriteReg
;;;223        LCD_WriteReg(R79, 0x00);
0003ac  2100              MOVS     r1,#0
0003ae  204f              MOVS     r0,#0x4f
0003b0  f7fffffe          BL       LCD_WriteReg
;;;224        LCD_WriteReg(R80, 0x00);
0003b4  2100              MOVS     r1,#0
0003b6  2050              MOVS     r0,#0x50
0003b8  f7fffffe          BL       LCD_WriteReg
;;;225    
;;;226        LCD_WriteReg(R60, 0x00);
0003bc  2100              MOVS     r1,#0
0003be  203c              MOVS     r0,#0x3c
0003c0  f7fffffe          BL       LCD_WriteReg
;;;227        LCD_WriteReg(R61, 0x00);
0003c4  2100              MOVS     r1,#0
0003c6  203d              MOVS     r0,#0x3d
0003c8  f7fffffe          BL       LCD_WriteReg
;;;228        LCD_WriteReg(R62, 0x01);
0003cc  2101              MOVS     r1,#1
0003ce  203e              MOVS     r0,#0x3e
0003d0  f7fffffe          BL       LCD_WriteReg
;;;229        LCD_WriteReg(R63, 0x3F);
0003d4  213f              MOVS     r1,#0x3f
0003d6  4608              MOV      r0,r1
0003d8  f7fffffe          BL       LCD_WriteReg
;;;230        LCD_WriteReg(R64, 0x02);
0003dc  2102              MOVS     r1,#2
0003de  2040              MOVS     r0,#0x40
0003e0  f7fffffe          BL       LCD_WriteReg
;;;231        LCD_WriteReg(R65, 0x02);
0003e4  2102              MOVS     r1,#2
0003e6  2041              MOVS     r0,#0x41
0003e8  f7fffffe          BL       LCD_WriteReg
;;;232        LCD_WriteReg(R66, 0x00);
0003ec  2100              MOVS     r1,#0
0003ee  2042              MOVS     r0,#0x42
0003f0  f7fffffe          BL       LCD_WriteReg
;;;233        LCD_WriteReg(R67, 0x00);
0003f4  2100              MOVS     r1,#0
0003f6  2043              MOVS     r0,#0x43
0003f8  f7fffffe          BL       LCD_WriteReg
;;;234        LCD_WriteReg(R68, 0x00);
0003fc  2100              MOVS     r1,#0
0003fe  2044              MOVS     r0,#0x44
000400  f7fffffe          BL       LCD_WriteReg
;;;235        LCD_WriteReg(R69, 0x00);
000404  2100              MOVS     r1,#0
000406  2045              MOVS     r0,#0x45
000408  f7fffffe          BL       LCD_WriteReg
;;;236        LCD_WriteReg(R70, 0xEF);
00040c  21ef              MOVS     r1,#0xef
00040e  2046              MOVS     r0,#0x46
000410  f7fffffe          BL       LCD_WriteReg
;;;237        LCD_WriteReg(R71, 0x00);
000414  2100              MOVS     r1,#0
000416  2047              MOVS     r0,#0x47
000418  f7fffffe          BL       LCD_WriteReg
;;;238        LCD_WriteReg(R72, 0x00);
00041c  2100              MOVS     r1,#0
00041e  2048              MOVS     r0,#0x48
000420  f7fffffe          BL       LCD_WriteReg
;;;239        LCD_WriteReg(R73, 0x01);
000424  2101              MOVS     r1,#1
000426  2049              MOVS     r0,#0x49
000428  f7fffffe          BL       LCD_WriteReg
;;;240        LCD_WriteReg(R74, 0x3F);
00042c  213f              MOVS     r1,#0x3f
00042e  204a              MOVS     r0,#0x4a
000430  f7fffffe          BL       LCD_WriteReg
;;;241    
;;;242        LCD_WriteReg(R29, 0x08);  /* R29:Gate scan direction setting */
000434  2108              MOVS     r1,#8
000436  201d              MOVS     r0,#0x1d
000438  f7fffffe          BL       LCD_WriteReg
;;;243    
;;;244        LCD_WriteReg(R134, 0x00);
00043c  2100              MOVS     r1,#0
00043e  e007              B        |L1.1104|
                  |L1.1088|
                          DCD      0x40011400
                  |L1.1092|
                          DCD      0x40010c00
                  |L1.1096|
                          DCD      0x40003800
                  |L1.1100|
                          DCD      ||.data||
                  |L1.1104|
000450  2086              MOVS     r0,#0x86
000452  f7fffffe          BL       LCD_WriteReg
;;;245        LCD_WriteReg(R135, 0x30);
000456  2130              MOVS     r1,#0x30
000458  2087              MOVS     r0,#0x87
00045a  f7fffffe          BL       LCD_WriteReg
;;;246        LCD_WriteReg(R136, 0x02);
00045e  2102              MOVS     r1,#2
000460  2088              MOVS     r0,#0x88
000462  f7fffffe          BL       LCD_WriteReg
;;;247        LCD_WriteReg(R137, 0x05);
000466  2105              MOVS     r1,#5
000468  2089              MOVS     r0,#0x89
00046a  f7fffffe          BL       LCD_WriteReg
;;;248    
;;;249        LCD_WriteReg(R141, 0x01);  /* R141:Register set-up mode for one line clock */
00046e  2101              MOVS     r1,#1
000470  208d              MOVS     r0,#0x8d
000472  f7fffffe          BL       LCD_WriteReg
;;;250        LCD_WriteReg(R139, 0x20);  /* R139:One line SYSCLK number in one-line */
000476  2120              MOVS     r1,#0x20
000478  208b              MOVS     r0,#0x8b
00047a  f7fffffe          BL       LCD_WriteReg
;;;251        LCD_WriteReg(R51, 0x01);  /* R51:N line inversion setting */
00047e  2101              MOVS     r1,#1
000480  2033              MOVS     r0,#0x33
000482  f7fffffe          BL       LCD_WriteReg
;;;252        LCD_WriteReg(R55, 0x01);  /* R55:Scanning method setting */
000486  2101              MOVS     r1,#1
000488  2037              MOVS     r0,#0x37
00048a  f7fffffe          BL       LCD_WriteReg
;;;253        LCD_WriteReg(R118, 0x00);
00048e  2100              MOVS     r1,#0
000490  2076              MOVS     r0,#0x76
000492  f7fffffe          BL       LCD_WriteReg
;;;254    
;;;255        /* Gamma Set -------------------------------------------------------------*/
;;;256        LCD_WriteReg(R143, 0x10);
000496  2110              MOVS     r1,#0x10
000498  208f              MOVS     r0,#0x8f
00049a  f7fffffe          BL       LCD_WriteReg
;;;257        LCD_WriteReg(R144, 0x67);
00049e  2167              MOVS     r1,#0x67
0004a0  2090              MOVS     r0,#0x90
0004a2  f7fffffe          BL       LCD_WriteReg
;;;258        LCD_WriteReg(R145, 0x07);
0004a6  2107              MOVS     r1,#7
0004a8  2091              MOVS     r0,#0x91
0004aa  f7fffffe          BL       LCD_WriteReg
;;;259        LCD_WriteReg(R146, 0x65);
0004ae  2165              MOVS     r1,#0x65
0004b0  2092              MOVS     r0,#0x92
0004b2  f7fffffe          BL       LCD_WriteReg
;;;260        LCD_WriteReg(R147, 0x07);
0004b6  2107              MOVS     r1,#7
0004b8  2093              MOVS     r0,#0x93
0004ba  f7fffffe          BL       LCD_WriteReg
;;;261        LCD_WriteReg(R148, 0x01);
0004be  2101              MOVS     r1,#1
0004c0  2094              MOVS     r0,#0x94
0004c2  f7fffffe          BL       LCD_WriteReg
;;;262        LCD_WriteReg(R149, 0x76);
0004c6  2176              MOVS     r1,#0x76
0004c8  2095              MOVS     r0,#0x95
0004ca  f7fffffe          BL       LCD_WriteReg
;;;263        LCD_WriteReg(R150, 0x56);
0004ce  2156              MOVS     r1,#0x56
0004d0  2096              MOVS     r0,#0x96
0004d2  f7fffffe          BL       LCD_WriteReg
;;;264        LCD_WriteReg(R151, 0x00);
0004d6  2100              MOVS     r1,#0
0004d8  2097              MOVS     r0,#0x97
0004da  f7fffffe          BL       LCD_WriteReg
;;;265        LCD_WriteReg(R152, 0x06);
0004de  2106              MOVS     r1,#6
0004e0  2098              MOVS     r0,#0x98
0004e2  f7fffffe          BL       LCD_WriteReg
;;;266        LCD_WriteReg(R153, 0x03);
0004e6  2103              MOVS     r1,#3
0004e8  2099              MOVS     r0,#0x99
0004ea  f7fffffe          BL       LCD_WriteReg
;;;267        LCD_WriteReg(R154, 0x00);
0004ee  2100              MOVS     r1,#0
0004f0  209a              MOVS     r0,#0x9a
0004f2  f7fffffe          BL       LCD_WriteReg
;;;268    
;;;269        /* Display On ------------------------------------------------------------*/
;;;270        LCD_WriteReg(R1, 0x50);
0004f6  2150              MOVS     r1,#0x50
0004f8  2001              MOVS     r0,#1
0004fa  f7fffffe          BL       LCD_WriteReg
;;;271        LCD_WriteReg(R5, 0x04);
0004fe  2104              MOVS     r1,#4
000500  2005              MOVS     r0,#5
000502  f7fffffe          BL       LCD_WriteReg
;;;272    
;;;273        LCD_WriteReg(R0, 0x80);
000506  2180              MOVS     r1,#0x80
000508  2000              MOVS     r0,#0
00050a  f7fffffe          BL       LCD_WriteReg
;;;274        LCD_WriteReg(R59, 0x01);
00050e  2101              MOVS     r1,#1
000510  203b              MOVS     r0,#0x3b
000512  f7fffffe          BL       LCD_WriteReg
;;;275        Delay(4);  /* Delay 40 ms */
000516  2004              MOVS     r0,#4
000518  f7fffffe          BL       Delay
;;;276        LCD_WriteReg(R0, 0x20);
00051c  2120              MOVS     r1,#0x20
00051e  e8bd4010          POP      {r4,lr}
000522  2000              MOVS     r0,#0
000524  e7fe              B        LCD_WriteReg
                  |L1.1318|
000526  2005              MOVS     r0,#5                 ;92
000528  f7fffffe          BL       Delay
00052c  f44f4100          MOV      r1,#0x8000            ;94
000530  20e5              MOVS     r0,#0xe5              ;94
000532  f7fffffe          BL       LCD_WriteReg
000536  2101              MOVS     r1,#1                 ;95
000538  2000              MOVS     r0,#0                 ;95
00053a  f7fffffe          BL       LCD_WriteReg
00053e  f44f7180          MOV      r1,#0x100             ;96
000542  2001              MOVS     r0,#1                 ;96
000544  f7fffffe          BL       LCD_WriteReg
000548  f44f61e0          MOV      r1,#0x700             ;97
00054c  2002              MOVS     r0,#2                 ;97
00054e  f7fffffe          BL       LCD_WriteReg
000552  f2410130          MOV      r1,#0x1030            ;98
000556  2003              MOVS     r0,#3                 ;98
000558  f7fffffe          BL       LCD_WriteReg
00055c  2100              MOVS     r1,#0                 ;99
00055e  2004              MOVS     r0,#4                 ;99
000560  f7fffffe          BL       LCD_WriteReg
000564  f2402102          MOV      r1,#0x202             ;100
000568  2008              MOVS     r0,#8                 ;100
00056a  f7fffffe          BL       LCD_WriteReg
00056e  2100              MOVS     r1,#0                 ;101
000570  2009              MOVS     r0,#9                 ;101
000572  f7fffffe          BL       LCD_WriteReg
000576  2100              MOVS     r1,#0                 ;102
000578  200a              MOVS     r0,#0xa               ;102
00057a  f7fffffe          BL       LCD_WriteReg
00057e  2100              MOVS     r1,#0                 ;103
000580  200c              MOVS     r0,#0xc               ;103
000582  f7fffffe          BL       LCD_WriteReg
000586  2100              MOVS     r1,#0                 ;104
000588  200d              MOVS     r0,#0xd               ;104
00058a  f7fffffe          BL       LCD_WriteReg
00058e  2100              MOVS     r1,#0                 ;105
000590  200f              MOVS     r0,#0xf               ;105
000592  f7fffffe          BL       LCD_WriteReg
000596  2100              MOVS     r1,#0                 ;108
000598  2010              MOVS     r0,#0x10              ;108
00059a  f7fffffe          BL       LCD_WriteReg
00059e  2100              MOVS     r1,#0                 ;109
0005a0  2011              MOVS     r0,#0x11              ;109
0005a2  f7fffffe          BL       LCD_WriteReg
0005a6  2100              MOVS     r1,#0                 ;110
0005a8  2012              MOVS     r0,#0x12              ;110
0005aa  f7fffffe          BL       LCD_WriteReg
0005ae  2100              MOVS     r1,#0                 ;111
0005b0  2013              MOVS     r0,#0x13              ;111
0005b2  f7fffffe          BL       LCD_WriteReg
0005b6  2014              MOVS     r0,#0x14              ;112
0005b8  f7fffffe          BL       Delay
0005bc  f24171b0          MOV      r1,#0x17b0            ;113
0005c0  2010              MOVS     r0,#0x10              ;113
0005c2  f7fffffe          BL       LCD_WriteReg
0005c6  f2401137          MOV      r1,#0x137             ;114
0005ca  2011              MOVS     r0,#0x11              ;114
0005cc  f7fffffe          BL       LCD_WriteReg
0005d0  2005              MOVS     r0,#5                 ;115
0005d2  f7fffffe          BL       Delay
0005d6  f2401139          MOV      r1,#0x139             ;116
0005da  2012              MOVS     r0,#0x12              ;116
0005dc  f7fffffe          BL       LCD_WriteReg
0005e0  2005              MOVS     r0,#5                 ;117
0005e2  f7fffffe          BL       Delay
0005e6  f44f51e8          MOV      r1,#0x1d00            ;118
0005ea  2013              MOVS     r0,#0x13              ;118
0005ec  f7fffffe          BL       LCD_WriteReg
0005f0  2113              MOVS     r1,#0x13              ;119
0005f2  2029              MOVS     r0,#0x29              ;119
0005f4  f7fffffe          BL       LCD_WriteReg
0005f8  2005              MOVS     r0,#5                 ;120
0005fa  f7fffffe          BL       Delay
0005fe  2100              MOVS     r1,#0                 ;121
000600  2020              MOVS     r0,#0x20              ;121
000602  f7fffffe          BL       LCD_WriteReg
000606  2100              MOVS     r1,#0                 ;122
000608  2021              MOVS     r0,#0x21              ;122
00060a  f7fffffe          BL       LCD_WriteReg
00060e  2106              MOVS     r1,#6                 ;125
000610  2030              MOVS     r0,#0x30              ;125
000612  f7fffffe          BL       LCD_WriteReg
000616  f2401101          MOV      r1,#0x101             ;126
00061a  2031              MOVS     r0,#0x31              ;126
00061c  f7fffffe          BL       LCD_WriteReg
000620  2103              MOVS     r1,#3                 ;127
000622  2032              MOVS     r0,#0x32              ;127
000624  f7fffffe          BL       LCD_WriteReg
000628  f44f7183          MOV      r1,#0x106             ;128
00062c  2035              MOVS     r0,#0x35              ;128
00062e  f7fffffe          BL       LCD_WriteReg
000632  f6403102          MOV      r1,#0xb02             ;129
000636  2036              MOVS     r0,#0x36              ;129
000638  f7fffffe          BL       LCD_WriteReg
00063c  f2403102          MOV      r1,#0x302             ;130
000640  2037              MOVS     r0,#0x37              ;130
000642  f7fffffe          BL       LCD_WriteReg
000646  f2407107          MOV      r1,#0x707             ;131
00064a  2038              MOVS     r0,#0x38              ;131
00064c  f7fffffe          BL       LCD_WriteReg
000650  2107              MOVS     r1,#7                 ;132
000652  2039              MOVS     r0,#0x39              ;132
000654  f7fffffe          BL       LCD_WriteReg
000658  f44f61c0          MOV      r1,#0x600             ;133
00065c  203c              MOVS     r0,#0x3c              ;133
00065e  f7fffffe          BL       LCD_WriteReg
000662  f240210b          MOV      r1,#0x20b             ;134
000666  203d              MOVS     r0,#0x3d              ;134
000668  f7fffffe          BL       LCD_WriteReg
00066c  2100              MOVS     r1,#0                 ;137
00066e  2050              MOVS     r0,#0x50              ;137
000670  f7fffffe          BL       LCD_WriteReg
000674  21ef              MOVS     r1,#0xef              ;138
000676  2051              MOVS     r0,#0x51              ;138
000678  f7fffffe          BL       LCD_WriteReg
00067c  2100              MOVS     r1,#0                 ;139
00067e  2052              MOVS     r0,#0x52              ;139
000680  f7fffffe          BL       LCD_WriteReg
000684  f240113f          MOV      r1,#0x13f             ;140
000688  2053              MOVS     r0,#0x53              ;140
00068a  f7fffffe          BL       LCD_WriteReg
00068e  f44f511c          MOV      r1,#0x2700            ;142
000692  2060              MOVS     r0,#0x60              ;142
000694  f7fffffe          BL       LCD_WriteReg
000698  2101              MOVS     r1,#1                 ;143
00069a  2061              MOVS     r0,#0x61              ;143
00069c  f7fffffe          BL       LCD_WriteReg
0006a0  2100              MOVS     r1,#0                 ;144
0006a2  206a              MOVS     r0,#0x6a              ;144
0006a4  f7fffffe          BL       LCD_WriteReg
0006a8  2100              MOVS     r1,#0                 ;147
0006aa  2080              MOVS     r0,#0x80              ;147
0006ac  f7fffffe          BL       LCD_WriteReg
0006b0  2100              MOVS     r1,#0                 ;148
0006b2  2081              MOVS     r0,#0x81              ;148
0006b4  f7fffffe          BL       LCD_WriteReg
0006b8  2100              MOVS     r1,#0                 ;149
0006ba  2082              MOVS     r0,#0x82              ;149
0006bc  f7fffffe          BL       LCD_WriteReg
0006c0  2100              MOVS     r1,#0                 ;150
0006c2  2083              MOVS     r0,#0x83              ;150
0006c4  f7fffffe          BL       LCD_WriteReg
0006c8  2100              MOVS     r1,#0                 ;151
0006ca  2084              MOVS     r0,#0x84              ;151
0006cc  f7fffffe          BL       LCD_WriteReg
0006d0  2100              MOVS     r1,#0                 ;152
0006d2  2085              MOVS     r0,#0x85              ;152
0006d4  f7fffffe          BL       LCD_WriteReg
0006d8  2110              MOVS     r1,#0x10              ;155
0006da  2090              MOVS     r0,#0x90              ;155
0006dc  f7fffffe          BL       LCD_WriteReg
0006e0  2100              MOVS     r1,#0                 ;156
0006e2  2092              MOVS     r0,#0x92              ;156
0006e4  f7fffffe          BL       LCD_WriteReg
0006e8  2103              MOVS     r1,#3                 ;157
0006ea  2093              MOVS     r0,#0x93              ;157
0006ec  f7fffffe          BL       LCD_WriteReg
0006f0  f44f7188          MOV      r1,#0x110             ;158
0006f4  2095              MOVS     r0,#0x95              ;158
0006f6  f7fffffe          BL       LCD_WriteReg
0006fa  2100              MOVS     r1,#0                 ;159
0006fc  2097              MOVS     r0,#0x97              ;159
0006fe  f7fffffe          BL       LCD_WriteReg
000702  2100              MOVS     r1,#0                 ;160
000704  2098              MOVS     r0,#0x98              ;160
000706  f7fffffe          BL       LCD_WriteReg
00070a  f2410118          MOV      r1,#0x1018            ;165
00070e  2003              MOVS     r0,#3                 ;165
000710  f7fffffe          BL       LCD_WriteReg
000714  e8bd4010          POP      {r4,lr}               ;167
000718  f2401173          MOV      r1,#0x173             ;167
00071c  2007              MOVS     r0,#7                 ;167
00071e  e7fe              B        LCD_WriteReg
                  |L1.1824|
;;;277      }
;;;278    }
000720  bd10              POP      {r4,pc}
;;;279    
                          ENDP

                  LCD_ReadReg PROC
;;;933    *******************************************************************************/
;;;934    u16 LCD_ReadReg(u8 LCD_Reg)
000722  b570              PUSH     {r4-r6,lr}
;;;935    {
;;;936      u16 tmp = 0;
;;;937      u8 i = 0;
000724  2400              MOVS     r4,#0
;;;938    
;;;939      /* SPI2 prescaler: 4 */
;;;940      SPI2->CR1 &= 0xFFC7;
000726  4dfe              LDR      r5,|L1.2848|
000728  8829              LDRH     r1,[r5,#0]
00072a  f0210138          BIC      r1,r1,#0x38
00072e  8029              STRH     r1,[r5,#0]
;;;941      SPI2->CR1 |= 0x0008;
000730  8829              LDRH     r1,[r5,#0]
000732  f0410108          ORR      r1,r1,#8
000736  8029              STRH     r1,[r5,#0]
;;;942    
;;;943      /* Write 16-bit Index (then Read Reg) */
;;;944      LCD_WriteRegIndex(LCD_Reg);
000738  f7fffffe          BL       LCD_WriteRegIndex
;;;945    
;;;946      /* Read 16-bit Reg */
;;;947      /* Reset LCD control line(/CS) and Send Start-Byte */
;;;948      LCD_nCS_StartByte(START_BYTE | READ_REG);
00073c  2073              MOVS     r0,#0x73
00073e  f7fffffe          BL       LCD_nCS_StartByte
                  |L1.1858|
;;;949    
;;;950      for(i = 0; i < 5; i++)
;;;951      {
;;;952        SPI_I2S_SendData(SPI2, 0xFF);
000742  21ff              MOVS     r1,#0xff
000744  4628              MOV      r0,r5
000746  f7fffffe          BL       SPI_I2S_SendData
                  |L1.1866|
;;;953        while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_BSY) != RESET)
00074a  2180              MOVS     r1,#0x80
00074c  4628              MOV      r0,r5
00074e  f7fffffe          BL       SPI_I2S_GetFlagStatus
000752  2800              CMP      r0,#0
000754  d1f9              BNE      |L1.1866|
                  |L1.1878|
;;;954        {
;;;955        }
;;;956        /* One byte of invalid dummy data read after the start byte */
;;;957        while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_RXNE) == RESET)
000756  2101              MOVS     r1,#1
000758  4628              MOV      r0,r5
00075a  f7fffffe          BL       SPI_I2S_GetFlagStatus
00075e  2800              CMP      r0,#0
000760  d0f9              BEQ      |L1.1878|
;;;958        {
;;;959        }
;;;960        SPI_I2S_ReceiveData(SPI2);
000762  4628              MOV      r0,r5
000764  f7fffffe          BL       SPI_I2S_ReceiveData
000768  1c60              ADDS     r0,r4,#1              ;950
00076a  b2c4              UXTB     r4,r0                 ;950
00076c  2c05              CMP      r4,#5                 ;950
00076e  d3e8              BCC      |L1.1858|
;;;961      }
;;;962    
;;;963      SPI_I2S_SendData(SPI2, 0xFF);
000770  21ff              MOVS     r1,#0xff
000772  4628              MOV      r0,r5
000774  f7fffffe          BL       SPI_I2S_SendData
                  |L1.1912|
;;;964      /* Read upper byte */
;;;965      while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_BSY) != RESET)
000778  2180              MOVS     r1,#0x80
00077a  4628              MOV      r0,r5
00077c  f7fffffe          BL       SPI_I2S_GetFlagStatus
000780  2800              CMP      r0,#0
000782  d1f9              BNE      |L1.1912|
                  |L1.1924|
;;;966      {
;;;967      }
;;;968      /* Read lower byte */
;;;969      while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_RXNE) == RESET)
000784  2101              MOVS     r1,#1
000786  4628              MOV      r0,r5
000788  f7fffffe          BL       SPI_I2S_GetFlagStatus
00078c  2800              CMP      r0,#0
00078e  d0f9              BEQ      |L1.1924|
;;;970      {
;;;971      }
;;;972      tmp = SPI_I2S_ReceiveData(SPI2);
000790  4628              MOV      r0,r5
000792  f7fffffe          BL       SPI_I2S_ReceiveData
000796  4604              MOV      r4,r0
;;;973    
;;;974    
;;;975      SPI_I2S_SendData(SPI2, 0xFF);
000798  21ff              MOVS     r1,#0xff
00079a  4628              MOV      r0,r5
00079c  f7fffffe          BL       SPI_I2S_SendData
                  |L1.1952|
;;;976      while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_BSY) != RESET)
0007a0  2180              MOVS     r1,#0x80
0007a2  4628              MOV      r0,r5
0007a4  f7fffffe          BL       SPI_I2S_GetFlagStatus
0007a8  2800              CMP      r0,#0
0007aa  d1f9              BNE      |L1.1952|
                  |L1.1964|
;;;977      {
;;;978      }
;;;979      /* Read lower byte */
;;;980      while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_RXNE) == RESET)
0007ac  2101              MOVS     r1,#1
0007ae  4628              MOV      r0,r5
0007b0  f7fffffe          BL       SPI_I2S_GetFlagStatus
0007b4  2800              CMP      r0,#0
0007b6  d0f9              BEQ      |L1.1964|
;;;981      {
;;;982      }
;;;983      tmp = ((tmp & 0xFF) << 8) | SPI_I2S_ReceiveData(SPI2);
0007b8  4628              MOV      r0,r5
0007ba  f7fffffe          BL       SPI_I2S_ReceiveData
0007be  b2e1              UXTB     r1,r4
0007c0  ea402401          ORR      r4,r0,r1,LSL #8
;;;984    
;;;985      LCD_CtrlLinesWrite(GPIOB, CtrlPin_NCS, Bit_SET);
0007c4  2201              MOVS     r2,#1
0007c6  2104              MOVS     r1,#4
0007c8  48d6              LDR      r0,|L1.2852|
0007ca  f7fffffe          BL       LCD_CtrlLinesWrite
;;;986    
;;;987      /* SPI2 prescaler: 2 */
;;;988      SPI2->CR1 &= 0xFFC7;
0007ce  8828              LDRH     r0,[r5,#0]
0007d0  f0200038          BIC      r0,r0,#0x38
0007d4  8028              STRH     r0,[r5,#0]
;;;989    
;;;990      return tmp;
0007d6  4620              MOV      r0,r4
;;;991    }
0007d8  bd70              POP      {r4-r6,pc}
;;;992    
                          ENDP

                  STM3210B_LCD_Init PROC
;;;286    *******************************************************************************/
;;;287    void STM3210B_LCD_Init(void)
0007da  b510              PUSH     {r4,lr}
;;;288    {
;;;289      /* Setups the LCD */
;;;290      LCD_Setup();
0007dc  f7fffffe          BL       LCD_Setup
;;;291    
;;;292      /* Try to read new LCD controller ID 0x9320 */
;;;293      if (LCD_ReadReg(R0) == LCD_ILI9320)
0007e0  2000              MOVS     r0,#0
0007e2  f7fffffe          BL       LCD_ReadReg
0007e6  f2493120          MOV      r1,#0x9320
;;;294      {
;;;295        LCDType = LCD_ILI9320;
0007ea  4acf              LDR      r2,|L1.2856|
0007ec  4288              CMP      r0,r1                 ;293
0007ee  d101              BNE      |L1.2036|
0007f0  6051              STR      r1,[r2,#4]  ; LCDType
;;;296      }
;;;297      else
;;;298      {
;;;299        LCDType = LCD_HX8312;
;;;300        /* Setups the LCD */
;;;301        LCD_Setup();
;;;302      }
;;;303    }
0007f2  bd10              POP      {r4,pc}
                  |L1.2036|
0007f4  f2483012          MOV      r0,#0x8312            ;299
0007f8  6050              STR      r0,[r2,#4]            ;299  ; LCDType
0007fa  e8bd4010          POP      {r4,lr}               ;301
0007fe  e7fe              B        LCD_Setup
;;;304    
                          ENDP

                  LCD_SetTextColor PROC
;;;312    *******************************************************************************/
;;;313    void LCD_SetTextColor(vu16 Color)
000800  b401              PUSH     {r0}
;;;314    {
;;;315      TextColor = Color;
000802  f8bd0000          LDRH     r0,[sp,#0]
000806  49c8              LDR      r1,|L1.2856|
000808  8008              STRH     r0,[r1,#0]
;;;316    }
00080a  b001              ADD      sp,sp,#4
00080c  4770              BX       lr
;;;317    
                          ENDP

                  LCD_SetBackColor PROC
;;;325    *******************************************************************************/
;;;326    void LCD_SetBackColor(vu16 Color)
00080e  b401              PUSH     {r0}
;;;327    {
;;;328      BackColor = Color;
000810  f8bd0000          LDRH     r0,[sp,#0]
000814  49c4              LDR      r1,|L1.2856|
000816  8048              STRH     r0,[r1,#2]
;;;329    }
000818  b001              ADD      sp,sp,#4
00081a  4770              BX       lr
;;;330    
                          ENDP

                  LCD_SetCursor PROC
;;;381    *******************************************************************************/
;;;382    void LCD_SetCursor(u8 Xpos, u16 Ypos)
00081c  b510              PUSH     {r4,lr}
;;;383    {
00081e  460c              MOV      r4,r1
;;;384      if(LCDType == LCD_ILI9320)
000820  49c1              LDR      r1,|L1.2856|
000822  684a              LDR      r2,[r1,#4]  ; LCDType
000824  f5a24313          SUB      r3,r2,#0x9300
000828  3b20              SUBS     r3,r3,#0x20
00082a  d012              BEQ      |L1.2130|
;;;385      {
;;;386        LCD_WriteReg(R32, Xpos);
;;;387        LCD_WriteReg(R33, Ypos);
;;;388      }
;;;389      else if(LCDType == LCD_HX8312)
00082c  6849              LDR      r1,[r1,#4]  ; LCDType
00082e  f5a14203          SUB      r2,r1,#0x8300
000832  3a12              SUBS     r2,r2,#0x12
000834  d116              BNE      |L1.2148|
;;;390      {
;;;391        LCD_WriteReg(R66, Xpos);
000836  4601              MOV      r1,r0
000838  2042              MOVS     r0,#0x42
00083a  f7fffffe          BL       LCD_WriteReg
;;;392        LCD_WriteReg(R67, ((Ypos & 0x100)>> 8));
00083e  f3c42100          UBFX     r1,r4,#8,#1
000842  2043              MOVS     r0,#0x43
000844  f7fffffe          BL       LCD_WriteReg
;;;393        LCD_WriteReg(R68, (Ypos & 0xFF));
000848  b2e1              UXTB     r1,r4
00084a  e8bd4010          POP      {r4,lr}
00084e  2044              MOVS     r0,#0x44
000850  e7fe              B        LCD_WriteReg
                  |L1.2130|
000852  4601              MOV      r1,r0                 ;386
000854  2020              MOVS     r0,#0x20              ;386
000856  f7fffffe          BL       LCD_WriteReg
00085a  4621              MOV      r1,r4                 ;387
00085c  e8bd4010          POP      {r4,lr}               ;387
000860  2021              MOVS     r0,#0x21              ;387
000862  e7fe              B        LCD_WriteReg
                  |L1.2148|
;;;394      }
;;;395    }
000864  bd10              POP      {r4,pc}
;;;396    
                          ENDP

                  LCD_WriteRAM PROC
;;;1078   *******************************************************************************/
;;;1079   void LCD_WriteRAM(u16 RGB_Code)
000866  b570              PUSH     {r4-r6,lr}
;;;1080   {
000868  4604              MOV      r4,r0
;;;1081     if(LCDType == LCD_ILI9320)
00086a  4eaf              LDR      r6,|L1.2856|
00086c  6870              LDR      r0,[r6,#4]  ; LCDType
;;;1082     {
;;;1083       SPI_I2S_SendData(SPI2, RGB_Code >> 8);
00086e  4dac              LDR      r5,|L1.2848|
000870  f5a04113          SUB      r1,r0,#0x9300         ;1081
000874  3920              SUBS     r1,r1,#0x20           ;1081
000876  d113              BNE      |L1.2208|
000878  0a21              LSRS     r1,r4,#8
00087a  4628              MOV      r0,r5
00087c  f7fffffe          BL       SPI_I2S_SendData
                  |L1.2176|
;;;1084       while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_BSY) != RESET)
000880  2180              MOVS     r1,#0x80
000882  4628              MOV      r0,r5
000884  f7fffffe          BL       SPI_I2S_GetFlagStatus
000888  2800              CMP      r0,#0
00088a  d1f9              BNE      |L1.2176|
;;;1085       {
;;;1086       }
;;;1087       SPI_I2S_SendData(SPI2, RGB_Code & 0xFF);
00088c  b2e1              UXTB     r1,r4
00088e  4628              MOV      r0,r5
000890  f7fffffe          BL       SPI_I2S_SendData
                  |L1.2196|
;;;1088       while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_BSY) != RESET)
000894  2180              MOVS     r1,#0x80
000896  4628              MOV      r0,r5
000898  f7fffffe          BL       SPI_I2S_GetFlagStatus
00089c  2800              CMP      r0,#0
00089e  d1f9              BNE      |L1.2196|
                  |L1.2208|
;;;1089       {
;;;1090       }
;;;1091     }
;;;1092     if(LCDType == LCD_HX8312)
0008a0  6870              LDR      r0,[r6,#4]  ; LCDType
0008a2  f5a04103          SUB      r1,r0,#0x8300
0008a6  3912              SUBS     r1,r1,#0x12
0008a8  d122              BNE      |L1.2288|
;;;1093     {
;;;1094       LCD_CtrlLinesWrite(GPIOD, CtrlPin_NWR, Bit_RESET);
0008aa  4ea0              LDR      r6,|L1.2860|
0008ac  2200              MOVS     r2,#0
0008ae  f44f4100          MOV      r1,#0x8000
0008b2  4630              MOV      r0,r6
0008b4  f7fffffe          BL       LCD_CtrlLinesWrite
;;;1095       LCD_CtrlLinesWrite(GPIOD, CtrlPin_RS, Bit_SET);
0008b8  2201              MOVS     r2,#1
0008ba  2180              MOVS     r1,#0x80
0008bc  4630              MOV      r0,r6
0008be  f7fffffe          BL       LCD_CtrlLinesWrite
;;;1096       LCD_CtrlLinesWrite(GPIOB, CtrlPin_NCS, Bit_RESET);
0008c2  4e98              LDR      r6,|L1.2852|
0008c4  2200              MOVS     r2,#0
0008c6  2104              MOVS     r1,#4
0008c8  4630              MOV      r0,r6
0008ca  f7fffffe          BL       LCD_CtrlLinesWrite
;;;1097   
;;;1098       SPI_I2S_SendData(SPI2, RGB_Code);
0008ce  4621              MOV      r1,r4
0008d0  4628              MOV      r0,r5
0008d2  f7fffffe          BL       SPI_I2S_SendData
                  |L1.2262|
;;;1099       while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_BSY) != RESET)
0008d6  2180              MOVS     r1,#0x80
0008d8  4628              MOV      r0,r5
0008da  f7fffffe          BL       SPI_I2S_GetFlagStatus
0008de  2800              CMP      r0,#0
0008e0  d1f9              BNE      |L1.2262|
;;;1100       {
;;;1101       }
;;;1102   
;;;1103       LCD_CtrlLinesWrite(GPIOB, CtrlPin_NCS, Bit_SET);
0008e2  4630              MOV      r0,r6
0008e4  e8bd4070          POP      {r4-r6,lr}
0008e8  2201              MOVS     r2,#1
0008ea  2104              MOVS     r1,#4
0008ec  f7ffbffe          B.W      LCD_CtrlLinesWrite
                  |L1.2288|
;;;1104     }
;;;1105   }
0008f0  bd70              POP      {r4-r6,pc}
;;;1106   
                          ENDP

                  LCD_WriteRAM_Prepare PROC
;;;999    *******************************************************************************/
;;;1000   void LCD_WriteRAM_Prepare(void)
0008f2  b510              PUSH     {r4,lr}
;;;1001   {
;;;1002     LCD_WriteRegIndex(R34); /* Select GRAM Reg */
0008f4  2022              MOVS     r0,#0x22
0008f6  f7fffffe          BL       LCD_WriteRegIndex
;;;1003   
;;;1004     /* Reset LCD control line(/CS) and Send Start-Byte */
;;;1005     LCD_nCS_StartByte(START_BYTE | WRITE_REG);
0008fa  e8bd4010          POP      {r4,lr}
0008fe  2072              MOVS     r0,#0x72
000900  f7ffbffe          B.W      LCD_nCS_StartByte
;;;1006   }
;;;1007   
                          ENDP

                  LCD_DrawChar PROC
;;;407    *******************************************************************************/
;;;408    void LCD_DrawChar(u8 Xpos, u16 Ypos, uc16 *c)
000904  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
;;;409    {
000908  4607              MOV      r7,r0
00090a  4690              MOV      r8,r2
;;;410      u32 index = 0, i = 0;
00090c  2500              MOVS     r5,#0
;;;411      u8 Xaddress = 0;
;;;412    
;;;413      Xaddress = Xpos;
;;;414    
;;;415      LCD_SetCursor(Xaddress, Ypos);
00090e  4638              MOV      r0,r7
000910  9901              LDR      r1,[sp,#4]
000912  f7fffffe          BL       LCD_SetCursor
;;;416    
;;;417      for(index = 0; index < 24; index++)
;;;418      {
;;;419        if(LCDType == LCD_ILI9320)
000916  4e84              LDR      r6,|L1.2856|
;;;420        {
;;;421          LCD_WriteRAM_Prepare(); /* Prepare to write GRAM */
;;;422        }
;;;423        for(i = 0; i < 16; i++)
;;;424        {
;;;425          if((c[index] & (1 << i)) == 0x00)
;;;426          {
;;;427            LCD_WriteRAM(BackColor);
;;;428          }
;;;429          else
;;;430          {
;;;431            LCD_WriteRAM(TextColor);
;;;432          }
;;;433        }
;;;434        if(LCDType == LCD_ILI9320)
;;;435        {
;;;436          LCD_CtrlLinesWrite(GPIOB, CtrlPin_NCS, Bit_SET);
000918  f8dfb208          LDR      r11,|L1.2852|
00091c  f04f0a01          MOV      r10,#1                ;425
000920  f2493920          MOV      r9,#0x9320            ;419
                  |L1.2340|
000924  6870              LDR      r0,[r6,#4]            ;419  ; LCDType
000926  4548              CMP      r0,r9                 ;419
000928  d101              BNE      |L1.2350|
00092a  f7fffffe          BL       LCD_WriteRAM_Prepare
                  |L1.2350|
00092e  2400              MOVS     r4,#0                 ;423
                  |L1.2352|
000930  f8380015          LDRH     r0,[r8,r5,LSL #1]     ;425
000934  fa0af104          LSL      r1,r10,r4             ;425
000938  4208              TST      r0,r1                 ;425
00093a  d103              BNE      |L1.2372|
00093c  8870              LDRH     r0,[r6,#2]            ;427  ; BackColor
00093e  f7fffffe          BL       LCD_WriteRAM
000942  e002              B        |L1.2378|
                  |L1.2372|
000944  8830              LDRH     r0,[r6,#0]            ;431  ; TextColor
000946  f7fffffe          BL       LCD_WriteRAM
                  |L1.2378|
00094a  1c64              ADDS     r4,r4,#1              ;423
00094c  2c10              CMP      r4,#0x10              ;423
00094e  d3ef              BCC      |L1.2352|
000950  6870              LDR      r0,[r6,#4]            ;434  ; LCDType
000952  4548              CMP      r0,r9                 ;434
000954  d104              BNE      |L1.2400|
000956  2201              MOVS     r2,#1
000958  2104              MOVS     r1,#4
00095a  4658              MOV      r0,r11
00095c  f7fffffe          BL       LCD_CtrlLinesWrite
                  |L1.2400|
;;;437        }
;;;438        Xaddress++;
000960  1c78              ADDS     r0,r7,#1
000962  b2c7              UXTB     r7,r0
;;;439        LCD_SetCursor(Xaddress, Ypos);
000964  4638              MOV      r0,r7
000966  9901              LDR      r1,[sp,#4]
000968  f7fffffe          BL       LCD_SetCursor
00096c  1c6d              ADDS     r5,r5,#1              ;417
00096e  2d18              CMP      r5,#0x18              ;417
000970  d3d8              BCC      |L1.2340|
;;;440      }
;;;441    }
000972  b003              ADD      sp,sp,#0xc
000974  e8bd8ff0          POP      {r4-r11,pc}
;;;442    
                          ENDP

                  LCD_DisplayChar PROC
;;;453    *******************************************************************************/
;;;454    void LCD_DisplayChar(u8 Line, u16 Column, u8 Ascii)
000978  3a20              SUBS     r2,r2,#0x20
;;;455    {
;;;456      Ascii -= 32;
00097a  b2d2              UXTB     r2,r2
;;;457      LCD_DrawChar(Line, Column, &ASCII_Table[Ascii * 24]);
00097c  4b6c              LDR      r3,|L1.2864|
00097e  eb020242          ADD      r2,r2,r2,LSL #1
000982  eb031202          ADD      r2,r3,r2,LSL #4
000986  e7fe              B        LCD_DrawChar
;;;458    }
;;;459    
                          ENDP

                  LCD_DisplayStringLine PROC
;;;469    *******************************************************************************/
;;;470    void LCD_DisplayStringLine(u8 Line, u8 *ptr)
000988  e92d41f0          PUSH     {r4-r8,lr}
;;;471    {
00098c  4607              MOV      r7,r0
00098e  460d              MOV      r5,r1
;;;472      u32 i = 0;
000990  2400              MOVS     r4,#0
;;;473      u16 refcolumn = 319;
000992  f240163f          MOV      r6,#0x13f
000996  e008              B        |L1.2474|
                  |L1.2456|
;;;474    
;;;475      /* Send the string character by character on lCD */
;;;476      while ((*ptr != 0) & (i < 20))
;;;477      {
;;;478        /* Display one character on LCD */
;;;479        LCD_DisplayChar(Line, refcolumn, *ptr);
000998  4631              MOV      r1,r6
00099a  4638              MOV      r0,r7
00099c  f7fffffe          BL       LCD_DisplayChar
;;;480        /* Decrement the column position by 16 */
;;;481        refcolumn -= 16;
0009a0  f1a60010          SUB      r0,r6,#0x10
0009a4  b286              UXTH     r6,r0
;;;482        /* Point on the next character */
;;;483        ptr++;
0009a6  1c6d              ADDS     r5,r5,#1
;;;484        /* Increment the character counter */
;;;485        i++;
0009a8  1c64              ADDS     r4,r4,#1
                  |L1.2474|
0009aa  782a              LDRB     r2,[r5,#0]            ;476
0009ac  2a00              CMP      r2,#0                 ;476
0009ae  d001              BEQ      |L1.2484|
0009b0  2c14              CMP      r4,#0x14              ;476
0009b2  d3f1              BCC      |L1.2456|
                  |L1.2484|
;;;486      }
;;;487    }
0009b4  e8bd81f0          POP      {r4-r8,pc}
;;;488    
                          ENDP

                  LCD_ClearLine PROC
;;;339    *******************************************************************************/
;;;340    void LCD_ClearLine(u8 Line)
0009b8  a15e              ADR      r1,|L1.2868|
;;;341    {
;;;342      LCD_DisplayStringLine(Line, "                    ");
0009ba  e7fe              B        LCD_DisplayStringLine
;;;343    }
;;;344    
                          ENDP

                  LCD_Clear PROC
;;;351    *******************************************************************************/
;;;352    void LCD_Clear(u16 Color)
0009bc  e92d41f0          PUSH     {r4-r8,lr}
;;;353    {
0009c0  4607              MOV      r7,r0
;;;354      u32 index = 0;
0009c2  2400              MOVS     r4,#0
;;;355    
;;;356      LCD_SetCursor(0x00, 0x013F);
0009c4  f240113f          MOV      r1,#0x13f
0009c8  2000              MOVS     r0,#0
0009ca  f7fffffe          BL       LCD_SetCursor
;;;357    
;;;358      if(LCDType == LCD_ILI9320)
0009ce  4e56              LDR      r6,|L1.2856|
0009d0  6870              LDR      r0,[r6,#4]  ; LCDType
0009d2  f2493520          MOV      r5,#0x9320
0009d6  42a8              CMP      r0,r5
0009d8  d101              BNE      |L1.2526|
;;;359      {
;;;360        LCD_WriteRAM_Prepare(); /* Prepare to write GRAM */
0009da  f7fffffe          BL       LCD_WriteRAM_Prepare
                  |L1.2526|
;;;361      }
;;;362    
;;;363      for(index = 0; index < 76800; index++)
;;;364      {
;;;365        LCD_WriteRAM(Color);
0009de  4638              MOV      r0,r7
0009e0  f7fffffe          BL       LCD_WriteRAM
0009e4  1c64              ADDS     r4,r4,#1              ;363
0009e6  f5b43f96          CMP      r4,#0x12c00           ;363
0009ea  d3f8              BCC      |L1.2526|
;;;366      }
;;;367    
;;;368      if(LCDType == LCD_ILI9320)
0009ec  6870              LDR      r0,[r6,#4]  ; LCDType
0009ee  42a8              CMP      r0,r5
0009f0  d106              BNE      |L1.2560|
;;;369      {
;;;370        LCD_CtrlLinesWrite(GPIOB, CtrlPin_NCS, Bit_SET);
0009f2  e8bd41f0          POP      {r4-r8,lr}
0009f6  2201              MOVS     r2,#1
0009f8  2104              MOVS     r1,#4
0009fa  484a              LDR      r0,|L1.2852|
0009fc  f7ffbffe          B.W      LCD_CtrlLinesWrite
                  |L1.2560|
;;;371      }
;;;372    }
000a00  e8bd81f0          POP      {r4-r8,pc}
;;;373    
                          ENDP

                  LCD_DisplayString PROC
;;;498    *******************************************************************************/
;;;499    void LCD_DisplayString(u8 Line, u8 *ptr)
000a04  e92d47f0          PUSH     {r4-r10,lr}
;;;500    {
000a08  4682              MOV      r10,r0
000a0a  460c              MOV      r4,r1
;;;501      u32 i = 0, column = 0, index = 0, spaceindex = 0;
000a0c  2600              MOVS     r6,#0
000a0e  46b1              MOV      r9,r6
000a10  2500              MOVS     r5,#0
;;;502      u16 refcolumn = 319;
000a12  f240173f          MOV      r7,#0x13f
;;;503      u32 length = 0;
;;;504    
;;;505      /* Get the string length */
;;;506      length = StrLength(ptr);
000a16  4620              MOV      r0,r4
000a18  f7fffffe          BL       StrLength
000a1c  4680              MOV      r8,r0
;;;507      if(length > 200)
000a1e  f1b80fc8          CMP      r8,#0xc8
000a22  d90b              BLS      |L1.2620|
;;;508      {
;;;509        /* Set the Cursor position */
;;;510        LCD_SetCursor(Line, 0x013F);
000a24  4639              MOV      r1,r7
000a26  4650              MOV      r0,r10
000a28  f7fffffe          BL       LCD_SetCursor
;;;511        /* Clear the Selected Line */
;;;512        LCD_ClearLine(Line);
000a2c  4650              MOV      r0,r10
000a2e  f7fffffe          BL       LCD_ClearLine
;;;513        LCD_DisplayStringLine(Line, "   String too long  ");
000a32  4650              MOV      r0,r10
000a34  e8bd47f0          POP      {r4-r10,lr}
000a38  a144              ADR      r1,|L1.2892|
000a3a  e7fe              B        LCD_DisplayStringLine
                  |L1.2620|
;;;514      }
;;;515      else
;;;516      {
;;;517        /* Set the Cursor position */
;;;518        LCD_SetCursor(Line, 0x013F);
000a3c  f240113f          MOV      r1,#0x13f
000a40  4650              MOV      r0,r10
000a42  f7fffffe          BL       LCD_SetCursor
;;;519        /* Clear the Selected Line */
;;;520    //    LCD_ClearLine(Line);
;;;521    
;;;522        while(length--)
000a46  f1b80801          SUBS     r8,r8,#1
000a4a  d337              BCC      |L1.2748|
                  |L1.2636|
;;;523        {
;;;524          if(index == 20)
000a4c  f1b90f14          CMP      r9,#0x14
000a50  d11c              BNE      |L1.2700|
;;;525          {
;;;526            if(*ptr == 0x20)
000a52  7820              LDRB     r0,[r4,#0]
000a54  2820              CMP      r0,#0x20
000a56  d029              BEQ      |L1.2732|
;;;527            {
;;;528              ptr++;
;;;529            }
;;;530            else
;;;531            {
;;;532              for(i = 0; i < spaceindex; i++)
000a58  2700              MOVS     r7,#0
000a5a  2d00              CMP      r5,#0
000a5c  d908              BLS      |L1.2672|
                  |L1.2654|
;;;533              {
;;;534                LCD_DisplayChar(Line, column, ' ');
000a5e  b2b1              UXTH     r1,r6
000a60  2220              MOVS     r2,#0x20
000a62  4650              MOV      r0,r10
000a64  f7fffffe          BL       LCD_DisplayChar
;;;535                column -= 16;
000a68  3e10              SUBS     r6,r6,#0x10
000a6a  1c7f              ADDS     r7,r7,#1              ;532
000a6c  42af              CMP      r7,r5                 ;532
000a6e  d3f6              BCC      |L1.2654|
                  |L1.2672|
;;;536              }
;;;537              ptr -= (spaceindex - 1);
000a70  1b60              SUBS     r0,r4,r5
000a72  1c44              ADDS     r4,r0,#1
;;;538              length += (spaceindex - 1);
000a74  eb080005          ADD      r0,r8,r5
000a78  f1a00801          SUB      r8,r0,#1
                  |L1.2684|
;;;539            }
;;;540            Line += 24;
000a7c  f10a0018          ADD      r0,r10,#0x18
000a80  f0000aff          AND      r10,r0,#0xff
;;;541            /* Clear the Selected Line */
;;;542    //        LCD_ClearLine(Line);
;;;543            refcolumn = 319;
000a84  f240173f          MOV      r7,#0x13f
;;;544            index = 0;
000a88  f04f0900          MOV      r9,#0
                  |L1.2700|
;;;545          }
;;;546          /* Display one character on LCD */
;;;547          LCD_DisplayChar(Line, refcolumn, *ptr);
000a8c  7822              LDRB     r2,[r4,#0]
000a8e  4639              MOV      r1,r7
000a90  4650              MOV      r0,r10
000a92  f7fffffe          BL       LCD_DisplayChar
;;;548    
;;;549          /* Increment character number in one line */
;;;550          index++;
000a96  f1090901          ADD      r9,r9,#1
;;;551    
;;;552          /* Decrement the column position by 16 */
;;;553          refcolumn -= 16;
000a9a  f1a70010          SUB      r0,r7,#0x10
000a9e  b287              UXTH     r7,r0
;;;554          /* Point on the next character */
;;;555          ptr++;
000aa0  1c64              ADDS     r4,r4,#1
;;;556          /* Increment the number of character after the last space */
;;;557          spaceindex++;
000aa2  1c6d              ADDS     r5,r5,#1
;;;558          if(*ptr == 0x20)
000aa4  7820              LDRB     r0,[r4,#0]
000aa6  2820              CMP      r0,#0x20
000aa8  d002              BEQ      |L1.2736|
000aaa  e004              B        |L1.2742|
                  |L1.2732|
000aac  1c64              ADDS     r4,r4,#1              ;528
000aae  e7e5              B        |L1.2684|
                  |L1.2736|
;;;559          {
;;;560            spaceindex = 0;
000ab0  2500              MOVS     r5,#0
;;;561            column = refcolumn - 16;
000ab2  f1a70610          SUB      r6,r7,#0x10
                  |L1.2742|
000ab6  f1b80801          SUBS     r8,r8,#1              ;522
000aba  d2c7              BCS      |L1.2636|
                  |L1.2748|
;;;562          }
;;;563        }
;;;564      }
;;;565    }
000abc  e8bd87f0          POP      {r4-r10,pc}
;;;566    /*******************************************************************************
                          ENDP

                  LCD_SetDisplayWindow PROC
;;;575    *******************************************************************************/
;;;576    void LCD_SetDisplayWindow(u8 Xpos, u16 Ypos, u8 Height, u16 Width)
000ac0  e92d41f0          PUSH     {r4-r8,lr}
;;;577    {
000ac4  4607              MOV      r7,r0
000ac6  460c              MOV      r4,r1
000ac8  4698              MOV      r8,r3
;;;578      if(LCDType == LCD_ILI9320)
000aca  f8dfc05c          LDR      r12,|L1.2856|
000ace  f8dc1004          LDR      r1,[r12,#4]  ; LCDType
;;;579      {
;;;580        /* Horizontal GRAM Start Address */
;;;581        if(Xpos >= Height)
;;;582        {
;;;583          LCD_WriteReg(R80, (Xpos - Height + 1));
000ad2  1ab8              SUBS     r0,r7,r2
000ad4  1c46              ADDS     r6,r0,#1
;;;584        }
;;;585        else
;;;586        {
;;;587          LCD_WriteReg(R80, 0);
;;;588        }
;;;589        /* Horizontal GRAM End Address */
;;;590        LCD_WriteReg(R81, Xpos);
;;;591        /* Vertical GRAM Start Address */
;;;592        if(Ypos >= Width)
;;;593        {
;;;594          LCD_WriteReg(R82, (Ypos - Width + 1));
000ad6  eba40008          SUB      r0,r4,r8
000ada  1c45              ADDS     r5,r0,#1
000adc  f5a14313          SUB      r3,r1,#0x9300         ;578
000ae0  3b20              SUBS     r3,r3,#0x20           ;578
000ae2  d006              BEQ      |L1.2802|
;;;595        }
;;;596        else
;;;597        {
;;;598          LCD_WriteReg(R82, 0);
;;;599        }
;;;600        /* Vertical GRAM End Address */
;;;601        LCD_WriteReg(R83, Ypos);
;;;602      }
;;;603      else if(LCDType == LCD_HX8312)
000ae4  f8dc0004          LDR      r0,[r12,#4]  ; LCDType
000ae8  f5a04103          SUB      r1,r0,#0x8300
000aec  3912              SUBS     r1,r1,#0x12
000aee  d042              BEQ      |L1.2934|
000af0  e063              B        |L1.3002|
                  |L1.2802|
000af2  4297              CMP      r7,r2                 ;581
000af4  d304              BCC      |L1.2816|
000af6  b2b1              UXTH     r1,r6                 ;583
000af8  2050              MOVS     r0,#0x50              ;583
000afa  f7fffffe          BL       LCD_WriteReg
000afe  e003              B        |L1.2824|
                  |L1.2816|
000b00  2100              MOVS     r1,#0                 ;587
000b02  2050              MOVS     r0,#0x50              ;587
000b04  f7fffffe          BL       LCD_WriteReg
                  |L1.2824|
000b08  4639              MOV      r1,r7                 ;590
000b0a  2051              MOVS     r0,#0x51              ;590
000b0c  f7fffffe          BL       LCD_WriteReg
000b10  4544              CMP      r4,r8                 ;592
000b12  d327              BCC      |L1.2916|
000b14  b2a9              UXTH     r1,r5                 ;594
000b16  2052              MOVS     r0,#0x52              ;594
000b18  f7fffffe          BL       LCD_WriteReg
000b1c  e026              B        |L1.2924|
000b1e  0000              DCW      0x0000
                  |L1.2848|
                          DCD      0x40003800
                  |L1.2852|
                          DCD      0x40010c00
                  |L1.2856|
                          DCD      ||.data||
                  |L1.2860|
                          DCD      0x40011400
                  |L1.2864|
                          DCD      ||.constdata||
                  |L1.2868|
000b34  20202020          DCB      "                    ",0
000b38  20202020
000b3c  20202020
000b40  20202020
000b44  20202020
000b48  00      
000b49  00                DCB      0
000b4a  00                DCB      0
000b4b  00                DCB      0
                  |L1.2892|
000b4c  20202053          DCB      "   String too long  ",0
000b50  7472696e
000b54  6720746f
000b58  6f206c6f
000b5c  6e672020
000b60  00      
000b61  00                DCB      0
000b62  00                DCB      0
000b63  00                DCB      0
                  |L1.2916|
000b64  2100              MOVS     r1,#0                 ;598
000b66  2052              MOVS     r0,#0x52              ;598
000b68  f7fffffe          BL       LCD_WriteReg
                  |L1.2924|
000b6c  4621              MOV      r1,r4                 ;601
000b6e  2053              MOVS     r0,#0x53              ;601
000b70  f7fffffe          BL       LCD_WriteReg
000b74  e021              B        |L1.3002|
                  |L1.2934|
;;;604      {
;;;605        LCD_WriteReg(R1, 0xD0);
000b76  21d0              MOVS     r1,#0xd0
000b78  2001              MOVS     r0,#1
000b7a  f7fffffe          BL       LCD_WriteReg
;;;606        LCD_WriteReg(R5, 0x14);
000b7e  2114              MOVS     r1,#0x14
000b80  2005              MOVS     r0,#5
000b82  f7fffffe          BL       LCD_WriteReg
;;;607    
;;;608        LCD_WriteReg(R69, (Xpos - Height + 1));
000b86  b2b1              UXTH     r1,r6
000b88  2045              MOVS     r0,#0x45
000b8a  f7fffffe          BL       LCD_WriteReg
;;;609        LCD_WriteReg(R70, Xpos);
000b8e  4639              MOV      r1,r7
000b90  2046              MOVS     r0,#0x46
000b92  f7fffffe          BL       LCD_WriteReg
;;;610    
;;;611        LCD_WriteReg(R71, (((Ypos - Width + 1) & 0x100)>> 8));
000b96  f3c52100          UBFX     r1,r5,#8,#1
000b9a  2047              MOVS     r0,#0x47
000b9c  f7fffffe          BL       LCD_WriteReg
;;;612        LCD_WriteReg(R72, ((Ypos - Width + 1) & 0xFF));
000ba0  b2e9              UXTB     r1,r5
000ba2  2048              MOVS     r0,#0x48
000ba4  f7fffffe          BL       LCD_WriteReg
;;;613    
;;;614        LCD_WriteReg(R73, ((Ypos & 0x100)>> 8));
000ba8  f3c42100          UBFX     r1,r4,#8,#1
000bac  2049              MOVS     r0,#0x49
000bae  f7fffffe          BL       LCD_WriteReg
;;;615        LCD_WriteReg(R74, (Ypos & 0xFF));
000bb2  b2e1              UXTB     r1,r4
000bb4  204a              MOVS     r0,#0x4a
000bb6  f7fffffe          BL       LCD_WriteReg
                  |L1.3002|
;;;616      }
;;;617    
;;;618      LCD_SetCursor(Xpos, Ypos);
000bba  4621              MOV      r1,r4
000bbc  4638              MOV      r0,r7
000bbe  e8bd41f0          POP      {r4-r8,lr}
000bc2  e7fe              B        LCD_SetCursor
;;;619    }
;;;620    
                          ENDP

                  LCD_WindowModeDisable PROC
;;;627    *******************************************************************************/
;;;628    void LCD_WindowModeDisable(void)
000bc4  b510              PUSH     {r4,lr}
;;;629    {
;;;630      if(LCDType == LCD_ILI9320)
000bc6  48fe              LDR      r0,|L1.4032|
000bc8  6841              LDR      r1,[r0,#4]  ; LCDType
000bca  f5a14213          SUB      r2,r1,#0x9300
000bce  3a20              SUBS     r2,r2,#0x20
000bd0  d00e              BEQ      |L1.3056|
;;;631      {
;;;632        LCD_SetDisplayWindow(239, 0x13F, 240, 320);
;;;633        LCD_WriteReg(R3, 0x1018);
;;;634      }
;;;635      else if(LCDType == LCD_HX8312)
000bd2  6840              LDR      r0,[r0,#4]  ; LCDType
000bd4  f5a04103          SUB      r1,r0,#0x8300
000bd8  3912              SUBS     r1,r1,#0x12
000bda  d117              BNE      |L1.3084|
;;;636      {
;;;637        LCD_WriteReg(R1, 0x50);
000bdc  2150              MOVS     r1,#0x50
000bde  2001              MOVS     r0,#1
000be0  f7fffffe          BL       LCD_WriteReg
;;;638        LCD_WriteReg(R5, 0x04);
000be4  2104              MOVS     r1,#4
000be6  e8bd4010          POP      {r4,lr}
000bea  2005              MOVS     r0,#5
000bec  f7ffbffe          B.W      LCD_WriteReg
                  |L1.3056|
000bf0  f44f73a0          MOV      r3,#0x140             ;632
000bf4  22f0              MOVS     r2,#0xf0              ;632
000bf6  1e59              SUBS     r1,r3,#1              ;632
000bf8  20ef              MOVS     r0,#0xef              ;632
000bfa  f7fffffe          BL       LCD_SetDisplayWindow
000bfe  e8bd4010          POP      {r4,lr}               ;633
000c02  f2410118          MOV      r1,#0x1018            ;633
000c06  2003              MOVS     r0,#3                 ;633
000c08  f7ffbffe          B.W      LCD_WriteReg
                  |L1.3084|
;;;639      }
;;;640    
;;;641    }
000c0c  bd10              POP      {r4,pc}
;;;642    /*******************************************************************************
                          ENDP

                  LCD_WriteRAMWord PROC
;;;1014   *******************************************************************************/
;;;1015   void LCD_WriteRAMWord(u16 RGB_Code)
000c0e  b510              PUSH     {r4,lr}
;;;1016   {
000c10  4604              MOV      r4,r0
;;;1017     LCD_WriteRAM_Prepare();
000c12  f7fffffe          BL       LCD_WriteRAM_Prepare
;;;1018   
;;;1019     LCD_WriteRAM(RGB_Code);
000c16  4620              MOV      r0,r4
000c18  f7fffffe          BL       LCD_WriteRAM
;;;1020   
;;;1021     LCD_CtrlLinesWrite(GPIOB, CtrlPin_NCS, Bit_SET);
000c1c  2201              MOVS     r2,#1
000c1e  e8bd4010          POP      {r4,lr}
000c22  2104              MOVS     r1,#4
000c24  48e7              LDR      r0,|L1.4036|
000c26  f7ffbffe          B.W      LCD_CtrlLinesWrite
;;;1022   }
;;;1023   
                          ENDP

                  LCD_DrawLine PROC
;;;653    *******************************************************************************/
;;;654    void LCD_DrawLine(u8 Xpos, u16 Ypos, u16 Length, u8 Direction)
000c2a  e92d47f0          PUSH     {r4-r10,lr}
;;;655    {
000c2e  4606              MOV      r6,r0
000c30  468a              MOV      r10,r1
000c32  4615              MOV      r5,r2
000c34  4698              MOV      r8,r3
;;;656      u32 i = 0;
000c36  2400              MOVS     r4,#0
;;;657    
;;;658      LCD_SetCursor(Xpos, Ypos);
000c38  4651              MOV      r1,r10
000c3a  4630              MOV      r0,r6
000c3c  f7fffffe          BL       LCD_SetCursor
;;;659    
;;;660      if(Direction == Horizontal)
;;;661      {
;;;662        if(LCDType == LCD_ILI9320)
000c40  4fdf              LDR      r7,|L1.4032|
000c42  f2493920          MOV      r9,#0x9320
000c46  f1b80f00          CMP      r8,#0                 ;660
000c4a  d00a              BEQ      |L1.3170|
;;;663        {
;;;664          LCD_WriteRAM_Prepare(); /* Prepare to write GRAM */
;;;665        }
;;;666        for(i = 0; i < Length; i++)
;;;667        {
;;;668          LCD_WriteRAM(TextColor);
;;;669        }
;;;670        if(LCDType == LCD_ILI9320)
;;;671        {
;;;672          LCD_CtrlLinesWrite(GPIOB, CtrlPin_NCS, Bit_SET);
;;;673        }
;;;674      }
;;;675      else
;;;676      {
;;;677       for(i = 0; i < Length; i++)
000c4c  2d00              CMP      r5,#0
000c4e  d92e              BLS      |L1.3246|
;;;678        {
;;;679          if(LCDType == LCD_ILI9320)
;;;680          {
;;;681            LCD_WriteRAMWord(TextColor);
;;;682          }
;;;683          else  if(LCDType == LCD_HX8312)
000c50  f2483812          MOV      r8,#0x8312
                  |L1.3156|
000c54  6878              LDR      r0,[r7,#4]            ;679  ; LCDType
000c56  4548              CMP      r0,r9                 ;679
000c58  d11a              BNE      |L1.3216|
000c5a  8838              LDRH     r0,[r7,#0]            ;681  ; TextColor
000c5c  f7fffffe          BL       LCD_WriteRAMWord
000c60  e01c              B        |L1.3228|
                  |L1.3170|
000c62  6878              LDR      r0,[r7,#4]            ;662  ; LCDType
000c64  4548              CMP      r0,r9                 ;662
000c66  d101              BNE      |L1.3180|
000c68  f7fffffe          BL       LCD_WriteRAM_Prepare
                  |L1.3180|
000c6c  2d00              CMP      r5,#0                 ;666
000c6e  d905              BLS      |L1.3196|
                  |L1.3184|
000c70  8838              LDRH     r0,[r7,#0]            ;668  ; TextColor
000c72  f7fffffe          BL       LCD_WriteRAM
000c76  1c64              ADDS     r4,r4,#1              ;666
000c78  42ac              CMP      r4,r5                 ;666
000c7a  d3f9              BCC      |L1.3184|
                  |L1.3196|
000c7c  6878              LDR      r0,[r7,#4]            ;670  ; LCDType
000c7e  4548              CMP      r0,r9                 ;670
000c80  d115              BNE      |L1.3246|
000c82  e8bd47f0          POP      {r4-r10,lr}           ;672
000c86  2201              MOVS     r2,#1                 ;672
000c88  2104              MOVS     r1,#4                 ;672
000c8a  48ce              LDR      r0,|L1.4036|
000c8c  f7ffbffe          B.W      LCD_CtrlLinesWrite
                  |L1.3216|
000c90  6878              LDR      r0,[r7,#4]  ; LCDType
000c92  4540              CMP      r0,r8
000c94  d102              BNE      |L1.3228|
;;;684          {
;;;685            LCD_WriteRAM(TextColor);
000c96  8838              LDRH     r0,[r7,#0]  ; TextColor
000c98  f7fffffe          BL       LCD_WriteRAM
                  |L1.3228|
;;;686          }
;;;687          Xpos++;
000c9c  1c70              ADDS     r0,r6,#1
000c9e  b2c6              UXTB     r6,r0
;;;688          LCD_SetCursor(Xpos, Ypos);
000ca0  4651              MOV      r1,r10
000ca2  4630              MOV      r0,r6
000ca4  f7fffffe          BL       LCD_SetCursor
000ca8  1c64              ADDS     r4,r4,#1              ;677
000caa  42ac              CMP      r4,r5                 ;677
000cac  d3d2              BCC      |L1.3156|
                  |L1.3246|
;;;689        }
;;;690      }
;;;691    }
000cae  e8bd87f0          POP      {r4-r10,pc}
;;;692    
                          ENDP

                  LCD_DrawRect PROC
;;;702    *******************************************************************************/
;;;703    void LCD_DrawRect(u8 Xpos, u16 Ypos, u8 Height, u16 Width)
000cb2  e92d41f0          PUSH     {r4-r8,lr}
;;;704    {
000cb6  4605              MOV      r5,r0
000cb8  460e              MOV      r6,r1
000cba  4617              MOV      r7,r2
000cbc  461c              MOV      r4,r3
;;;705      LCD_DrawLine(Xpos, Ypos, Width, Horizontal);
000cbe  2300              MOVS     r3,#0
000cc0  4622              MOV      r2,r4
000cc2  4631              MOV      r1,r6
000cc4  4628              MOV      r0,r5
000cc6  f7fffffe          BL       LCD_DrawLine
;;;706      LCD_DrawLine((Xpos + Height), Ypos, Width, Horizontal);
000cca  19e8              ADDS     r0,r5,r7
000ccc  b2c0              UXTB     r0,r0
000cce  2300              MOVS     r3,#0
000cd0  4622              MOV      r2,r4
000cd2  4631              MOV      r1,r6
000cd4  f7fffffe          BL       LCD_DrawLine
;;;707    
;;;708      LCD_DrawLine(Xpos, Ypos, Height, Vertical);
000cd8  2301              MOVS     r3,#1
000cda  463a              MOV      r2,r7
000cdc  4631              MOV      r1,r6
000cde  4628              MOV      r0,r5
000ce0  f7fffffe          BL       LCD_DrawLine
;;;709      LCD_DrawLine(Xpos, (Ypos - Width + 1), Height, Vertical);
000ce4  1b30              SUBS     r0,r6,r4
000ce6  1c40              ADDS     r0,r0,#1
000ce8  b281              UXTH     r1,r0
000cea  463a              MOV      r2,r7
000cec  4628              MOV      r0,r5
000cee  e8bd41f0          POP      {r4-r8,lr}
000cf2  2301              MOVS     r3,#1
000cf4  e7fe              B        LCD_DrawLine
;;;710    }
;;;711    
                          ENDP

                  LCD_DrawCircle PROC
;;;721    *******************************************************************************/
;;;722    void LCD_DrawCircle(u8 Xpos, u16 Ypos, u16 Radius)
000cf6  e92d4ff0          PUSH     {r4-r11,lr}
;;;723    {
000cfa  b085              SUB      sp,sp,#0x14
000cfc  4607              MOV      r7,r0
000cfe  4688              MOV      r8,r1
;;;724      s32  D;/* Decision Variable */
;;;725      u32  CurX;/* Current X Value */
;;;726      u32  CurY;/* Current Y Value */
;;;727    
;;;728      D = 3 - (Radius << 1);
000d00  2003              MOVS     r0,#3
000d02  eba00642          SUB      r6,r0,r2,LSL #1
;;;729      CurX = 0;
000d06  2400              MOVS     r4,#0
;;;730      CurY = Radius;
000d08  4615              MOV      r5,r2
;;;731    
;;;732      while (CurX <= CurY)
;;;733      {
;;;734        LCD_SetCursor(Xpos + CurX, Ypos + CurY);
;;;735        if(LCDType == LCD_ILI9320)
000d0a  f8dfa2b4          LDR      r10,|L1.4032|
;;;736        {
;;;737          LCD_WriteRAMWord(TextColor);
;;;738        }
;;;739        else if(LCDType == LCD_HX8312)
000d0e  f2483912          MOV      r9,#0x8312
                  |L1.3346|
000d12  eb080005          ADD      r0,r8,r5              ;734
000d16  b281              UXTH     r1,r0                 ;734
000d18  eb070b04          ADD      r11,r7,r4             ;734
000d1c  9004              STR      r0,[sp,#0x10]         ;734
000d1e  f00b00ff          AND      r0,r11,#0xff          ;734
000d22  f7fffffe          BL       LCD_SetCursor
000d26  f8da1004          LDR      r1,[r10,#4]           ;735  ; LCDType
000d2a  f5a14013          SUB      r0,r1,#0x9300         ;735
000d2e  3820              SUBS     r0,r0,#0x20           ;735
000d30  d07e              BEQ      |L1.3632|
000d32  f8da0004          LDR      r0,[r10,#4]  ; LCDType
000d36  4548              CMP      r0,r9
000d38  d103              BNE      |L1.3394|
;;;740        {
;;;741          LCD_WriteRAM(TextColor);
000d3a  f8ba0000          LDRH     r0,[r10,#0]  ; TextColor
000d3e  f7fffffe          BL       LCD_WriteRAM
                  |L1.3394|
;;;742        }
;;;743        LCD_SetCursor(Xpos + CurX, Ypos - CurY);
000d42  eba80005          SUB      r0,r8,r5
000d46  b281              UXTH     r1,r0
000d48  9003              STR      r0,[sp,#0xc]
000d4a  f00b00ff          AND      r0,r11,#0xff
000d4e  f7fffffe          BL       LCD_SetCursor
;;;744        if(LCDType == LCD_ILI9320)
000d52  f8da1004          LDR      r1,[r10,#4]  ; LCDType
000d56  f5a14013          SUB      r0,r1,#0x9300
000d5a  3820              SUBS     r0,r0,#0x20
000d5c  d069              BEQ      |L1.3634|
;;;745        {
;;;746          LCD_WriteRAMWord(TextColor);
;;;747        }
;;;748        else if(LCDType == LCD_HX8312)
000d5e  f8da0004          LDR      r0,[r10,#4]  ; LCDType
000d62  4548              CMP      r0,r9
000d64  d103              BNE      |L1.3438|
;;;749        {
;;;750          LCD_WriteRAM(TextColor);
000d66  f8ba0000          LDRH     r0,[r10,#0]  ; TextColor
000d6a  f7fffffe          BL       LCD_WriteRAM
                  |L1.3438|
;;;751        }
;;;752        LCD_SetCursor(Xpos - CurX, Ypos + CurY);
000d6e  9804              LDR      r0,[sp,#0x10]
000d70  eba70b04          SUB      r11,r7,r4
000d74  b281              UXTH     r1,r0
000d76  f00b00ff          AND      r0,r11,#0xff
000d7a  f7fffffe          BL       LCD_SetCursor
;;;753        if(LCDType == LCD_ILI9320)
000d7e  f8da1004          LDR      r1,[r10,#4]  ; LCDType
000d82  f5a14013          SUB      r0,r1,#0x9300
000d86  3820              SUBS     r0,r0,#0x20
000d88  d07c              BEQ      |L1.3716|
;;;754        {
;;;755          LCD_WriteRAMWord(TextColor);
;;;756        }
;;;757        else if(LCDType == LCD_HX8312)
000d8a  f8da0004          LDR      r0,[r10,#4]  ; LCDType
000d8e  4548              CMP      r0,r9
000d90  d103              BNE      |L1.3482|
;;;758        {
;;;759          LCD_WriteRAM(TextColor);
000d92  f8ba0000          LDRH     r0,[r10,#0]  ; TextColor
000d96  f7fffffe          BL       LCD_WriteRAM
                  |L1.3482|
;;;760        }
;;;761        LCD_SetCursor(Xpos - CurX, Ypos - CurY);
000d9a  9803              LDR      r0,[sp,#0xc]
000d9c  b281              UXTH     r1,r0
000d9e  f00b00ff          AND      r0,r11,#0xff
000da2  f7fffffe          BL       LCD_SetCursor
;;;762        if(LCDType == LCD_ILI9320)
000da6  f8da1004          LDR      r1,[r10,#4]  ; LCDType
000daa  f5a14013          SUB      r0,r1,#0x9300
000dae  3820              SUBS     r0,r0,#0x20
000db0  d079              BEQ      |L1.3750|
;;;763        {
;;;764          LCD_WriteRAMWord(TextColor);
;;;765        }
;;;766        else if(LCDType == LCD_HX8312)
000db2  f8da0004          LDR      r0,[r10,#4]  ; LCDType
000db6  4548              CMP      r0,r9
000db8  d103              BNE      |L1.3522|
;;;767        {
;;;768          LCD_WriteRAM(TextColor);
000dba  f8ba0000          LDRH     r0,[r10,#0]  ; TextColor
000dbe  f7fffffe          BL       LCD_WriteRAM
                  |L1.3522|
;;;769        }
;;;770        LCD_SetCursor(Xpos + CurY, Ypos + CurX);
000dc2  eb080004          ADD      r0,r8,r4
000dc6  b281              UXTH     r1,r0
000dc8  eb070b05          ADD      r11,r7,r5
000dcc  9002              STR      r0,[sp,#8]
000dce  f00b00ff          AND      r0,r11,#0xff
000dd2  f7fffffe          BL       LCD_SetCursor
;;;771        if(LCDType == LCD_ILI9320)
000dd6  f8da1004          LDR      r1,[r10,#4]  ; LCDType
000dda  f5a14013          SUB      r0,r1,#0x9300
000dde  3820              SUBS     r0,r0,#0x20
000de0  d066              BEQ      |L1.3760|
;;;772        {
;;;773          LCD_WriteRAMWord(TextColor);
;;;774        }
;;;775        else if(LCDType == LCD_HX8312)
000de2  f8da0004          LDR      r0,[r10,#4]  ; LCDType
000de6  4548              CMP      r0,r9
000de8  d103              BNE      |L1.3570|
;;;776        {
;;;777          LCD_WriteRAM(TextColor);
000dea  f8ba0000          LDRH     r0,[r10,#0]  ; TextColor
000dee  f7fffffe          BL       LCD_WriteRAM
                  |L1.3570|
;;;778        }
;;;779        LCD_SetCursor(Xpos + CurY, Ypos - CurX);
000df2  eba80004          SUB      r0,r8,r4
000df6  b281              UXTH     r1,r0
000df8  9001              STR      r0,[sp,#4]
000dfa  f00b00ff          AND      r0,r11,#0xff
000dfe  f7fffffe          BL       LCD_SetCursor
;;;780        if(LCDType == LCD_ILI9320)
000e02  f8da1004          LDR      r1,[r10,#4]  ; LCDType
000e06  f5a14013          SUB      r0,r1,#0x9300
000e0a  3820              SUBS     r0,r0,#0x20
000e0c  d055              BEQ      |L1.3770|
;;;781        {
;;;782          LCD_WriteRAMWord(TextColor);
;;;783        }
;;;784        else if(LCDType == LCD_HX8312)
000e0e  f8da0004          LDR      r0,[r10,#4]  ; LCDType
000e12  4548              CMP      r0,r9
000e14  d103              BNE      |L1.3614|
;;;785        {
;;;786          LCD_WriteRAM(TextColor);
000e16  f8ba0000          LDRH     r0,[r10,#0]  ; TextColor
000e1a  f7fffffe          BL       LCD_WriteRAM
                  |L1.3614|
;;;787        }
;;;788        LCD_SetCursor(Xpos - CurY, Ypos + CurX);
000e1e  9802              LDR      r0,[sp,#8]
000e20  eba70b05          SUB      r11,r7,r5
000e24  b281              UXTH     r1,r0
000e26  f00b00ff          AND      r0,r11,#0xff
000e2a  f7fffffe          BL       LCD_SetCursor
;;;789        if(LCDType == LCD_ILI9320)
000e2e  e001              B        |L1.3636|
                  |L1.3632|
000e30  e02a              B        |L1.3720|
                  |L1.3634|
000e32  e02e              B        |L1.3730|
                  |L1.3636|
000e34  f8da1004          LDR      r1,[r10,#4]  ; LCDType
000e38  f5a14013          SUB      r0,r1,#0x9300
000e3c  3820              SUBS     r0,r0,#0x20
000e3e  d041              BEQ      |L1.3780|
;;;790        {
;;;791          LCD_WriteRAMWord(TextColor);
;;;792        }
;;;793        else if(LCDType == LCD_HX8312)
000e40  f8da0004          LDR      r0,[r10,#4]  ; LCDType
000e44  4548              CMP      r0,r9
000e46  d103              BNE      |L1.3664|
;;;794        {
;;;795          LCD_WriteRAM(TextColor);
000e48  f8ba0000          LDRH     r0,[r10,#0]  ; TextColor
000e4c  f7fffffe          BL       LCD_WriteRAM
                  |L1.3664|
;;;796        }
;;;797        LCD_SetCursor(Xpos - CurY, Ypos - CurX);
000e50  9801              LDR      r0,[sp,#4]
000e52  b281              UXTH     r1,r0
000e54  f00b00ff          AND      r0,r11,#0xff
000e58  f7fffffe          BL       LCD_SetCursor
;;;798        if(LCDType == LCD_ILI9320)
000e5c  f8da1004          LDR      r1,[r10,#4]  ; LCDType
000e60  f5a14013          SUB      r0,r1,#0x9300
000e64  3820              SUBS     r0,r0,#0x20
000e66  d032              BEQ      |L1.3790|
;;;799        {
;;;800          LCD_WriteRAMWord(TextColor);
;;;801        }
;;;802        else if(LCDType == LCD_HX8312)
000e68  f8da0004          LDR      r0,[r10,#4]  ; LCDType
000e6c  4548              CMP      r0,r9
000e6e  d103              BNE      |L1.3704|
;;;803        {
;;;804          LCD_WriteRAM(TextColor);
000e70  f8ba0000          LDRH     r0,[r10,#0]  ; TextColor
000e74  f7fffffe          BL       LCD_WriteRAM
                  |L1.3704|
;;;805        }
;;;806    
;;;807        if (D < 0)
000e78  2e00              CMP      r6,#0
000e7a  da2d              BGE      |L1.3800|
;;;808        {
;;;809          D += (CurX << 2) + 6;
000e7c  eb060084          ADD      r0,r6,r4,LSL #2
000e80  1d86              ADDS     r6,r0,#6
000e82  e02f              B        |L1.3812|
                  |L1.3716|
000e84  e00a              B        |L1.3740|
000e86  e00e              B        |L1.3750|
                  |L1.3720|
000e88  f8ba0000          LDRH     r0,[r10,#0]           ;737  ; TextColor
000e8c  f7fffffe          BL       LCD_WriteRAMWord
000e90  e757              B        |L1.3394|
                  |L1.3730|
000e92  f8ba0000          LDRH     r0,[r10,#0]           ;746  ; TextColor
000e96  f7fffffe          BL       LCD_WriteRAMWord
000e9a  e768              B        |L1.3438|
                  |L1.3740|
000e9c  f8ba0000          LDRH     r0,[r10,#0]           ;755  ; TextColor
000ea0  f7fffffe          BL       LCD_WriteRAMWord
000ea4  e779              B        |L1.3482|
                  |L1.3750|
000ea6  f8ba0000          LDRH     r0,[r10,#0]           ;764  ; TextColor
000eaa  f7fffffe          BL       LCD_WriteRAMWord
000eae  e788              B        |L1.3522|
                  |L1.3760|
000eb0  f8ba0000          LDRH     r0,[r10,#0]           ;773  ; TextColor
000eb4  f7fffffe          BL       LCD_WriteRAMWord
000eb8  e79b              B        |L1.3570|
                  |L1.3770|
000eba  f8ba0000          LDRH     r0,[r10,#0]           ;782  ; TextColor
000ebe  f7fffffe          BL       LCD_WriteRAMWord
000ec2  e7ac              B        |L1.3614|
                  |L1.3780|
000ec4  f8ba0000          LDRH     r0,[r10,#0]           ;791  ; TextColor
000ec8  f7fffffe          BL       LCD_WriteRAMWord
000ecc  e7c0              B        |L1.3664|
                  |L1.3790|
000ece  f8ba0000          LDRH     r0,[r10,#0]           ;800  ; TextColor
000ed2  f7fffffe          BL       LCD_WriteRAMWord
000ed6  e7cf              B        |L1.3704|
                  |L1.3800|
;;;810        }
;;;811        else
;;;812        {
;;;813          D += ((CurX - CurY) << 2) + 10;
000ed8  1b60              SUBS     r0,r4,r5
000eda  eb060080          ADD      r0,r6,r0,LSL #2
000ede  f100060a          ADD      r6,r0,#0xa
;;;814          CurY--;
000ee2  1e6d              SUBS     r5,r5,#1
                  |L1.3812|
;;;815        }
;;;816        CurX++;
000ee4  1c64              ADDS     r4,r4,#1
000ee6  42ac              CMP      r4,r5                 ;732
000ee8  f67faf13          BLS      |L1.3346|
;;;817      }
;;;818    }
000eec  b005              ADD      sp,sp,#0x14
000eee  e8bd8ff0          POP      {r4-r11,pc}
;;;819    
                          ENDP

                  LCD_DrawMonoPict PROC
;;;826    *******************************************************************************/
;;;827    void LCD_DrawMonoPict(uc32 *Pict)
000ef2  e92d47f0          PUSH     {r4-r10,lr}
;;;828    {
000ef6  4606              MOV      r6,r0
;;;829      u32 index = 0, i = 0;
000ef8  2500              MOVS     r5,#0
;;;830    
;;;831      LCD_SetCursor(0, 319);
000efa  f240113f          MOV      r1,#0x13f
000efe  2000              MOVS     r0,#0
000f00  f7fffffe          BL       LCD_SetCursor
;;;832      if(LCDType == LCD_ILI9320)
000f04  4f2e              LDR      r7,|L1.4032|
000f06  6878              LDR      r0,[r7,#4]  ; LCDType
000f08  f2493920          MOV      r9,#0x9320
000f0c  4548              CMP      r0,r9
000f0e  d101              BNE      |L1.3860|
;;;833      {
;;;834        LCD_WriteRAM_Prepare(); /* Prepare to write GRAM */
000f10  f7fffffe          BL       LCD_WriteRAM_Prepare
                  |L1.3860|
;;;835      }
;;;836      for(index = 0; index < 2400; index++)
;;;837      {
;;;838        for(i = 0; i < 32; i++)
;;;839        {
;;;840          if((Pict[index] & (1 << i)) == 0x00)
000f14  f04f0801          MOV      r8,#1
                  |L1.3864|
000f18  2400              MOVS     r4,#0                 ;838
                  |L1.3866|
000f1a  f8560025          LDR      r0,[r6,r5,LSL #2]
000f1e  fa08f104          LSL      r1,r8,r4
000f22  4208              TST      r0,r1
000f24  d103              BNE      |L1.3886|
;;;841          {
;;;842            LCD_WriteRAM(BackColor);
000f26  8878              LDRH     r0,[r7,#2]  ; BackColor
000f28  f7fffffe          BL       LCD_WriteRAM
000f2c  e002              B        |L1.3892|
                  |L1.3886|
;;;843          }
;;;844          else
;;;845          {
;;;846            LCD_WriteRAM(TextColor);
000f2e  8838              LDRH     r0,[r7,#0]  ; TextColor
000f30  f7fffffe          BL       LCD_WriteRAM
                  |L1.3892|
000f34  1c64              ADDS     r4,r4,#1              ;838
000f36  2c20              CMP      r4,#0x20              ;838
000f38  d3ef              BCC      |L1.3866|
000f3a  1c6d              ADDS     r5,r5,#1              ;836
000f3c  f5b56f16          CMP      r5,#0x960             ;836
000f40  d3ea              BCC      |L1.3864|
;;;847          }
;;;848        }
;;;849      }
;;;850      if(LCDType == LCD_ILI9320)
000f42  6878              LDR      r0,[r7,#4]  ; LCDType
000f44  4548              CMP      r0,r9
000f46  d106              BNE      |L1.3926|
;;;851      {
;;;852        LCD_CtrlLinesWrite(GPIOB, CtrlPin_NCS, Bit_SET);
000f48  e8bd47f0          POP      {r4-r10,lr}
000f4c  2201              MOVS     r2,#1
000f4e  2104              MOVS     r1,#4
000f50  481c              LDR      r0,|L1.4036|
000f52  f7ffbffe          B.W      LCD_CtrlLinesWrite
                  |L1.3926|
;;;853      }
;;;854    }
000f56  e8bd87f0          POP      {r4-r10,pc}
;;;855    
                          ENDP

                  LCD_PowerOn PROC
;;;1113   *******************************************************************************/
;;;1114   void LCD_PowerOn(void)
000f5a  b510              PUSH     {r4,lr}
;;;1115   {
;;;1116     if(LCDType == LCD_ILI9320)
000f5c  4818              LDR      r0,|L1.4032|
000f5e  6841              LDR      r1,[r0,#4]  ; LCDType
000f60  f5a14213          SUB      r2,r1,#0x9300
000f64  3a20              SUBS     r2,r2,#0x20
000f66  d046              BEQ      |L1.4086|
;;;1117     {
;;;1118       /* Power On sequence ---------------------------------------------------------*/
;;;1119       LCD_WriteReg(R16, 0x0000); /* SAP, BT[3:0], AP, DSTB, SLP, STB */
;;;1120       LCD_WriteReg(R17, 0x0000); /* DC1[2:0], DC0[2:0], VC[2:0] */
;;;1121       LCD_WriteReg(R18, 0x0000); /* VREG1OUT voltage */
;;;1122       LCD_WriteReg(R19, 0x0000); /* VDV[4:0] for VCOM amplitude */
;;;1123       Delay(20);                 /* Dis-charge capacitor power voltage (200ms) */
;;;1124       LCD_WriteReg(R16, 0x17B0); /* SAP, BT[3:0], AP, DSTB, SLP, STB */
;;;1125       LCD_WriteReg(R17, 0x0137); /* DC1[2:0], DC0[2:0], VC[2:0] */
;;;1126       Delay(5);                  /* Delay 50 ms */
;;;1127       LCD_WriteReg(R18, 0x0139); /* VREG1OUT voltage */
;;;1128       Delay(5);                  /* delay 50 ms */
;;;1129       LCD_WriteReg(R19, 0x1d00); /* VDV[4:0] for VCOM amplitude */
;;;1130       LCD_WriteReg(R41, 0x0013); /* VCM[4:0] for VCOMH */
;;;1131       Delay(5);                  /* delay 50 ms */
;;;1132       LCD_WriteReg(R7, 0x0173);  /* 262K color and display ON */
;;;1133     }
;;;1134     else if(LCDType == LCD_HX8312)
000f68  6840              LDR      r0,[r0,#4]  ; LCDType
000f6a  f5a04103          SUB      r1,r0,#0x8300
000f6e  3912              SUBS     r1,r1,#0x12
000f70  d17c              BNE      |L1.4204|
;;;1135     {
;;;1136       /* Power On Set */
;;;1137       LCD_WriteReg(R28, 0x73);
000f72  2173              MOVS     r1,#0x73
000f74  201c              MOVS     r0,#0x1c
000f76  f7fffffe          BL       LCD_WriteReg
;;;1138       LCD_WriteReg(R36, 0x74);
000f7a  2174              MOVS     r1,#0x74
000f7c  2024              MOVS     r0,#0x24
000f7e  f7fffffe          BL       LCD_WriteReg
;;;1139       LCD_WriteReg(R30, 0x01);
000f82  2101              MOVS     r1,#1
000f84  201e              MOVS     r0,#0x1e
000f86  f7fffffe          BL       LCD_WriteReg
;;;1140       LCD_WriteReg(R24, 0xC1);
000f8a  21c1              MOVS     r1,#0xc1
000f8c  2018              MOVS     r0,#0x18
000f8e  f7fffffe          BL       LCD_WriteReg
;;;1141       Delay(1); /* Delay 10 ms */
000f92  2001              MOVS     r0,#1
000f94  f7fffffe          BL       Delay
;;;1142       LCD_WriteReg(R24, 0xE1);
000f98  21e1              MOVS     r1,#0xe1
000f9a  2018              MOVS     r0,#0x18
000f9c  f7fffffe          BL       LCD_WriteReg
;;;1143       LCD_WriteReg(R24, 0xF1);
000fa0  21f1              MOVS     r1,#0xf1
000fa2  2018              MOVS     r0,#0x18
000fa4  f7fffffe          BL       LCD_WriteReg
;;;1144       Delay(6); /* Delay 60 ms */
000fa8  2006              MOVS     r0,#6
000faa  f7fffffe          BL       Delay
;;;1145       LCD_WriteReg(R24, 0xF5);
000fae  21f5              MOVS     r1,#0xf5
000fb0  2018              MOVS     r0,#0x18
000fb2  f7fffffe          BL       LCD_WriteReg
;;;1146       Delay(6); /* Delay 60 ms */
000fb6  2006              MOVS     r0,#6
000fb8  f7fffffe          BL       Delay
;;;1147       LCD_WriteReg(R27, 0x09);
000fbc  2109              MOVS     r1,#9
000fbe  e003              B        |L1.4040|
                  |L1.4032|
                          DCD      ||.data||
                  |L1.4036|
                          DCD      0x40010c00
                  |L1.4040|
000fc8  201b              MOVS     r0,#0x1b
000fca  f7fffffe          BL       LCD_WriteReg
;;;1148       Delay(1); /* Delay 10 ms */
000fce  2001              MOVS     r0,#1
000fd0  f7fffffe          BL       Delay
;;;1149       LCD_WriteReg(R31, 0x11);
000fd4  2111              MOVS     r1,#0x11
000fd6  201f              MOVS     r0,#0x1f
000fd8  f7fffffe          BL       LCD_WriteReg
;;;1150       LCD_WriteReg(R32, 0x0E);
000fdc  210e              MOVS     r1,#0xe
000fde  2020              MOVS     r0,#0x20
000fe0  f7fffffe          BL       LCD_WriteReg
;;;1151       LCD_WriteReg(R30, 0x81);
000fe4  2181              MOVS     r1,#0x81
000fe6  201e              MOVS     r0,#0x1e
000fe8  f7fffffe          BL       LCD_WriteReg
;;;1152       Delay(1); /* Delay 10 ms */
000fec  e8bd4010          POP      {r4,lr}
000ff0  2001              MOVS     r0,#1
000ff2  f7ffbffe          B.W      Delay
                  |L1.4086|
000ff6  2100              MOVS     r1,#0                 ;1119
000ff8  2010              MOVS     r0,#0x10              ;1119
000ffa  f7fffffe          BL       LCD_WriteReg
000ffe  2100              MOVS     r1,#0                 ;1120
001000  2011              MOVS     r0,#0x11              ;1120
001002  f7fffffe          BL       LCD_WriteReg
001006  2100              MOVS     r1,#0                 ;1121
001008  2012              MOVS     r0,#0x12              ;1121
00100a  f7fffffe          BL       LCD_WriteReg
00100e  2100              MOVS     r1,#0                 ;1122
001010  2013              MOVS     r0,#0x13              ;1122
001012  f7fffffe          BL       LCD_WriteReg
001016  2014              MOVS     r0,#0x14              ;1123
001018  f7fffffe          BL       Delay
00101c  f24171b0          MOV      r1,#0x17b0            ;1124
001020  2010              MOVS     r0,#0x10              ;1124
001022  f7fffffe          BL       LCD_WriteReg
001026  f2401137          MOV      r1,#0x137             ;1125
00102a  2011              MOVS     r0,#0x11              ;1125
00102c  f7fffffe          BL       LCD_WriteReg
001030  2005              MOVS     r0,#5                 ;1126
001032  f7fffffe          BL       Delay
001036  f2401139          MOV      r1,#0x139             ;1127
00103a  2012              MOVS     r0,#0x12              ;1127
00103c  f7fffffe          BL       LCD_WriteReg
001040  2005              MOVS     r0,#5                 ;1128
001042  f7fffffe          BL       Delay
001046  f44f51e8          MOV      r1,#0x1d00            ;1129
00104a  2013              MOVS     r0,#0x13              ;1129
00104c  f7fffffe          BL       LCD_WriteReg
001050  2113              MOVS     r1,#0x13              ;1130
001052  2029              MOVS     r0,#0x29              ;1130
001054  f7fffffe          BL       LCD_WriteReg
001058  2005              MOVS     r0,#5                 ;1131
00105a  f7fffffe          BL       Delay
00105e  e8bd4010          POP      {r4,lr}               ;1132
001062  f2401173          MOV      r1,#0x173             ;1132
001066  2007              MOVS     r0,#7                 ;1132
001068  f7ffbffe          B.W      LCD_WriteReg
                  |L1.4204|
;;;1153     }
;;;1154   }
00106c  bd10              POP      {r4,pc}
;;;1155   
                          ENDP

                  LCD_DisplayOn PROC
;;;1162   *******************************************************************************/
;;;1163   void LCD_DisplayOn(void)
00106e  b510              PUSH     {r4,lr}
;;;1164   {
;;;1165     if(LCDType == LCD_ILI9320)
001070  4825              LDR      r0,|L1.4360|
001072  6841              LDR      r1,[r0,#4]  ; LCDType
001074  f5a14213          SUB      r2,r1,#0x9300
001078  3a20              SUBS     r2,r2,#0x20
00107a  d01d              BEQ      |L1.4280|
;;;1166     {
;;;1167       /* Display On */
;;;1168       LCD_WriteReg(R7, 0x0173); /* 262K color and display ON */
;;;1169     }
;;;1170     else if(LCDType == LCD_HX8312)
00107c  6840              LDR      r0,[r0,#4]  ; LCDType
00107e  f5a04103          SUB      r1,r0,#0x8300
001082  3912              SUBS     r1,r1,#0x12
001084  d11f              BNE      |L1.4294|
;;;1171     {
;;;1172       LCD_WriteReg(R1, 0x50);
001086  2150              MOVS     r1,#0x50
001088  2001              MOVS     r0,#1
00108a  f7fffffe          BL       LCD_WriteReg
;;;1173       LCD_WriteReg(R5, 0x04);
00108e  2104              MOVS     r1,#4
001090  2005              MOVS     r0,#5
001092  f7fffffe          BL       LCD_WriteReg
;;;1174   
;;;1175       /* Display On */
;;;1176       LCD_WriteReg(R0, 0x80);
001096  2180              MOVS     r1,#0x80
001098  2000              MOVS     r0,#0
00109a  f7fffffe          BL       LCD_WriteReg
;;;1177       LCD_WriteReg(R59, 0x01);
00109e  2101              MOVS     r1,#1
0010a0  203b              MOVS     r0,#0x3b
0010a2  f7fffffe          BL       LCD_WriteReg
;;;1178       Delay(4);                 /* Delay 40 ms */
0010a6  2004              MOVS     r0,#4
0010a8  f7fffffe          BL       Delay
;;;1179       LCD_WriteReg(R0, 0x20);
0010ac  2120              MOVS     r1,#0x20
0010ae  e8bd4010          POP      {r4,lr}
0010b2  2000              MOVS     r0,#0
0010b4  f7ffbffe          B.W      LCD_WriteReg
                  |L1.4280|
0010b8  e8bd4010          POP      {r4,lr}               ;1168
0010bc  f2401173          MOV      r1,#0x173             ;1168
0010c0  2007              MOVS     r0,#7                 ;1168
0010c2  f7ffbffe          B.W      LCD_WriteReg
                  |L1.4294|
;;;1180     }
;;;1181   }
0010c6  bd10              POP      {r4,pc}
;;;1182   
                          ENDP

                  LCD_DisplayOff PROC
;;;1189   *******************************************************************************/
;;;1190   void LCD_DisplayOff(void)
0010c8  b510              PUSH     {r4,lr}
;;;1191   {
;;;1192     if(LCDType == LCD_ILI9320)
0010ca  480f              LDR      r0,|L1.4360|
0010cc  6841              LDR      r1,[r0,#4]  ; LCDType
0010ce  f5a14213          SUB      r2,r1,#0x9300
0010d2  3a20              SUBS     r2,r2,#0x20
0010d4  d011              BEQ      |L1.4346|
;;;1193     {
;;;1194       /* Display Off */
;;;1195       LCD_WriteReg(R7, 0x0);
;;;1196     }
;;;1197     else if(LCDType == LCD_HX8312)
0010d6  6840              LDR      r0,[r0,#4]  ; LCDType
0010d8  f5a04103          SUB      r1,r0,#0x8300
0010dc  3912              SUBS     r1,r1,#0x12
0010de  d112              BNE      |L1.4358|
;;;1198     {
;;;1199       /* Display Off */
;;;1200       LCD_WriteReg(R0, 0xA0);
0010e0  21a0              MOVS     r1,#0xa0
0010e2  2000              MOVS     r0,#0
0010e4  f7fffffe          BL       LCD_WriteReg
;;;1201       Delay(4);                 /* Delay 40 ms */
0010e8  2004              MOVS     r0,#4
0010ea  f7fffffe          BL       Delay
;;;1202       LCD_WriteReg(R59, 0x00);
0010ee  2100              MOVS     r1,#0
0010f0  e8bd4010          POP      {r4,lr}
0010f4  203b              MOVS     r0,#0x3b
0010f6  f7ffbffe          B.W      LCD_WriteReg
                  |L1.4346|
0010fa  2100              MOVS     r1,#0                 ;1195
0010fc  e8bd4010          POP      {r4,lr}               ;1195
001100  2007              MOVS     r0,#7                 ;1195
001102  f7ffbffe          B.W      LCD_WriteReg
                  |L1.4358|
;;;1203     }
;;;1204   }
001106  bd10              POP      {r4,pc}
;;;1205   
                          ENDP

                  |L1.4360|
                          DCD      ||.data||

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  ASCII_Table
000000  00000000          DCW      0x0000,0x0000
000004  00000000          DCW      0x0000,0x0000
000008  00000000          DCW      0x0000,0x0000
00000c  00000000          DCW      0x0000,0x0000
000010  00000000          DCW      0x0000,0x0000
000014  00000000          DCW      0x0000,0x0000
000018  00000000          DCW      0x0000,0x0000
00001c  00000000          DCW      0x0000,0x0000
000020  00000000          DCW      0x0000,0x0000
000024  00000000          DCW      0x0000,0x0000
000028  00000000          DCW      0x0000,0x0000
00002c  00000000          DCW      0x0000,0x0000
000030  00000180          DCW      0x0000,0x0180
000034  01800180          DCW      0x0180,0x0180
000038  01800180          DCW      0x0180,0x0180
00003c  01800180          DCW      0x0180,0x0180
000040  01800180          DCW      0x0180,0x0180
000044  01800180          DCW      0x0180,0x0180
000048  01800180          DCW      0x0180,0x0180
00004c  00000000          DCW      0x0000,0x0000
000050  01800180          DCW      0x0180,0x0180
000054  00000000          DCW      0x0000,0x0000
000058  00000000          DCW      0x0000,0x0000
00005c  00000000          DCW      0x0000,0x0000
000060  00000000          DCW      0x0000,0x0000
000064  00cc00cc          DCW      0x00cc,0x00cc
000068  00cc00cc          DCW      0x00cc,0x00cc
00006c  00cc00cc          DCW      0x00cc,0x00cc
000070  00000000          DCW      0x0000,0x0000
000074  00000000          DCW      0x0000,0x0000
000078  00000000          DCW      0x0000,0x0000
00007c  00000000          DCW      0x0000,0x0000
000080  00000000          DCW      0x0000,0x0000
000084  00000000          DCW      0x0000,0x0000
000088  00000000          DCW      0x0000,0x0000
00008c  00000000          DCW      0x0000,0x0000
000090  00000000          DCW      0x0000,0x0000
000094  00000000          DCW      0x0000,0x0000
000098  00000000          DCW      0x0000,0x0000
00009c  0c600c60          DCW      0x0c60,0x0c60
0000a0  0c600630          DCW      0x0c60,0x0630
0000a4  06301ffe          DCW      0x0630,0x1ffe
0000a8  1ffe0630          DCW      0x1ffe,0x0630
0000ac  07380318          DCW      0x0738,0x0318
0000b0  1ffe1ffe          DCW      0x1ffe,0x1ffe
0000b4  03180318          DCW      0x0318,0x0318
0000b8  018c018c          DCW      0x018c,0x018c
0000bc  018c0000          DCW      0x018c,0x0000
0000c0  00000080          DCW      0x0000,0x0080
0000c4  03e00ff8          DCW      0x03e0,0x0ff8
0000c8  0e9c1c8c          DCW      0x0e9c,0x1c8c
0000cc  188c008c          DCW      0x188c,0x008c
0000d0  009801f8          DCW      0x0098,0x01f8
0000d4  07e00e80          DCW      0x07e0,0x0e80
0000d8  1c80188c          DCW      0x1c80,0x188c
0000dc  188c189c          DCW      0x188c,0x189c
0000e0  0cb80ff0          DCW      0x0cb8,0x0ff0
0000e4  03e00080          DCW      0x03e0,0x0080
0000e8  00800000          DCW      0x0080,0x0000
0000ec  00000000          DCW      0x0000,0x0000
0000f0  00000000          DCW      0x0000,0x0000
0000f4  0000180e          DCW      0x0000,0x180e
0000f8  0c1b0c11          DCW      0x0c1b,0x0c11
0000fc  06110611          DCW      0x0611,0x0611
000100  03110311          DCW      0x0311,0x0311
000104  019b018e          DCW      0x019b,0x018e
000108  38c06cc0          DCW      0x38c0,0x6cc0
00010c  44604460          DCW      0x4460,0x4460
000110  44304430          DCW      0x4430,0x4430
000114  44186c18          DCW      0x4418,0x6c18
000118  380c0000          DCW      0x380c,0x0000
00011c  00000000          DCW      0x0000,0x0000
000120  000001e0          DCW      0x0000,0x01e0
000124  03f00738          DCW      0x03f0,0x0738
000128  06180618          DCW      0x0618,0x0618
00012c  033001f0          DCW      0x0330,0x01f0
000130  00f000f8          DCW      0x00f0,0x00f8
000134  319c330e          DCW      0x319c,0x330e
000138  1e061c06          DCW      0x1e06,0x1c06
00013c  1c063f06          DCW      0x1c06,0x3f06
000140  73fc21f0          DCW      0x73fc,0x21f0
000144  00000000          DCW      0x0000,0x0000
000148  00000000          DCW      0x0000,0x0000
00014c  00000000          DCW      0x0000,0x0000
000150  00000000          DCW      0x0000,0x0000
000154  000c000c          DCW      0x000c,0x000c
000158  000c000c          DCW      0x000c,0x000c
00015c  000c000c          DCW      0x000c,0x000c
000160  00000000          DCW      0x0000,0x0000
000164  00000000          DCW      0x0000,0x0000
000168  00000000          DCW      0x0000,0x0000
00016c  00000000          DCW      0x0000,0x0000
000170  00000000          DCW      0x0000,0x0000
000174  00000000          DCW      0x0000,0x0000
000178  00000000          DCW      0x0000,0x0000
00017c  00000000          DCW      0x0000,0x0000
000180  00000200          DCW      0x0000,0x0200
000184  03000180          DCW      0x0300,0x0180
000188  00c000c0          DCW      0x00c0,0x00c0
00018c  00600060          DCW      0x0060,0x0060
000190  00300030          DCW      0x0030,0x0030
000194  00300030          DCW      0x0030,0x0030
000198  00300030          DCW      0x0030,0x0030
00019c  00300030          DCW      0x0030,0x0030
0001a0  00600060          DCW      0x0060,0x0060
0001a4  00c000c0          DCW      0x00c0,0x00c0
0001a8  01800300          DCW      0x0180,0x0300
0001ac  02000000          DCW      0x0200,0x0000
0001b0  00000020          DCW      0x0000,0x0020
0001b4  006000c0          DCW      0x0060,0x00c0
0001b8  01800180          DCW      0x0180,0x0180
0001bc  03000300          DCW      0x0300,0x0300
0001c0  06000600          DCW      0x0600,0x0600
0001c4  06000600          DCW      0x0600,0x0600
0001c8  06000600          DCW      0x0600,0x0600
0001cc  06000600          DCW      0x0600,0x0600
0001d0  03000300          DCW      0x0300,0x0300
0001d4  01800180          DCW      0x0180,0x0180
0001d8  00c00060          DCW      0x00c0,0x0060
0001dc  00200000          DCW      0x0020,0x0000
0001e0  00000000          DCW      0x0000,0x0000
0001e4  00000000          DCW      0x0000,0x0000
0001e8  00000000          DCW      0x0000,0x0000
0001ec  00c000c0          DCW      0x00c0,0x00c0
0001f0  06d807f8          DCW      0x06d8,0x07f8
0001f4  01e00330          DCW      0x01e0,0x0330
0001f8  07380000          DCW      0x0738,0x0000
0001fc  00000000          DCW      0x0000,0x0000
000200  00000000          DCW      0x0000,0x0000
000204  00000000          DCW      0x0000,0x0000
000208  00000000          DCW      0x0000,0x0000
00020c  00000000          DCW      0x0000,0x0000
000210  00000000          DCW      0x0000,0x0000
000214  00000000          DCW      0x0000,0x0000
000218  00000000          DCW      0x0000,0x0000
00021c  01800180          DCW      0x0180,0x0180
000220  01800180          DCW      0x0180,0x0180
000224  01803ffc          DCW      0x0180,0x3ffc
000228  3ffc0180          DCW      0x3ffc,0x0180
00022c  01800180          DCW      0x0180,0x0180
000230  01800180          DCW      0x0180,0x0180
000234  00000000          DCW      0x0000,0x0000
000238  00000000          DCW      0x0000,0x0000
00023c  00000000          DCW      0x0000,0x0000
000240  00000000          DCW      0x0000,0x0000
000244  00000000          DCW      0x0000,0x0000
000248  00000000          DCW      0x0000,0x0000
00024c  00000000          DCW      0x0000,0x0000
000250  00000000          DCW      0x0000,0x0000
000254  00000000          DCW      0x0000,0x0000
000258  00000000          DCW      0x0000,0x0000
00025c  00000000          DCW      0x0000,0x0000
000260  00000180          DCW      0x0000,0x0180
000264  01800100          DCW      0x0180,0x0100
000268  01000080          DCW      0x0100,0x0080
00026c  00000000          DCW      0x0000,0x0000
000270  00000000          DCW      0x0000,0x0000
000274  00000000          DCW      0x0000,0x0000
000278  00000000          DCW      0x0000,0x0000
00027c  00000000          DCW      0x0000,0x0000
000280  00000000          DCW      0x0000,0x0000
000284  00000000          DCW      0x0000,0x0000
000288  07e007e0          DCW      0x07e0,0x07e0
00028c  00000000          DCW      0x0000,0x0000
000290  00000000          DCW      0x0000,0x0000
000294  00000000          DCW      0x0000,0x0000
000298  00000000          DCW      0x0000,0x0000
00029c  00000000          DCW      0x0000,0x0000
0002a0  00000000          DCW      0x0000,0x0000
0002a4  00000000          DCW      0x0000,0x0000
0002a8  00000000          DCW      0x0000,0x0000
0002ac  00000000          DCW      0x0000,0x0000
0002b0  00000000          DCW      0x0000,0x0000
0002b4  00000000          DCW      0x0000,0x0000
0002b8  00000000          DCW      0x0000,0x0000
0002bc  00000000          DCW      0x0000,0x0000
0002c0  000000c0          DCW      0x0000,0x00c0
0002c4  00c00000          DCW      0x00c0,0x0000
0002c8  00000000          DCW      0x0000,0x0000
0002cc  00000000          DCW      0x0000,0x0000
0002d0  00000c00          DCW      0x0000,0x0c00
0002d4  0c000600          DCW      0x0c00,0x0600
0002d8  06000600          DCW      0x0600,0x0600
0002dc  03000300          DCW      0x0300,0x0300
0002e0  03000380          DCW      0x0300,0x0380
0002e4  01800180          DCW      0x0180,0x0180
0002e8  018000c0          DCW      0x0180,0x00c0
0002ec  00c000c0          DCW      0x00c0,0x00c0
0002f0  00600060          DCW      0x0060,0x0060
0002f4  00000000          DCW      0x0000,0x0000
0002f8  00000000          DCW      0x0000,0x0000
0002fc  00000000          DCW      0x0000,0x0000
000300  000003e0          DCW      0x0000,0x03e0
000304  07f00e38          DCW      0x07f0,0x0e38
000308  0c18180c          DCW      0x0c18,0x180c
00030c  180c180c          DCW      0x180c,0x180c
000310  180c180c          DCW      0x180c,0x180c
000314  180c180c          DCW      0x180c,0x180c
000318  180c180c          DCW      0x180c,0x180c
00031c  0c180e38          DCW      0x0c18,0x0e38
000320  07f003e0          DCW      0x07f0,0x03e0
000324  00000000          DCW      0x0000,0x0000
000328  00000000          DCW      0x0000,0x0000
00032c  00000000          DCW      0x0000,0x0000
000330  00000100          DCW      0x0000,0x0100
000334  018001c0          DCW      0x0180,0x01c0
000338  01f00198          DCW      0x01f0,0x0198
00033c  01880180          DCW      0x0188,0x0180
000340  01800180          DCW      0x0180,0x0180
000344  01800180          DCW      0x0180,0x0180
000348  01800180          DCW      0x0180,0x0180
00034c  01800180          DCW      0x0180,0x0180
000350  01800180          DCW      0x0180,0x0180
000354  00000000          DCW      0x0000,0x0000
000358  00000000          DCW      0x0000,0x0000
00035c  00000000          DCW      0x0000,0x0000
000360  000003e0          DCW      0x0000,0x03e0
000364  0ff80c18          DCW      0x0ff8,0x0c18
000368  180c180c          DCW      0x180c,0x180c
00036c  18001800          DCW      0x1800,0x1800
000370  0c000600          DCW      0x0c00,0x0600
000374  03000180          DCW      0x0300,0x0180
000378  00c00060          DCW      0x00c0,0x0060
00037c  00300018          DCW      0x0030,0x0018
000380  1ffc1ffc          DCW      0x1ffc,0x1ffc
000384  00000000          DCW      0x0000,0x0000
000388  00000000          DCW      0x0000,0x0000
00038c  00000000          DCW      0x0000,0x0000
000390  000001e0          DCW      0x0000,0x01e0
000394  07f80e18          DCW      0x07f8,0x0e18
000398  0c0c0c0c          DCW      0x0c0c,0x0c0c
00039c  0c000600          DCW      0x0c00,0x0600
0003a0  03c007c0          DCW      0x03c0,0x07c0
0003a4  0c001800          DCW      0x0c00,0x1800
0003a8  1800180c          DCW      0x1800,0x180c
0003ac  180c0c18          DCW      0x180c,0x0c18
0003b0  07f803e0          DCW      0x07f8,0x03e0
0003b4  00000000          DCW      0x0000,0x0000
0003b8  00000000          DCW      0x0000,0x0000
0003bc  00000000          DCW      0x0000,0x0000
0003c0  00000c00          DCW      0x0000,0x0c00
0003c4  0e000f00          DCW      0x0e00,0x0f00
0003c8  0f000d80          DCW      0x0f00,0x0d80
0003cc  0cc00c60          DCW      0x0cc0,0x0c60
0003d0  0c600c30          DCW      0x0c60,0x0c30
0003d4  0c180c0c          DCW      0x0c18,0x0c0c
0003d8  3ffc3ffc          DCW      0x3ffc,0x3ffc
0003dc  0c000c00          DCW      0x0c00,0x0c00
0003e0  0c000c00          DCW      0x0c00,0x0c00
0003e4  00000000          DCW      0x0000,0x0000
0003e8  00000000          DCW      0x0000,0x0000
0003ec  00000000          DCW      0x0000,0x0000
0003f0  00000ff8          DCW      0x0000,0x0ff8
0003f4  0ff80018          DCW      0x0ff8,0x0018
0003f8  0018000c          DCW      0x0018,0x000c
0003fc  03ec07fc          DCW      0x03ec,0x07fc
000400  0e1c1c00          DCW      0x0e1c,0x1c00
000404  18001800          DCW      0x1800,0x1800
000408  1800180c          DCW      0x1800,0x180c
00040c  0c1c0e18          DCW      0x0c1c,0x0e18
000410  07f803e0          DCW      0x07f8,0x03e0
000414  00000000          DCW      0x0000,0x0000
000418  00000000          DCW      0x0000,0x0000
00041c  00000000          DCW      0x0000,0x0000
000420  000007c0          DCW      0x0000,0x07c0
000424  0ff01c38          DCW      0x0ff0,0x1c38
000428  18180018          DCW      0x1818,0x0018
00042c  000c03cc          DCW      0x000c,0x03cc
000430  0fec0e3c          DCW      0x0fec,0x0e3c
000434  1c1c180c          DCW      0x1c1c,0x180c
000438  180c180c          DCW      0x180c,0x180c
00043c  1c180e38          DCW      0x1c18,0x0e38
000440  07f003e0          DCW      0x07f0,0x03e0
000444  00000000          DCW      0x0000,0x0000
000448  00000000          DCW      0x0000,0x0000
00044c  00000000          DCW      0x0000,0x0000
000450  00001ffc          DCW      0x0000,0x1ffc
000454  1ffc0c00          DCW      0x1ffc,0x0c00
000458  06000600          DCW      0x0600,0x0600
00045c  03000380          DCW      0x0300,0x0380
000460  018001c0          DCW      0x0180,0x01c0
000464  00c000e0          DCW      0x00c0,0x00e0
000468  00600060          DCW      0x0060,0x0060
00046c  00700030          DCW      0x0070,0x0030
000470  00300030          DCW      0x0030,0x0030
000474  00000000          DCW      0x0000,0x0000
000478  00000000          DCW      0x0000,0x0000
00047c  00000000          DCW      0x0000,0x0000
000480  000003e0          DCW      0x0000,0x03e0
000484  07f00e38          DCW      0x07f0,0x0e38
000488  0c180c18          DCW      0x0c18,0x0c18
00048c  0c180638          DCW      0x0c18,0x0638
000490  07f007f0          DCW      0x07f0,0x07f0
000494  0c18180c          DCW      0x0c18,0x180c
000498  180c180c          DCW      0x180c,0x180c
00049c  180c0c38          DCW      0x180c,0x0c38
0004a0  0ff803e0          DCW      0x0ff8,0x03e0
0004a4  00000000          DCW      0x0000,0x0000
0004a8  00000000          DCW      0x0000,0x0000
0004ac  00000000          DCW      0x0000,0x0000
0004b0  000003e0          DCW      0x0000,0x03e0
0004b4  07f00e38          DCW      0x07f0,0x0e38
0004b8  0c1c180c          DCW      0x0c1c,0x180c
0004bc  180c180c          DCW      0x180c,0x180c
0004c0  1c1c1e38          DCW      0x1c1c,0x1e38
0004c4  1bf819e0          DCW      0x1bf8,0x19e0
0004c8  18000c00          DCW      0x1800,0x0c00
0004cc  0c000e1c          DCW      0x0c00,0x0e1c
0004d0  07f801f0          DCW      0x07f8,0x01f0
0004d4  00000000          DCW      0x0000,0x0000
0004d8  00000000          DCW      0x0000,0x0000
0004dc  00000000          DCW      0x0000,0x0000
0004e0  00000000          DCW      0x0000,0x0000
0004e4  00000000          DCW      0x0000,0x0000
0004e8  00000000          DCW      0x0000,0x0000
0004ec  01800180          DCW      0x0180,0x0180
0004f0  00000000          DCW      0x0000,0x0000
0004f4  00000000          DCW      0x0000,0x0000
0004f8  00000000          DCW      0x0000,0x0000
0004fc  00000000          DCW      0x0000,0x0000
000500  01800180          DCW      0x0180,0x0180
000504  00000000          DCW      0x0000,0x0000
000508  00000000          DCW      0x0000,0x0000
00050c  00000000          DCW      0x0000,0x0000
000510  00000000          DCW      0x0000,0x0000
000514  00000000          DCW      0x0000,0x0000
000518  00000000          DCW      0x0000,0x0000
00051c  01800180          DCW      0x0180,0x0180
000520  00000000          DCW      0x0000,0x0000
000524  00000000          DCW      0x0000,0x0000
000528  00000000          DCW      0x0000,0x0000
00052c  00000000          DCW      0x0000,0x0000
000530  01800180          DCW      0x0180,0x0180
000534  01000100          DCW      0x0100,0x0100
000538  00800000          DCW      0x0080,0x0000
00053c  00000000          DCW      0x0000,0x0000
000540  00000000          DCW      0x0000,0x0000
000544  00000000          DCW      0x0000,0x0000
000548  00000000          DCW      0x0000,0x0000
00054c  00000000          DCW      0x0000,0x0000
000550  10001c00          DCW      0x1000,0x1c00
000554  0f8003e0          DCW      0x0f80,0x03e0
000558  00f80018          DCW      0x00f8,0x0018
00055c  00f803e0          DCW      0x00f8,0x03e0
000560  0f801c00          DCW      0x0f80,0x1c00
000564  10000000          DCW      0x1000,0x0000
000568  00000000          DCW      0x0000,0x0000
00056c  00000000          DCW      0x0000,0x0000
000570  00000000          DCW      0x0000,0x0000
000574  00000000          DCW      0x0000,0x0000
000578  00000000          DCW      0x0000,0x0000
00057c  00000000          DCW      0x0000,0x0000
000580  1ff80000          DCW      0x1ff8,0x0000
000584  00000000          DCW      0x0000,0x0000
000588  1ff80000          DCW      0x1ff8,0x0000
00058c  00000000          DCW      0x0000,0x0000
000590  00000000          DCW      0x0000,0x0000
000594  00000000          DCW      0x0000,0x0000
000598  00000000          DCW      0x0000,0x0000
00059c  00000000          DCW      0x0000,0x0000
0005a0  00000000          DCW      0x0000,0x0000
0005a4  00000000          DCW      0x0000,0x0000
0005a8  00000000          DCW      0x0000,0x0000
0005ac  00000000          DCW      0x0000,0x0000
0005b0  00080038          DCW      0x0008,0x0038
0005b4  01f007c0          DCW      0x01f0,0x07c0
0005b8  1f001800          DCW      0x1f00,0x1800
0005bc  1f0007c0          DCW      0x1f00,0x07c0
0005c0  01f00038          DCW      0x01f0,0x0038
0005c4  00080000          DCW      0x0008,0x0000
0005c8  00000000          DCW      0x0000,0x0000
0005cc  00000000          DCW      0x0000,0x0000
0005d0  000003e0          DCW      0x0000,0x03e0
0005d4  0ff80c18          DCW      0x0ff8,0x0c18
0005d8  180c180c          DCW      0x180c,0x180c
0005dc  18000c00          DCW      0x1800,0x0c00
0005e0  06000300          DCW      0x0600,0x0300
0005e4  018000c0          DCW      0x0180,0x00c0
0005e8  00c000c0          DCW      0x00c0,0x00c0
0005ec  00000000          DCW      0x0000,0x0000
0005f0  00c000c0          DCW      0x00c0,0x00c0
0005f4  00000000          DCW      0x0000,0x0000
0005f8  00000000          DCW      0x0000,0x0000
0005fc  00000000          DCW      0x0000,0x0000
000600  00000000          DCW      0x0000,0x0000
000604  07e01818          DCW      0x07e0,0x1818
000608  200429c2          DCW      0x2004,0x29c2
00060c  4a224411          DCW      0x4a22,0x4411
000610  44094409          DCW      0x4409,0x4409
000614  44092209          DCW      0x4409,0x2209
000618  13110ce2          DCW      0x1311,0x0ce2
00061c  40022004          DCW      0x4002,0x2004
000620  181807e0          DCW      0x1818,0x07e0
000624  00000000          DCW      0x0000,0x0000
000628  00000000          DCW      0x0000,0x0000
00062c  00000000          DCW      0x0000,0x0000
000630  00000380          DCW      0x0000,0x0380
000634  038006c0          DCW      0x0380,0x06c0
000638  06c006c0          DCW      0x06c0,0x06c0
00063c  0c600c60          DCW      0x0c60,0x0c60
000640  18301830          DCW      0x1830,0x1830
000644  18303ff8          DCW      0x1830,0x3ff8
000648  3ff8701c          DCW      0x3ff8,0x701c
00064c  600c600c          DCW      0x600c,0x600c
000650  c006c006          DCW      0xc006,0xc006
000654  00000000          DCW      0x0000,0x0000
000658  00000000          DCW      0x0000,0x0000
00065c  00000000          DCW      0x0000,0x0000
000660  000003fc          DCW      0x0000,0x03fc
000664  0ffc0c0c          DCW      0x0ffc,0x0c0c
000668  180c180c          DCW      0x180c,0x180c
00066c  180c0c0c          DCW      0x180c,0x0c0c
000670  07fc0ffc          DCW      0x07fc,0x0ffc
000674  180c300c          DCW      0x180c,0x300c
000678  300c300c          DCW      0x300c,0x300c
00067c  300c180c          DCW      0x300c,0x180c
000680  1ffc07fc          DCW      0x1ffc,0x07fc
000684  00000000          DCW      0x0000,0x0000
000688  00000000          DCW      0x0000,0x0000
00068c  00000000          DCW      0x0000,0x0000
000690  000007c0          DCW      0x0000,0x07c0
000694  1ff03838          DCW      0x1ff0,0x3838
000698  301c700c          DCW      0x301c,0x700c
00069c  60060006          DCW      0x6006,0x0006
0006a0  00060006          DCW      0x0006,0x0006
0006a4  00060006          DCW      0x0006,0x0006
0006a8  00066006          DCW      0x0006,0x6006
0006ac  700c301c          DCW      0x700c,0x301c
0006b0  1ff007e0          DCW      0x1ff0,0x07e0
0006b4  00000000          DCW      0x0000,0x0000
0006b8  00000000          DCW      0x0000,0x0000
0006bc  00000000          DCW      0x0000,0x0000
0006c0  000003fe          DCW      0x0000,0x03fe
0006c4  0ffe0e06          DCW      0x0ffe,0x0e06
0006c8  18061806          DCW      0x1806,0x1806
0006cc  30063006          DCW      0x3006,0x3006
0006d0  30063006          DCW      0x3006,0x3006
0006d4  30063006          DCW      0x3006,0x3006
0006d8  30061806          DCW      0x3006,0x1806
0006dc  18060e06          DCW      0x1806,0x0e06
0006e0  0ffe03fe          DCW      0x0ffe,0x03fe
0006e4  00000000          DCW      0x0000,0x0000
0006e8  00000000          DCW      0x0000,0x0000
0006ec  00000000          DCW      0x0000,0x0000
0006f0  00003ffc          DCW      0x0000,0x3ffc
0006f4  3ffc000c          DCW      0x3ffc,0x000c
0006f8  000c000c          DCW      0x000c,0x000c
0006fc  000c000c          DCW      0x000c,0x000c
000700  1ffc1ffc          DCW      0x1ffc,0x1ffc
000704  000c000c          DCW      0x000c,0x000c
000708  000c000c          DCW      0x000c,0x000c
00070c  000c000c          DCW      0x000c,0x000c
000710  3ffc3ffc          DCW      0x3ffc,0x3ffc
000714  00000000          DCW      0x0000,0x0000
000718  00000000          DCW      0x0000,0x0000
00071c  00000000          DCW      0x0000,0x0000
000720  00003ff8          DCW      0x0000,0x3ff8
000724  3ff80018          DCW      0x3ff8,0x0018
000728  00180018          DCW      0x0018,0x0018
00072c  00180018          DCW      0x0018,0x0018
000730  1ff81ff8          DCW      0x1ff8,0x1ff8
000734  00180018          DCW      0x0018,0x0018
000738  00180018          DCW      0x0018,0x0018
00073c  00180018          DCW      0x0018,0x0018
000740  00180018          DCW      0x0018,0x0018
000744  00000000          DCW      0x0000,0x0000
000748  00000000          DCW      0x0000,0x0000
00074c  00000000          DCW      0x0000,0x0000
000750  00000fe0          DCW      0x0000,0x0fe0
000754  3ff8783c          DCW      0x3ff8,0x783c
000758  600ee006          DCW      0x600e,0xe006
00075c  c0070003          DCW      0xc007,0x0003
000760  0003fe03          DCW      0x0003,0xfe03
000764  fe03c003          DCW      0xfe03,0xc003
000768  c007c006          DCW      0xc007,0xc006
00076c  c00ef03c          DCW      0xc00e,0xf03c
000770  3ff80fe0          DCW      0x3ff8,0x0fe0
000774  00000000          DCW      0x0000,0x0000
000778  00000000          DCW      0x0000,0x0000
00077c  00000000          DCW      0x0000,0x0000
000780  0000300c          DCW      0x0000,0x300c
000784  300c300c          DCW      0x300c,0x300c
000788  300c300c          DCW      0x300c,0x300c
00078c  300c300c          DCW      0x300c,0x300c
000790  3ffc3ffc          DCW      0x3ffc,0x3ffc
000794  300c300c          DCW      0x300c,0x300c
000798  300c300c          DCW      0x300c,0x300c
00079c  300c300c          DCW      0x300c,0x300c
0007a0  300c300c          DCW      0x300c,0x300c
0007a4  00000000          DCW      0x0000,0x0000
0007a8  00000000          DCW      0x0000,0x0000
0007ac  00000000          DCW      0x0000,0x0000
0007b0  00000180          DCW      0x0000,0x0180
0007b4  01800180          DCW      0x0180,0x0180
0007b8  01800180          DCW      0x0180,0x0180
0007bc  01800180          DCW      0x0180,0x0180
0007c0  01800180          DCW      0x0180,0x0180
0007c4  01800180          DCW      0x0180,0x0180
0007c8  01800180          DCW      0x0180,0x0180
0007cc  01800180          DCW      0x0180,0x0180
0007d0  01800180          DCW      0x0180,0x0180
0007d4  00000000          DCW      0x0000,0x0000
0007d8  00000000          DCW      0x0000,0x0000
0007dc  00000000          DCW      0x0000,0x0000
0007e0  00000600          DCW      0x0000,0x0600
0007e4  06000600          DCW      0x0600,0x0600
0007e8  06000600          DCW      0x0600,0x0600
0007ec  06000600          DCW      0x0600,0x0600
0007f0  06000600          DCW      0x0600,0x0600
0007f4  06000600          DCW      0x0600,0x0600
0007f8  06000618          DCW      0x0600,0x0618
0007fc  06180738          DCW      0x0618,0x0738
000800  03f001e0          DCW      0x03f0,0x01e0
000804  00000000          DCW      0x0000,0x0000
000808  00000000          DCW      0x0000,0x0000
00080c  00000000          DCW      0x0000,0x0000
000810  00003006          DCW      0x0000,0x3006
000814  18060c06          DCW      0x1806,0x0c06
000818  06060306          DCW      0x0606,0x0306
00081c  018600c6          DCW      0x0186,0x00c6
000820  00660076          DCW      0x0066,0x0076
000824  00de018e          DCW      0x00de,0x018e
000828  03060606          DCW      0x0306,0x0606
00082c  0c061806          DCW      0x0c06,0x1806
000830  30066006          DCW      0x3006,0x6006
000834  00000000          DCW      0x0000,0x0000
000838  00000000          DCW      0x0000,0x0000
00083c  00000000          DCW      0x0000,0x0000
000840  00000018          DCW      0x0000,0x0018
000844  00180018          DCW      0x0018,0x0018
000848  00180018          DCW      0x0018,0x0018
00084c  00180018          DCW      0x0018,0x0018
000850  00180018          DCW      0x0018,0x0018
000854  00180018          DCW      0x0018,0x0018
000858  00180018          DCW      0x0018,0x0018
00085c  00180018          DCW      0x0018,0x0018
000860  1ff81ff8          DCW      0x1ff8,0x1ff8
000864  00000000          DCW      0x0000,0x0000
000868  00000000          DCW      0x0000,0x0000
00086c  00000000          DCW      0x0000,0x0000
000870  0000e00e          DCW      0x0000,0xe00e
000874  f01ef01e          DCW      0xf01e,0xf01e
000878  f01ed836          DCW      0xf01e,0xd836
00087c  d836d836          DCW      0xd836,0xd836
000880  d836cc66          DCW      0xd836,0xcc66
000884  cc66cc66          DCW      0xcc66,0xcc66
000888  c6c6c6c6          DCW      0xc6c6,0xc6c6
00088c  c6c6c6c6          DCW      0xc6c6,0xc6c6
000890  c386c386          DCW      0xc386,0xc386
000894  00000000          DCW      0x0000,0x0000
000898  00000000          DCW      0x0000,0x0000
00089c  00000000          DCW      0x0000,0x0000
0008a0  0000300c          DCW      0x0000,0x300c
0008a4  301c303c          DCW      0x301c,0x303c
0008a8  303c306c          DCW      0x303c,0x306c
0008ac  306c30cc          DCW      0x306c,0x30cc
0008b0  30cc318c          DCW      0x30cc,0x318c
0008b4  330c330c          DCW      0x330c,0x330c
0008b8  360c360c          DCW      0x360c,0x360c
0008bc  3c0c3c0c          DCW      0x3c0c,0x3c0c
0008c0  380c300c          DCW      0x380c,0x300c
0008c4  00000000          DCW      0x0000,0x0000
0008c8  00000000          DCW      0x0000,0x0000
0008cc  00000000          DCW      0x0000,0x0000
0008d0  000007e0          DCW      0x0000,0x07e0
0008d4  1ff8381c          DCW      0x1ff8,0x381c
0008d8  700e6006          DCW      0x700e,0x6006
0008dc  c003c003          DCW      0xc003,0xc003
0008e0  c003c003          DCW      0xc003,0xc003
0008e4  c003c003          DCW      0xc003,0xc003
0008e8  c0036006          DCW      0xc003,0x6006
0008ec  700e381c          DCW      0x700e,0x381c
0008f0  1ff807e0          DCW      0x1ff8,0x07e0
0008f4  00000000          DCW      0x0000,0x0000
0008f8  00000000          DCW      0x0000,0x0000
0008fc  00000000          DCW      0x0000,0x0000
000900  00000ffc          DCW      0x0000,0x0ffc
000904  1ffc380c          DCW      0x1ffc,0x380c
000908  300c300c          DCW      0x300c,0x300c
00090c  300c300c          DCW      0x300c,0x300c
000910  180c1ffc          DCW      0x180c,0x1ffc
000914  07fc000c          DCW      0x07fc,0x000c
000918  000c000c          DCW      0x000c,0x000c
00091c  000c000c          DCW      0x000c,0x000c
000920  000c000c          DCW      0x000c,0x000c
000924  00000000          DCW      0x0000,0x0000
000928  00000000          DCW      0x0000,0x0000
00092c  00000000          DCW      0x0000,0x0000
000930  000007e0          DCW      0x0000,0x07e0
000934  1ff8381c          DCW      0x1ff8,0x381c
000938  700e6006          DCW      0x700e,0x6006
00093c  e003c003          DCW      0xe003,0xc003
000940  c003c003          DCW      0xc003,0xc003
000944  c003c003          DCW      0xc003,0xc003
000948  e0076306          DCW      0xe007,0x6306
00094c  3f0e3c1c          DCW      0x3f0e,0x3c1c
000950  3ff8f7e0          DCW      0x3ff8,0xf7e0
000954  c0000000          DCW      0xc000,0x0000
000958  00000000          DCW      0x0000,0x0000
00095c  00000000          DCW      0x0000,0x0000
000960  00000ffe          DCW      0x0000,0x0ffe
000964  1ffe3806          DCW      0x1ffe,0x3806
000968  30063006          DCW      0x3006,0x3006
00096c  30063806          DCW      0x3006,0x3806
000970  1ffe07fe          DCW      0x1ffe,0x07fe
000974  03060606          DCW      0x0306,0x0606
000978  0c061806          DCW      0x0c06,0x1806
00097c  18063006          DCW      0x1806,0x3006
000980  30066006          DCW      0x3006,0x6006
000984  00000000          DCW      0x0000,0x0000
000988  00000000          DCW      0x0000,0x0000
00098c  00000000          DCW      0x0000,0x0000
000990  000003e0          DCW      0x0000,0x03e0
000994  0ff80c1c          DCW      0x0ff8,0x0c1c
000998  180c180c          DCW      0x180c,0x180c
00099c  000c001c          DCW      0x000c,0x001c
0009a0  03f80fe0          DCW      0x03f8,0x0fe0
0009a4  1e003800          DCW      0x1e00,0x3800
0009a8  30063006          DCW      0x3006,0x3006
0009ac  300e1c1c          DCW      0x300e,0x1c1c
0009b0  0ff807e0          DCW      0x0ff8,0x07e0
0009b4  00000000          DCW      0x0000,0x0000
0009b8  00000000          DCW      0x0000,0x0000
0009bc  00000000          DCW      0x0000,0x0000
0009c0  00007ffe          DCW      0x0000,0x7ffe
0009c4  7ffe0180          DCW      0x7ffe,0x0180
0009c8  01800180          DCW      0x0180,0x0180
0009cc  01800180          DCW      0x0180,0x0180
0009d0  01800180          DCW      0x0180,0x0180
0009d4  01800180          DCW      0x0180,0x0180
0009d8  01800180          DCW      0x0180,0x0180
0009dc  01800180          DCW      0x0180,0x0180
0009e0  01800180          DCW      0x0180,0x0180
0009e4  00000000          DCW      0x0000,0x0000
0009e8  00000000          DCW      0x0000,0x0000
0009ec  00000000          DCW      0x0000,0x0000
0009f0  0000300c          DCW      0x0000,0x300c
0009f4  300c300c          DCW      0x300c,0x300c
0009f8  300c300c          DCW      0x300c,0x300c
0009fc  300c300c          DCW      0x300c,0x300c
000a00  300c300c          DCW      0x300c,0x300c
000a04  300c300c          DCW      0x300c,0x300c
000a08  300c300c          DCW      0x300c,0x300c
000a0c  300c1818          DCW      0x300c,0x1818
000a10  1ff807e0          DCW      0x1ff8,0x07e0
000a14  00000000          DCW      0x0000,0x0000
000a18  00000000          DCW      0x0000,0x0000
000a1c  00000000          DCW      0x0000,0x0000
000a20  00006003          DCW      0x0000,0x6003
000a24  30063006          DCW      0x3006,0x3006
000a28  3006180c          DCW      0x3006,0x180c
000a2c  180c180c          DCW      0x180c,0x180c
000a30  0c180c18          DCW      0x0c18,0x0c18
000a34  0e380630          DCW      0x0e38,0x0630
000a38  06300770          DCW      0x0630,0x0770
000a3c  03600360          DCW      0x0360,0x0360
000a40  01c001c0          DCW      0x01c0,0x01c0
000a44  00000000          DCW      0x0000,0x0000
000a48  00000000          DCW      0x0000,0x0000
000a4c  00000000          DCW      0x0000,0x0000
000a50  00006003          DCW      0x0000,0x6003
000a54  61c361c3          DCW      0x61c3,0x61c3
000a58  61c33366          DCW      0x61c3,0x3366
000a5c  33663366          DCW      0x3366,0x3366
000a60  33663366          DCW      0x3366,0x3366
000a64  33661b6c          DCW      0x3366,0x1b6c
000a68  1b6c1b6c          DCW      0x1b6c,0x1b6c
000a6c  1a2c1e3c          DCW      0x1a2c,0x1e3c
000a70  0e380e38          DCW      0x0e38,0x0e38
000a74  00000000          DCW      0x0000,0x0000
000a78  00000000          DCW      0x0000,0x0000
000a7c  00000000          DCW      0x0000,0x0000
000a80  0000e00f          DCW      0x0000,0xe00f
000a84  700c3018          DCW      0x700c,0x3018
000a88  18300c70          DCW      0x1830,0x0c70
000a8c  0e6007c0          DCW      0x0e60,0x07c0
000a90  03800380          DCW      0x0380,0x0380
000a94  03c006e0          DCW      0x03c0,0x06e0
000a98  0c701c30          DCW      0x0c70,0x1c30
000a9c  1818300c          DCW      0x1818,0x300c
000aa0  600ee007          DCW      0x600e,0xe007
000aa4  00000000          DCW      0x0000,0x0000
000aa8  00000000          DCW      0x0000,0x0000
000aac  00000000          DCW      0x0000,0x0000
000ab0  0000c003          DCW      0x0000,0xc003
000ab4  6006300c          DCW      0x6006,0x300c
000ab8  381c1838          DCW      0x381c,0x1838
000abc  0c300660          DCW      0x0c30,0x0660
000ac0  07e003c0          DCW      0x07e0,0x03c0
000ac4  01800180          DCW      0x0180,0x0180
000ac8  01800180          DCW      0x0180,0x0180
000acc  01800180          DCW      0x0180,0x0180
000ad0  01800180          DCW      0x0180,0x0180
000ad4  00000000          DCW      0x0000,0x0000
000ad8  00000000          DCW      0x0000,0x0000
000adc  00000000          DCW      0x0000,0x0000
000ae0  00007ffc          DCW      0x0000,0x7ffc
000ae4  7ffc6000          DCW      0x7ffc,0x6000
000ae8  30001800          DCW      0x3000,0x1800
000aec  0c000600          DCW      0x0c00,0x0600
000af0  03000180          DCW      0x0300,0x0180
000af4  00c00060          DCW      0x00c0,0x0060
000af8  00300018          DCW      0x0030,0x0018
000afc  000c0006          DCW      0x000c,0x0006
000b00  7ffe7ffe          DCW      0x7ffe,0x7ffe
000b04  00000000          DCW      0x0000,0x0000
000b08  00000000          DCW      0x0000,0x0000
000b0c  00000000          DCW      0x0000,0x0000
000b10  000003e0          DCW      0x0000,0x03e0
000b14  03e00060          DCW      0x03e0,0x0060
000b18  00600060          DCW      0x0060,0x0060
000b1c  00600060          DCW      0x0060,0x0060
000b20  00600060          DCW      0x0060,0x0060
000b24  00600060          DCW      0x0060,0x0060
000b28  00600060          DCW      0x0060,0x0060
000b2c  00600060          DCW      0x0060,0x0060
000b30  00600060          DCW      0x0060,0x0060
000b34  00600060          DCW      0x0060,0x0060
000b38  006003e0          DCW      0x0060,0x03e0
000b3c  03e00000          DCW      0x03e0,0x0000
000b40  00000030          DCW      0x0000,0x0030
000b44  00300060          DCW      0x0030,0x0060
000b48  00600060          DCW      0x0060,0x0060
000b4c  00c000c0          DCW      0x00c0,0x00c0
000b50  00c001c0          DCW      0x00c0,0x01c0
000b54  01800180          DCW      0x0180,0x0180
000b58  01800300          DCW      0x0180,0x0300
000b5c  03000300          DCW      0x0300,0x0300
000b60  06000600          DCW      0x0600,0x0600
000b64  00000000          DCW      0x0000,0x0000
000b68  00000000          DCW      0x0000,0x0000
000b6c  00000000          DCW      0x0000,0x0000
000b70  000003e0          DCW      0x0000,0x03e0
000b74  03e00300          DCW      0x03e0,0x0300
000b78  03000300          DCW      0x0300,0x0300
000b7c  03000300          DCW      0x0300,0x0300
000b80  03000300          DCW      0x0300,0x0300
000b84  03000300          DCW      0x0300,0x0300
000b88  03000300          DCW      0x0300,0x0300
000b8c  03000300          DCW      0x0300,0x0300
000b90  03000300          DCW      0x0300,0x0300
000b94  03000300          DCW      0x0300,0x0300
000b98  030003e0          DCW      0x0300,0x03e0
000b9c  03e00000          DCW      0x03e0,0x0000
000ba0  00000000          DCW      0x0000,0x0000
000ba4  01c001c0          DCW      0x01c0,0x01c0
000ba8  03600360          DCW      0x0360,0x0360
000bac  03600630          DCW      0x0360,0x0630
000bb0  06300c18          DCW      0x0630,0x0c18
000bb4  0c180000          DCW      0x0c18,0x0000
000bb8  00000000          DCW      0x0000,0x0000
000bbc  00000000          DCW      0x0000,0x0000
000bc0  00000000          DCW      0x0000,0x0000
000bc4  00000000          DCW      0x0000,0x0000
000bc8  00000000          DCW      0x0000,0x0000
000bcc  00000000          DCW      0x0000,0x0000
000bd0  00000000          DCW      0x0000,0x0000
000bd4  00000000          DCW      0x0000,0x0000
000bd8  00000000          DCW      0x0000,0x0000
000bdc  00000000          DCW      0x0000,0x0000
000be0  00000000          DCW      0x0000,0x0000
000be4  00000000          DCW      0x0000,0x0000
000be8  00000000          DCW      0x0000,0x0000
000bec  00000000          DCW      0x0000,0x0000
000bf0  0000ffff          DCW      0x0000,0xffff
000bf4  ffff0000          DCW      0xffff,0x0000
000bf8  00000000          DCW      0x0000,0x0000
000bfc  00000000          DCW      0x0000,0x0000
000c00  0000000c          DCW      0x0000,0x000c
000c04  000c000c          DCW      0x000c,0x000c
000c08  000c000c          DCW      0x000c,0x000c
000c0c  000c0000          DCW      0x000c,0x0000
000c10  00000000          DCW      0x0000,0x0000
000c14  00000000          DCW      0x0000,0x0000
000c18  00000000          DCW      0x0000,0x0000
000c1c  00000000          DCW      0x0000,0x0000
000c20  00000000          DCW      0x0000,0x0000
000c24  00000000          DCW      0x0000,0x0000
000c28  00000000          DCW      0x0000,0x0000
000c2c  00000000          DCW      0x0000,0x0000
000c30  00000000          DCW      0x0000,0x0000
000c34  00000000          DCW      0x0000,0x0000
000c38  00000000          DCW      0x0000,0x0000
000c3c  03f007f8          DCW      0x03f0,0x07f8
000c40  0c1c0c0c          DCW      0x0c1c,0x0c0c
000c44  0f000ff0          DCW      0x0f00,0x0ff0
000c48  0cf80c0c          DCW      0x0cf8,0x0c0c
000c4c  0c0c0f1c          DCW      0x0c0c,0x0f1c
000c50  0ff818f0          DCW      0x0ff8,0x18f0
000c54  00000000          DCW      0x0000,0x0000
000c58  00000000          DCW      0x0000,0x0000
000c5c  00000000          DCW      0x0000,0x0000
000c60  00000018          DCW      0x0000,0x0018
000c64  00180018          DCW      0x0018,0x0018
000c68  00180018          DCW      0x0018,0x0018
000c6c  03d80ff8          DCW      0x03d8,0x0ff8
000c70  0c381818          DCW      0x0c38,0x1818
000c74  18181818          DCW      0x1818,0x1818
000c78  18181818          DCW      0x1818,0x1818
000c7c  18180c38          DCW      0x1818,0x0c38
000c80  0ff803d8          DCW      0x0ff8,0x03d8
000c84  00000000          DCW      0x0000,0x0000
000c88  00000000          DCW      0x0000,0x0000
000c8c  00000000          DCW      0x0000,0x0000
000c90  00000000          DCW      0x0000,0x0000
000c94  00000000          DCW      0x0000,0x0000
000c98  00000000          DCW      0x0000,0x0000
000c9c  03c007f0          DCW      0x03c0,0x07f0
000ca0  0e300c18          DCW      0x0e30,0x0c18
000ca4  00180018          DCW      0x0018,0x0018
000ca8  00180018          DCW      0x0018,0x0018
000cac  0c180e30          DCW      0x0c18,0x0e30
000cb0  07f003c0          DCW      0x07f0,0x03c0
000cb4  00000000          DCW      0x0000,0x0000
000cb8  00000000          DCW      0x0000,0x0000
000cbc  00000000          DCW      0x0000,0x0000
000cc0  00001800          DCW      0x0000,0x1800
000cc4  18001800          DCW      0x1800,0x1800
000cc8  18001800          DCW      0x1800,0x1800
000ccc  1bc01ff0          DCW      0x1bc0,0x1ff0
000cd0  1c301818          DCW      0x1c30,0x1818
000cd4  18181818          DCW      0x1818,0x1818
000cd8  18181818          DCW      0x1818,0x1818
000cdc  18181c30          DCW      0x1818,0x1c30
000ce0  1ff01bc0          DCW      0x1ff0,0x1bc0
000ce4  00000000          DCW      0x0000,0x0000
000ce8  00000000          DCW      0x0000,0x0000
000cec  00000000          DCW      0x0000,0x0000
000cf0  00000000          DCW      0x0000,0x0000
000cf4  00000000          DCW      0x0000,0x0000
000cf8  00000000          DCW      0x0000,0x0000
000cfc  03c00ff0          DCW      0x03c0,0x0ff0
000d00  0c301818          DCW      0x0c30,0x1818
000d04  1ff81ff8          DCW      0x1ff8,0x1ff8
000d08  00180018          DCW      0x0018,0x0018
000d0c  18381c30          DCW      0x1838,0x1c30
000d10  0ff007c0          DCW      0x0ff0,0x07c0
000d14  00000000          DCW      0x0000,0x0000
000d18  00000000          DCW      0x0000,0x0000
000d1c  00000000          DCW      0x0000,0x0000
000d20  00000f80          DCW      0x0000,0x0f80
000d24  0fc000c0          DCW      0x0fc0,0x00c0
000d28  00c000c0          DCW      0x00c0,0x00c0
000d2c  07f007f0          DCW      0x07f0,0x07f0
000d30  00c000c0          DCW      0x00c0,0x00c0
000d34  00c000c0          DCW      0x00c0,0x00c0
000d38  00c000c0          DCW      0x00c0,0x00c0
000d3c  00c000c0          DCW      0x00c0,0x00c0
000d40  00c000c0          DCW      0x00c0,0x00c0
000d44  00000000          DCW      0x0000,0x0000
000d48  00000000          DCW      0x0000,0x0000
000d4c  00000000          DCW      0x0000,0x0000
000d50  00000000          DCW      0x0000,0x0000
000d54  00000000          DCW      0x0000,0x0000
000d58  00000000          DCW      0x0000,0x0000
000d5c  0de00ff8          DCW      0x0de0,0x0ff8
000d60  0e180c0c          DCW      0x0e18,0x0c0c
000d64  0c0c0c0c          DCW      0x0c0c,0x0c0c
000d68  0c0c0c0c          DCW      0x0c0c,0x0c0c
000d6c  0c0c0e18          DCW      0x0c0c,0x0e18
000d70  0ff80de0          DCW      0x0ff8,0x0de0
000d74  0c000c0c          DCW      0x0c00,0x0c0c
000d78  061c07f8          DCW      0x061c,0x07f8
000d7c  01f00000          DCW      0x01f0,0x0000
000d80  00000018          DCW      0x0000,0x0018
000d84  00180018          DCW      0x0018,0x0018
000d88  00180018          DCW      0x0018,0x0018
000d8c  07d80ff8          DCW      0x07d8,0x0ff8
000d90  1c381818          DCW      0x1c38,0x1818
000d94  18181818          DCW      0x1818,0x1818
000d98  18181818          DCW      0x1818,0x1818
000d9c  18181818          DCW      0x1818,0x1818
000da0  18181818          DCW      0x1818,0x1818
000da4  00000000          DCW      0x0000,0x0000
000da8  00000000          DCW      0x0000,0x0000
000dac  00000000          DCW      0x0000,0x0000
000db0  000000c0          DCW      0x0000,0x00c0
000db4  00c00000          DCW      0x00c0,0x0000
000db8  00000000          DCW      0x0000,0x0000
000dbc  00c000c0          DCW      0x00c0,0x00c0
000dc0  00c000c0          DCW      0x00c0,0x00c0
000dc4  00c000c0          DCW      0x00c0,0x00c0
000dc8  00c000c0          DCW      0x00c0,0x00c0
000dcc  00c000c0          DCW      0x00c0,0x00c0
000dd0  00c000c0          DCW      0x00c0,0x00c0
000dd4  00000000          DCW      0x0000,0x0000
000dd8  00000000          DCW      0x0000,0x0000
000ddc  00000000          DCW      0x0000,0x0000
000de0  000000c0          DCW      0x0000,0x00c0
000de4  00c00000          DCW      0x00c0,0x0000
000de8  00000000          DCW      0x0000,0x0000
000dec  00c000c0          DCW      0x00c0,0x00c0
000df0  00c000c0          DCW      0x00c0,0x00c0
000df4  00c000c0          DCW      0x00c0,0x00c0
000df8  00c000c0          DCW      0x00c0,0x00c0
000dfc  00c000c0          DCW      0x00c0,0x00c0
000e00  00c000c0          DCW      0x00c0,0x00c0
000e04  00c000c0          DCW      0x00c0,0x00c0
000e08  00c000f8          DCW      0x00c0,0x00f8
000e0c  00780000          DCW      0x0078,0x0000
000e10  0000000c          DCW      0x0000,0x000c
000e14  000c000c          DCW      0x000c,0x000c
000e18  000c000c          DCW      0x000c,0x000c
000e1c  0c0c060c          DCW      0x0c0c,0x060c
000e20  030c018c          DCW      0x030c,0x018c
000e24  00cc006c          DCW      0x00cc,0x006c
000e28  00fc019c          DCW      0x00fc,0x019c
000e2c  038c030c          DCW      0x038c,0x030c
000e30  060c0c0c          DCW      0x060c,0x0c0c
000e34  00000000          DCW      0x0000,0x0000
000e38  00000000          DCW      0x0000,0x0000
000e3c  00000000          DCW      0x0000,0x0000
000e40  000000c0          DCW      0x0000,0x00c0
000e44  00c000c0          DCW      0x00c0,0x00c0
000e48  00c000c0          DCW      0x00c0,0x00c0
000e4c  00c000c0          DCW      0x00c0,0x00c0
000e50  00c000c0          DCW      0x00c0,0x00c0
000e54  00c000c0          DCW      0x00c0,0x00c0
000e58  00c000c0          DCW      0x00c0,0x00c0
000e5c  00c000c0          DCW      0x00c0,0x00c0
000e60  00c000c0          DCW      0x00c0,0x00c0
000e64  00000000          DCW      0x0000,0x0000
000e68  00000000          DCW      0x0000,0x0000
000e6c  00000000          DCW      0x0000,0x0000
000e70  00000000          DCW      0x0000,0x0000
000e74  00000000          DCW      0x0000,0x0000
000e78  00000000          DCW      0x0000,0x0000
000e7c  3c7c7eff          DCW      0x3c7c,0x7eff
000e80  e3c7c183          DCW      0xe3c7,0xc183
000e84  c183c183          DCW      0xc183,0xc183
000e88  c183c183          DCW      0xc183,0xc183
000e8c  c183c183          DCW      0xc183,0xc183
000e90  c183c183          DCW      0xc183,0xc183
000e94  00000000          DCW      0x0000,0x0000
000e98  00000000          DCW      0x0000,0x0000
000e9c  00000000          DCW      0x0000,0x0000
000ea0  00000000          DCW      0x0000,0x0000
000ea4  00000000          DCW      0x0000,0x0000
000ea8  00000000          DCW      0x0000,0x0000
000eac  07980ff8          DCW      0x0798,0x0ff8
000eb0  1c381818          DCW      0x1c38,0x1818
000eb4  18181818          DCW      0x1818,0x1818
000eb8  18181818          DCW      0x1818,0x1818
000ebc  18181818          DCW      0x1818,0x1818
000ec0  18181818          DCW      0x1818,0x1818
000ec4  00000000          DCW      0x0000,0x0000
000ec8  00000000          DCW      0x0000,0x0000
000ecc  00000000          DCW      0x0000,0x0000
000ed0  00000000          DCW      0x0000,0x0000
000ed4  00000000          DCW      0x0000,0x0000
000ed8  00000000          DCW      0x0000,0x0000
000edc  03c00ff0          DCW      0x03c0,0x0ff0
000ee0  0c301818          DCW      0x0c30,0x1818
000ee4  18181818          DCW      0x1818,0x1818
000ee8  18181818          DCW      0x1818,0x1818
000eec  18180c30          DCW      0x1818,0x0c30
000ef0  0ff003c0          DCW      0x0ff0,0x03c0
000ef4  00000000          DCW      0x0000,0x0000
000ef8  00000000          DCW      0x0000,0x0000
000efc  00000000          DCW      0x0000,0x0000
000f00  00000000          DCW      0x0000,0x0000
000f04  00000000          DCW      0x0000,0x0000
000f08  00000000          DCW      0x0000,0x0000
000f0c  03d80ff8          DCW      0x03d8,0x0ff8
000f10  0c381818          DCW      0x0c38,0x1818
000f14  18181818          DCW      0x1818,0x1818
000f18  18181818          DCW      0x1818,0x1818
000f1c  18180c38          DCW      0x1818,0x0c38
000f20  0ff803d8          DCW      0x0ff8,0x03d8
000f24  00180018          DCW      0x0018,0x0018
000f28  00180018          DCW      0x0018,0x0018
000f2c  00180000          DCW      0x0018,0x0000
000f30  00000000          DCW      0x0000,0x0000
000f34  00000000          DCW      0x0000,0x0000
000f38  00000000          DCW      0x0000,0x0000
000f3c  1bc01ff0          DCW      0x1bc0,0x1ff0
000f40  1c301818          DCW      0x1c30,0x1818
000f44  18181818          DCW      0x1818,0x1818
000f48  18181818          DCW      0x1818,0x1818
000f4c  18181c30          DCW      0x1818,0x1c30
000f50  1ff01bc0          DCW      0x1ff0,0x1bc0
000f54  18001800          DCW      0x1800,0x1800
000f58  18001800          DCW      0x1800,0x1800
000f5c  18000000          DCW      0x1800,0x0000
000f60  00000000          DCW      0x0000,0x0000
000f64  00000000          DCW      0x0000,0x0000
000f68  00000000          DCW      0x0000,0x0000
000f6c  07b003f0          DCW      0x07b0,0x03f0
000f70  00700030          DCW      0x0070,0x0030
000f74  00300030          DCW      0x0030,0x0030
000f78  00300030          DCW      0x0030,0x0030
000f7c  00300030          DCW      0x0030,0x0030
000f80  00300030          DCW      0x0030,0x0030
000f84  00000000          DCW      0x0000,0x0000
000f88  00000000          DCW      0x0000,0x0000
000f8c  00000000          DCW      0x0000,0x0000
000f90  00000000          DCW      0x0000,0x0000
000f94  00000000          DCW      0x0000,0x0000
000f98  00000000          DCW      0x0000,0x0000
000f9c  03e003f0          DCW      0x03e0,0x03f0
000fa0  0e380c18          DCW      0x0e38,0x0c18
000fa4  003803f0          DCW      0x0038,0x03f0
000fa8  07c00c00          DCW      0x07c0,0x0c00
000fac  0c180e38          DCW      0x0c18,0x0e38
000fb0  07f003e0          DCW      0x07f0,0x03e0
000fb4  00000000          DCW      0x0000,0x0000
000fb8  00000000          DCW      0x0000,0x0000
000fbc  00000000          DCW      0x0000,0x0000
000fc0  00000000          DCW      0x0000,0x0000
000fc4  008000c0          DCW      0x0080,0x00c0
000fc8  00c000c0          DCW      0x00c0,0x00c0
000fcc  07f007f0          DCW      0x07f0,0x07f0
000fd0  00c000c0          DCW      0x00c0,0x00c0
000fd4  00c000c0          DCW      0x00c0,0x00c0
000fd8  00c000c0          DCW      0x00c0,0x00c0
000fdc  00c000c0          DCW      0x00c0,0x00c0
000fe0  07c00780          DCW      0x07c0,0x0780
000fe4  00000000          DCW      0x0000,0x0000
000fe8  00000000          DCW      0x0000,0x0000
000fec  00000000          DCW      0x0000,0x0000
000ff0  00000000          DCW      0x0000,0x0000
000ff4  00000000          DCW      0x0000,0x0000
000ff8  00000000          DCW      0x0000,0x0000
000ffc  18181818          DCW      0x1818,0x1818
001000  18181818          DCW      0x1818,0x1818
001004  18181818          DCW      0x1818,0x1818
001008  18181818          DCW      0x1818,0x1818
00100c  18181c38          DCW      0x1818,0x1c38
001010  1ff019e0          DCW      0x1ff0,0x19e0
001014  00000000          DCW      0x0000,0x0000
001018  00000000          DCW      0x0000,0x0000
00101c  00000000          DCW      0x0000,0x0000
001020  00000000          DCW      0x0000,0x0000
001024  00000000          DCW      0x0000,0x0000
001028  00000000          DCW      0x0000,0x0000
00102c  180c0c18          DCW      0x180c,0x0c18
001030  0c180c18          DCW      0x0c18,0x0c18
001034  06300630          DCW      0x0630,0x0630
001038  06300360          DCW      0x0630,0x0360
00103c  03600360          DCW      0x0360,0x0360
001040  01c001c0          DCW      0x01c0,0x01c0
001044  00000000          DCW      0x0000,0x0000
001048  00000000          DCW      0x0000,0x0000
00104c  00000000          DCW      0x0000,0x0000
001050  00000000          DCW      0x0000,0x0000
001054  00000000          DCW      0x0000,0x0000
001058  00000000          DCW      0x0000,0x0000
00105c  41c141c1          DCW      0x41c1,0x41c1
001060  61c36363          DCW      0x61c3,0x6363
001064  63636363          DCW      0x6363,0x6363
001068  36363636          DCW      0x3636,0x3636
00106c  36361c1c          DCW      0x3636,0x1c1c
001070  1c1c1c1c          DCW      0x1c1c,0x1c1c
001074  00000000          DCW      0x0000,0x0000
001078  00000000          DCW      0x0000,0x0000
00107c  00000000          DCW      0x0000,0x0000
001080  00000000          DCW      0x0000,0x0000
001084  00000000          DCW      0x0000,0x0000
001088  00000000          DCW      0x0000,0x0000
00108c  381c1c38          DCW      0x381c,0x1c38
001090  0c300660          DCW      0x0c30,0x0660
001094  03600360          DCW      0x0360,0x0360
001098  03600360          DCW      0x0360,0x0360
00109c  06600c30          DCW      0x0660,0x0c30
0010a0  1c38381c          DCW      0x1c38,0x381c
0010a4  00000000          DCW      0x0000,0x0000
0010a8  00000000          DCW      0x0000,0x0000
0010ac  00000000          DCW      0x0000,0x0000
0010b0  00000000          DCW      0x0000,0x0000
0010b4  00000000          DCW      0x0000,0x0000
0010b8  00000000          DCW      0x0000,0x0000
0010bc  30181830          DCW      0x3018,0x1830
0010c0  18301870          DCW      0x1830,0x1870
0010c4  0c600c60          DCW      0x0c60,0x0c60
0010c8  0ce006c0          DCW      0x0ce0,0x06c0
0010cc  06c00380          DCW      0x06c0,0x0380
0010d0  03800380          DCW      0x0380,0x0380
0010d4  01800180          DCW      0x0180,0x0180
0010d8  01c000f0          DCW      0x01c0,0x00f0
0010dc  00700000          DCW      0x0070,0x0000
0010e0  00000000          DCW      0x0000,0x0000
0010e4  00000000          DCW      0x0000,0x0000
0010e8  00000000          DCW      0x0000,0x0000
0010ec  1ffc1ffc          DCW      0x1ffc,0x1ffc
0010f0  0c000600          DCW      0x0c00,0x0600
0010f4  03000180          DCW      0x0300,0x0180
0010f8  00c00060          DCW      0x00c0,0x0060
0010fc  00300018          DCW      0x0030,0x0018
001100  1ffc1ffc          DCW      0x1ffc,0x1ffc
001104  00000000          DCW      0x0000,0x0000
001108  00000000          DCW      0x0000,0x0000
00110c  00000000          DCW      0x0000,0x0000
001110  00000300          DCW      0x0000,0x0300
001114  018000c0          DCW      0x0180,0x00c0
001118  00c000c0          DCW      0x00c0,0x00c0
00111c  00c000c0          DCW      0x00c0,0x00c0
001120  00c00060          DCW      0x00c0,0x0060
001124  00600030          DCW      0x0060,0x0030
001128  00600040          DCW      0x0060,0x0040
00112c  00c000c0          DCW      0x00c0,0x00c0
001130  00c000c0          DCW      0x00c0,0x00c0
001134  00c000c0          DCW      0x00c0,0x00c0
001138  01800300          DCW      0x0180,0x0300
00113c  00000000          DCW      0x0000,0x0000
001140  00000180          DCW      0x0000,0x0180
001144  01800180          DCW      0x0180,0x0180
001148  01800180          DCW      0x0180,0x0180
00114c  01800180          DCW      0x0180,0x0180
001150  01800180          DCW      0x0180,0x0180
001154  01800180          DCW      0x0180,0x0180
001158  01800180          DCW      0x0180,0x0180
00115c  01800180          DCW      0x0180,0x0180
001160  01800180          DCW      0x0180,0x0180
001164  01800180          DCW      0x0180,0x0180
001168  01800180          DCW      0x0180,0x0180
00116c  01800000          DCW      0x0180,0x0000
001170  00000060          DCW      0x0000,0x0060
001174  00c001c0          DCW      0x00c0,0x01c0
001178  01800180          DCW      0x0180,0x0180
00117c  01800180          DCW      0x0180,0x0180
001180  01800300          DCW      0x0180,0x0300
001184  03000600          DCW      0x0300,0x0600
001188  03000100          DCW      0x0300,0x0100
00118c  01800180          DCW      0x0180,0x0180
001190  01800180          DCW      0x0180,0x0180
001194  01800180          DCW      0x0180,0x0180
001198  00c00060          DCW      0x00c0,0x0060
00119c  00000000          DCW      0x0000,0x0000
0011a0  00000000          DCW      0x0000,0x0000
0011a4  00000000          DCW      0x0000,0x0000
0011a8  00000000          DCW      0x0000,0x0000
0011ac  00000000          DCW      0x0000,0x0000
0011b0  10f01ff8          DCW      0x10f0,0x1ff8
0011b4  0f080000          DCW      0x0f08,0x0000
0011b8  00000000          DCW      0x0000,0x0000
0011bc  00000000          DCW      0x0000,0x0000
0011c0  00000000          DCW      0x0000,0x0000
0011c4  00000000          DCW      0x0000,0x0000
0011c8  00000000          DCW      0x0000,0x0000
0011cc  00000000          DCW      0x0000,0x0000

                          AREA ||.data||, DATA, ALIGN=2

                  TextColor
000000  0000              DCW      0x0000
                  BackColor
000002  ffff              DCW      0xffff
                  LCDType
                          DCD      0x00009320
